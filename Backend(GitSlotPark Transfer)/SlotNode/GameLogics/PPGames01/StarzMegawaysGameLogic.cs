using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Akka.Event;
using GITProtocol;

namespace SlotGamesNode.GameLogics
{
    public class StarzMegaBetInfo : BasePPSlotBetInfo
    {
        public override float TotalBet
        {
            get { return BetPerLine * 20.0f;  }
        }
    }
    public class StarzMegawaysGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs117649starz";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return false;
            }
        }
        protected override int ClientReqLineCount
        {
            get
            {
                return 117649;
            }
        }
        protected override int ServerResLineCount
        {
            get { return 20; }
        }
        protected override int ROWS
        {
            get
            {
                return 7;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=3,10,3,3,10,3,3,9,3,3,9,3,7,9,6,6,9,7,7,8,6,6,8,7,6,8,10,12,8,6,6,10,10,12,10,6,8,10,10,12,10,8&nas=14&cfgs=3828&ver=2&def_sb=8,10,5,11,10,8&reel_set_size=5&def_sa=8,10,6,5,10,8&scatters=1~0,0,0,0,0,0~0,0,0,0,0,0~1,1,1,1,1,1&gmb=0,0,0&rt=d&wl_i=tbm~10000&sc=10.00,20.00,30.00,40.00,50.00,100.00,200.00,300.00,400.00,500.00,750.00,1000.00,2000.00,3000.00,4000.00,5000.00&defc=100.00&wilds=2~0,0,0,0,0,0~1,1,1,1,1,1;13~0,0,0,0,0,0~1,1,1,1,1,1&bonuses=0&fsbonus=&paytable=0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;50,30,15,10,0,0;20,15,12,8,0,0;15,12,10,6,0,0;12,10,8,5,0,0;12,10,8,5,0,0;10,8,6,4,0,0;10,8,6,4,0,0;8,7,5,2,0,0;8,7,5,2,0,0;8,7,5,2,0,0;0,0,0,0,0,0;0,0,0,0,0,0&rtp=94.54&reel_set0=3,3,7,7,6,6,8,9,9,6,6,7,7,11,11,3,3,5,5,1,11,11,12,12,9,9,10,10,8,8,9,9,11,11,4,4,8,8,10,10,11,11,8,8,4,4,11,11,5,5,1,9,9,11,11,8,8,3,3,6,6,8,8,11,11,12,12,7,7,10,10,1,9,9,7,7,6,6,12,12,12,10,10,10,5,5,8,8~3,3,10,10,9,9,8,5,5,10,10,10,4,4,11,11,6,6,11,11,11,10,10,12,12,12,9,9,9,5,5,11,11,11,7,7,1,8,8,11,11,7,7,8,8,6,6,7,7,7,8,8,9,9,7,7,4,4,11,11,11,9,9,9,5,5,6,6,6,1,5,5,3,3,12,12,12,7,7,7,4,4,8,8~3,3,6,6,10,10,10,4,10,10,8,8,8,1,12,12,10,10,3,3,7,7,8,8,7,7,7,12,12,10,10,11,11,6,6,1,8,8,11,11,11,6,6,12,12,12,5,5,5,4,4,10,10,10,5,5,7,7,9,9,9,5,5,1,11,11,9,9,10,10,10,8,8,11,11,7,7,7,7,11,11,11,6,6,6~3,3,6,6,12,12,12,4,10,10,8,8,8,1,12,12,10,10,3,3,7,7,8,8,7,7,7,12,12,10,10,11,11,6,6,1,8,8,11,11,11,6,6,12,12,12,5,5,5,4,4,10,10,10,5,5,7,7,9,9,9,5,5~3,3,10,10,9,9,8,5,5,10,10,10,4,4,11,11,6,6,11,11,11,10,10,12,12,12,9,9,9,5,5,12,12,12,7,7,1,8,8,12,12,7,7,8,8,6,6,7,7,7,8,8,9,9,7,7,4,4,12,12,12,9,9,9,5,5,6,6,6,1,5,5,3,3,12,12,12,7,7,7,4,4,8,8~3,3,7,7,6,6,8,9,9,6,6,7,7,11,11,3,3,5,5,11,11,12,12,9,9,10,10,8,8,9,9,12,12,4,4,8,8,10,10,12,12,8,8,4,4,12,12,5,5,1,9,9,12,12,8,8,3,3,6,6,8,8,11,11,12,12,7,7,10,10,1,9,9,7,7,6,6,12,12,12,10,10,10,5,5,8,8&reel_set2=12,12,12,12,7,7,6,6,9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8~9,6,6,3,3,11,11,11,6,6,5,5,12,12,4,4,10,10,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~3,3,7,7,9,4,4,10,10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~3,3,7,7,9,4,4,10,10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~10,6,6,3,3,11,11,11,6,6,5,5,12,12,4,4,9,9,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~12,12,12,12,7,7,6,6,9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8&t=243&reel_set1=7,7,6,6,9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8~11,11,11,6,6,5,5,12,12,4,4,10,10,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~10,10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~10,10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~11,11,11,6,6,5,5,12,12,4,4,9,9,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~7,7,6,6,9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8&reel_set4=9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8~6,6,5,5,12,12,4,4,10,10,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~6,6,5,5,12,12,4,4,9,9,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8&reel_set3=12,12,12,7,7,6,6,9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8~6,6,3,3,11,11,11,6,6,5,5,12,12,4,4,10,10,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~3,7,7,9,4,4,10,10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~3,7,7,9,4,4,10,10,8,8,8,5,5,3,3,12,12,8,8,7,7,7,10,10,11,11,12,12,8,8,11,11,11,11,6,6,5,5,5,4,4,10,10,10,5,5,7,7,7,9,9,9,5,5,9,9,12,12,10,10,10,10,11,11,12,12,7,7,7,7,6,6,6,4,4,3,3,6,6,6,4,4~6,6,3,3,11,11,11,6,6,5,5,12,12,4,4,9,9,6,6,8,8,8,10,10,12,12,12,5,5,10,10,10,7,7,7,8,8,7,7,8,8,6,6,7,7,7,8,8,8,9,9,7,7,4,4,9,9,9,6,6,6,6,5,5,5,5,3,3,12,12,12,4,4,8,8,9,9,11,11,11,12,12,12~12,12,12,7,7,6,6,9,9,6,6,7,7,8,8,12,12,5,5,11,11,12,12,10,10,8,8,9,9,12,12,4,4,8,8,6,6,11,11,8,8,4,4,5,5,9,9,11,11,9,9,3,3,8,8,6,6,11,11,7,7,10,10,9,9,7,7,6,6,10,10,10,5,5,8,8,10,10,11,11,8,8";
            }
        }        
        #endregion
        public StarzMegawaysGameLogic()
        {
            _gameID = GAMEID.StarzMegaWays;
            GameName = "StarzMegaWays";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
            dicParams.Add("reel_set", "0");
        }
        protected override void readBetInfoFromMessage(GITMessage message, string strGlobalUserID)
        {
            try
            {
                StarzMegaBetInfo betInfo    = new StarzMegaBetInfo();
                betInfo.BetPerLine          = (float)message.Pop();
                betInfo.LineCount           = (int)message.Pop();

                if (betInfo.BetPerLine <= 0.0f)
                {
                    _logger.Error("{0} betInfo.BetPerLine <= 0 in StarzMegawaysGameLogic::readBetInfoFromMessage {1}", strGlobalUserID, betInfo.BetPerLine);
                    return;
                }
                if (betInfo.LineCount != this.ClientReqLineCount)
                {
                    _logger.Error("{0} betInfo.LineCount is not matched {1}", strGlobalUserID, betInfo.LineCount);
                    return;
                }

                BasePPSlotBetInfo oldBetInfo = null;
                if (_dicUserBetInfos.TryGetValue(strGlobalUserID, out oldBetInfo))
                {
                    //만일 유저에게 남은 응답이 존재하는 경우
                    if (oldBetInfo.HasRemainResponse)
                        return;

                    oldBetInfo.BetPerLine   = betInfo.BetPerLine;
                    oldBetInfo.LineCount    = betInfo.LineCount;
                }
                else
                {
                    _dicUserBetInfos.Add(strGlobalUserID, betInfo);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in StarzMegawaysGameLogic::readBetInfoFromMessage {0}", ex);
            }
        }
        protected override BasePPSlotBetInfo restoreBetInfo(string strUserID, BinaryReader reader)
        {
            StarzMegaBetInfo betInfo = new StarzMegaBetInfo();
            betInfo.SerializeFrom(reader);
            return betInfo;
        }
        protected override BasePPSlotBetInfo newBetInfo()
        {
            return new StarzMegaBetInfo();
        }

        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
            if (dicParams.ContainsKey("wlc_v"))
            {
                string[] strParts = dicParams["wlc_v"].Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                for(int i = 0; i < strParts.Length; i++)
                {
                    string[] strValues = strParts[i].Split(new string[] { "~" }, StringSplitOptions.RemoveEmptyEntries);
                    strValues[1] = convertWinByBet(strValues[1], currentBet);
                    strParts[i] = string.Join("~", strValues);
                }
                dicParams["wlc_v"] = string.Join(";", strParts);

            }
        }
    }
}
