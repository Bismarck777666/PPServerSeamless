using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class WildWalkerGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs25walker";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return false;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 25; }
        }
        protected override int ServerResLineCount
        {
            get { return 25; }
        }
        protected override int ROWS
        {
            get
            {
                return 3;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=2,3,11,6,6,13,13,13,2,10,5,3,10,13,13,13,2,10,11,4,10,13,13,13&cfgs=3448&ver=2&def_sb=3,4,7,4,6,13,13,13&reel_set_size=5&def_sa=8,7,5,3,3,13,13,13&scatters=1~0,0,0,0,0,0,0,0~0,0,0,0,0,0,0,0~1,1,1,1,1,1,1,1&gmb=0,0,0&rt=d&sc=8.00,16.00,24.00,32.00,40.00,80.00,120.00,160.00,200.00,300.00,400.00,600.00,1000.00,2000.00,3000.00,4000.00&defc=40.00&wilds=2~0,0,0,0,150,30,0,0~1,1,1,1,1,1,1,1&bonuses=0&fsbonus=&paytable=0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0;10000,4500,1500,500,150,30,0,0;7000,3000,1200,400,100,25,0,0;5000,2000,900,300,75,20,0,0;3000,1500,500,200,50,15,0,0;2000,900,300,120,30,10,0,0;1500,500,200,75,20,8,0,0;500,200,90,30,10,4,0,0;500,200,90,30,10,4,0,0;500,200,90,30,10,4,0,0;500,200,90,30,10,4,0,0;0,0,0,0,0,0,0,0&reel_set0=10,10,10,4,7,9,8,3,12,12,12,5,11,10,12,6,1,11,11,11,5~1,11,11,11,9,8,5,10,11,7,10,10,10,3,6,12,12,12,12,4,11,12,8,7,12,11,6,10,6,7,10,11,10,7,11,7,11,10,7,12,11,6,12,4,12,7,11,7,10,11,6,12~4,10,10,10,7,12,11,5,9,12,12,12,10,11,11,11,3,8,1,6,8,11,10,8,12,11,12,11,10,6,11,12,11,12,6,7,11,8,11,5,11,8,10,9,11,12,11,10,12,11,3,7,3,8,11,12,11,10,9,11,12,10,12,11,9,7,12,8,10,8,10,12,5,3,9,1,8,10,7,9,12,7,12,10,11,9,12,10,9,11,7,12~4,4,4,4,8,12,9,11,5,6,1,3,7,11,11,11,10,5,5,5,6,6,6,12,12,12,11,5,12,6,11,12,7,5,6,5,12,5,12,11,6,12,11,5,3,12,3,7,3,12,6,7,3,6,12,5,11,12,11,3,5,11,3,12,6,7,12,3,5,12,5,11,5,11,12,11,8,11,8,3,11,5,12,11,5,11~10,6,7,7,7,1,3,4,4,4,8,12,12,12,5,9,4,11,11,11,12,7,11,12,9,12,9,7,12,9,7,12,9,5,12,4,12,7,9,7,9,4,9,11,9,12,4,11,5~13,13,13,13,13~13,13,13,13,13~13,13,13,13,13&accInit=[{id:0,mask:\"cp;tp;lvl;sc;cl\"}]&reel_set2=2,2,2,2,2~9,3,10,10,10,1,7,11,11,11,11,12,12,12,12,6,5,4,10,8,10,12,4,10,11,7,6,8,12,10,1,12,11,10,7,12,7,10,11,12,11,12,10,8,12,3,11,10,3,11,10,12,7,8,12,7,12,10,8,11,12,11,12,3,12,7,10,11,10,8,7,12,4,12,10,11,12,3,12,10,11,10,12,8,7,8,7,10,8,12,1,8,10~11,11,11,11,7,8,10,10,10,3,12,12,12,9,1,10,4,6,5,12,4,12~3,1,8,11,11,11,11,10,10,10,10,7,6,12,12,12,9,5,4,12,10,4,12,11,6,9,12,10,11,9,6,12,9,6,12,8,11,10,11,10,11,6,11,10,6,9,12,11,10,9,10,11,10,1,9,12,5,11,12,11,12,10,9,10,9,10,6,11,12,8,6,8,11,10,12,11,4,9,11,8,1,4,6,11,6,10,11,9,11,10,11,12,10,6,11,12,8,10,11,12~6,7,12,12,12,5,10,10,10,1,11,11,11,4,8,11,12,10,9,3,12~5,7,1,4,11,11,11,9,11,12,12,12,10,10,10,10,3,6,12,8,9,10,11,9,12,11,12,10,8,10,4,12,7,8,10,12,4,11,9,10,7~13,13,13,13,13~13,13,13,13,13&reel_set1=11,1,8,10,10,10,6,11,11,11,4,12,12,12,12,5,7,3,10,9,12,1,10,3,5,12,5,10,5,8,4,12,10,8,4,10,5,12,5,10,5~10,10,10,4,12,12,12,3,6,12,9,8,11,1,7,10,5,11,11,11,7,8,7,12,6,5,11,12,1,5,8,6,11,1,8,11,12,9,12~9,12,12,12,11,6,10,12,3,1,11,11,11,7,8,10,10,10,5,4,11,7,11,7,11,8,1,10,12,1,12,5,11,12,11,5,1,10,12,10,12,7,5,12,10,5,11,10,7,11,3,12,7,3,1,7,11,7,12,11,7,1,5,12,11,5,11,12,10~12,12,12,1,9,8,12,6,5,11,4,11,11,11,7,3,10,10,10,10,11,5,10,5,11,5,11,1,9,4,7,5,9,10,11,10,11,9,11,9,11,10,11,9~11,11,11,5,12,12,12,4,10,10,10,10,12,3,6,7,11,9,1,8,10,8,10,12,10,12,10,12,10,12,10,12,10,9,12,10,7,8,12,9,8,12,7,10,12,8,3,8,12,4,12,10,12,8,12,7,12,10,12,9,10,12,10,8,10,12,10,12,3,10,6,8,12~13,13,13,13,13~13,13,13,13,13~13,13,13,13,13&reel_set4=2,2,2,2,2~2,2,2,2,2~2,2,2,2,2~11,11,11,6,7,10,3,4,10,10,10,8,12,12,12,9,12,11,1,5,12,8,5,9,12,9,10,1,9,12,1,10,12,10,9,8,10,6,12,8,12,7,9,12,8,12,8,12~11,11,11,12,11,12,12,12,7,4,3,9,6,1,10,10,10,5,8,10,1,10,12,10,12,10,12,8,10,7,10,9,12,7,3,4,8,10,3,4,5,12,4~9,12,12,12,8,11,11,11,6,10,3,1,12,5,7,10,10,10,4,11,6,10,7,1,7,6,10,11,10,11,8,7,10,11,12,3,12,5,10,1,10,6~5,11,10,10,10,10,9,12,12,12,12,7,1,11,11,11,4,8,3,6,1,4,11,4,9,11,3,9,11,12,11,12,9,7,6,12,10,11,10,11,4,11,12,10,11~12,12,12,4,11,11,11,12,5,10,10,10,6,7,3,8,9,10,1,11,1,10,8,3,1,11,1,10,7,11,9,10,9,3,11,10,9,10,3,10,3,9,10,6,1,6,3,6,11,10,9,7,11,10,6,4,1,6,10,3,11,9,11,4,6,11,1,11,3,10,1,3,1,6,1,3,10,3,10,1,10,9,7,3,1,3,1,10,6,1,7,11,1,11,1,10,1,11,6,10,6,9&reel_set3=2,2,2,2,2~2,2,2,2,2~11,11,11,8,10,1,11,12,12,12,9,4,10,10,10,3,12,5,7,6,12,8,12,9,10,9,12,9,6,1,6,8,9,3,10,7,8,10,7,5,7,12,9,12,8,9,8,7,8,4,6,12,10,4,10,3,5,10,7,4,9,10,5,10,3,12,3~1,9,8,5,6,4,12,10,10,10,11,10,12,12,12,7,11,11,11,3,11,7,12,11,7,11,4,12,10,7,11,12,11,12,11,10,11,4,11,10,11,8,9,11,8,11,10,11,10,11,7,11,7,4,9,11,7,11,7,10,11,7,11~11,11,11,8,5,11,12,12,12,6,10,4,10,10,10,3,1,12,9,7,4,10,8,6,4,8,6,8,6,10,4,8,6,4,9,3~9,6,4,3,8,7,11,11,11,1,10,11,12,5,10,10,10,12,12,12,11,5,6,4,10,12,6,11,5,12,7,4,11,7,1,11~12,12,12,12,10,11,6,4,10,10,10,8,5,11,11,11,3,7,9,1,11,4,10,3,11,9,4,10,9,6,4,9,11,8,4~13,13,13,13,13";
            }
        }
	
	
        #endregion
        public WildWalkerGameLogic()
        {
            _gameID = GAMEID.WildWalker;
            GameName = "WildWalker";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["reel_set"] = "0";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
        }
	
    }
}
