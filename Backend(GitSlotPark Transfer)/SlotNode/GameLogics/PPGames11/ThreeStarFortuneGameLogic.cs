using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class ThreeStarFortuneGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs10threestar";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return false;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 10; }
        }
        protected override int ServerResLineCount
        {
            get { return 10; }
        }
        protected override int ROWS
        {
            get
            {
                return 3;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "msi=10~11~12~13~14~15~16&def_s=3,4,5,6,7,8,9,8,7,6,5,4,3,4,5&cfgs=2968&ver=2&reel_set_size=2&def_sb=3,4,5,6,7&def_sa=3,4,5,6,7&scatters=1~0,0,0,0,0~0,0,0,0,0~1,1,1,1,1&gmb=0,0,0&rt=d&sc=20.00,40.00,60.00,80.00,100.00,200.00,300.00,400.00,500.00,750.00,1000.00,1500.00,2500.00,5000.00,7500.00,10000.00&defc=100.00&wilds=2~0,0,0,0,0~1,1,1,1,1;17~0,0,0,0,0~1,1,1,1,1;18~0,0,0,0,0~1,1,1,1,1;19~0,0,0,0,0~1,1,1,1,1;20~0,0,0,0,0~1,1,1,1,1;21~0,0,0,0,0~1,1,1,1,1;22~0,0,0,0,0~1,1,1,1,1&bonuses=0&fsbonus=&paytable=0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;250,200,50,0,0;120,60,25,0,0;60,25,10,0,0;50,20,8,0,0;40,15,7,0,0;25,10,5,0,0;25,10,5,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0&reel_set0=9,9,9,9,9,6,6,6,6,6,7,7,9,9,5,5,5,7,6,6,7,7,7,6,6,6,5,5,8,9,9,9,4,4,6,6,6,3,3,3,6,6,6,9,9,7,7,7,3,6,8,8,6,6,4,4,4,7,7,7,9,9,9,8,8,8,8~3,3,3,5,5,4,4,4,8,8,8,6,6,6,6,8,8,5,5,5,4,6,6,7,7,7,8,8,8,17,5,5,8,6,6,8,8,8,8,3,9,9,9,5,5,5,9,6,6,7,7,6,6,6,7,8,8,8,5~8,8,8,9,9,4,4,4,4,4,8,8,8,8,5,5,5,9,6,9,9,9,4,9,7,7,7,7,7,4,4,4,7,7,7,5,7,3,18,6,6,5,5,5,3,3,3,3,8,8,7,7,7,7,8,8,8,6,6,6,8,7,7,9,9~5,5,4,4,4,5,5,5,3,3,4,4,8,4,9,8,3,3,5,5,3,3,3,3,3,4,4,4,8,8,8,19,3,3,3,5,5,9,9,6,6,8,8,7,7,7,7,5,9,9,9,8,8,8,4,4,4,5,5,7,8,8,8~6,6,9,9,7,7,6,7,7,6,6,6,9,9,9,9,7,7,7,4,9,7,7,9,9,7,4,4,6,6,6,5,7,7,8,8,8,5,5,5,7,7,9,9,9,6,6,6,7,7,7,3,3,3,8,8,8,6,6,9,9,9&reel_set1=10,10,10,10,10,10,10,10,10,10,15,10,10,15,10,10,10,10,10,15,10,15,10,10,15,10,10,15,10,10,15,10,10,10,15,10,10,10,15,10,10,10,10,10,10,10,10,10,15,10,10,10,10,10,15,10,10,10,10,15,10,10,10,10,15,10,10,15,15~15,11,11,15,15,11,11,11,15,11,11,15,11,11,15,11,11,15,11,11,11,11,15,11,11,11,11,11,11,11,11,11,15,11,11,11,11,11,17,11,11,11,11,11,15,11,15,11,11,15,11,11,15,11,11,15,11,11,11,11,11,11,11,11,11,11~12,12,15,12,15,12,12,15,12,12,18,12,12,12,12,12,12,12,12,12,12,15,12,12,12,12,15,12,12,15,12,12,15,12,12,12,12,12,15,12,12,12,12,12,12,12,12,12,15,15,12,12,12,15,12,12,12,15,12,12,15,12,12,15~13,13,16,13,19,13,13,16,13,13,13,16,13,13,13,13,13,13,13,16,13,13,13,13,13,16,13,13,16,13,13,13,13,13,13,16,16,13,13,13,13,16,13,13,16,13,13,13,13,13,13,13,13,13,16,13,13,13,16,16~14,14,14,16,14,16,16,14,14,16,16,14,14,16,14,14,14,16,14,14,14,14,14,14,16,14,14,14,14,14,14,14,14,14,16,16,14,16,14,14,14,14,14,14,14,16,14,14,14,16,14,14,14,14,14,14,14,14,14,14,16,14,14,14,14,16";
            }
        }
	
	
        #endregion
        public ThreeStarFortuneGameLogic()
        {
            _gameID = GAMEID.ThreeStarFortune;
            GameName = "ThreeStarFortune";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["reel_set"] = "0";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
        }
	
    }
}
