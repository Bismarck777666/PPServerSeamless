using Akka.Event;
using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class StarBountyGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vswayshive";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return false;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 20; }
        }
        protected override int ServerResLineCount
        {
            get { return 20; }
        }
        protected override int ROWS
        {
            get
            {
                return 4;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=4,8,4,4,4,4,5,9,5,5,5,5,6,10,6,6,6,6,7,11,7,7,7,7&cfgs=3427&ver=2&def_sb=15,14,12,5,6,11&reel_set_size=12&def_sa=12,13,12,14,15,11&scatters=1~0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0~24,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6,5,4,3,0,0~1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&gmb=0,0,0&rt=d&reel_set10=12,9,15,12,13,6,4,11,10,14,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4&sc=10.00,20.00,30.00,40.00,50.00,100.00,150.00,200.00,250.00,375.00,500.00,750.00,1250.00,2500.00,3750.00,5000.00&defc=50.00&reel_set11=12,9,15,12,13,6,4,11,10,14,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4&purInit_e=1&wilds=2~0,0,0,0,0,0~1,1,1,1,1,1;3~0,0,0,0,0,0~1,1,1,1,1,1;17~0,0,0,0,0,0~1,1,1,1,1,1&bonuses=0&fsbonus=&paytable=0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;300,150,40,20,0,0;200,60,24,16,0,0;100,40,20,12,0,0;100,40,20,12,0,0;60,30,12,8,0,0;60,30,12,8,0,0;40,16,6,4,0,0;40,16,6,4,0,0;30,10,4,2,0,0;30,10,4,2,0,0;20,8,2,1,0,0;20,8,2,1,0,0;0,0,0,0,0,0;0,0,0,0,0,0&total_bet_max=7,500,000.00&reel_set0=12,9,15,12,13,6,4,11,10,14,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4&accInit=[{id:0,mask:\"cp;mp\"}]&reel_set2=12,9,15,12,13,6,4,11,10,14,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4&t=243&reel_set1=12,9,15,12,13,6,4,11,10,14,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4&reel_set4=12,9,15,12,13,6,4,11,10,14,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4&purInit=[{type:\"fs\",bet:1500}]&reel_set3=12,9,15,12,13,6,4,11,10,14,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4&reel_set6=12,9,15,12,13,6,4,11,10,14,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4&reel_set5=12,9,15,12,13,6,4,11,10,14,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4&reel_set8=12,9,15,12,13,6,4,11,10,14,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4&reel_set7=12,9,15,12,13,6,4,11,10,14,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,1,14,8,11,9,5,4&reel_set9=12,9,15,12,13,6,4,11,10,14,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,3,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4~12,9,15,12,13,6,4,11,10,14,2,6,15,6,15,7,13,12,5,14,11,5,13,8,4,10,7,9,7,10,8,14,8,11,9,5,4&total_bet_min=10.00";
            }
        }
	
        protected override double PurchaseFreeMultiple
        {
            get { return 75; }
        }
        protected override bool SupportPurchaseFree
        {
            get { return true; }
        }
        protected override bool HasPurEnableOption
        {
            get { return true; }
        }
	
	
        #endregion
        public StarBountyGameLogic()
        {
            _gameID = GAMEID.StarBounty;
            GameName = "StarBounty";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["reel_set"] = "0";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
            if (dicParams.ContainsKey("tmb_res"))
                dicParams["tmb_res"] = convertWinByBet(dicParams["tmb_res"], currentBet);
            if (dicParams.ContainsKey("tmb_win"))
                dicParams["tmb_win"] = convertWinByBet(dicParams["tmb_win"], currentBet);
            if (dicParams.ContainsKey("wlc_v"))
            {
                string[] strParts = dicParams["wlc_v"].Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                for (int i = 0; i < strParts.Length; i++)
                {
                    string[] strValues = strParts[i].Split(new string[] { "~" }, StringSplitOptions.RemoveEmptyEntries);
                    strValues[1] = convertWinByBet(strValues[1], currentBet);
                    strParts[i] = string.Join("~", strValues);
                }
                dicParams["wlc_v"] = string.Join(";", strParts);

            }
        }

        protected override void readBetInfoFromMessage(GITMessage message, string strUserID)
        {
            try
            {
                BasePPSlotBetInfo betInfo = new BasePPSlotBetInfo();
                betInfo.BetPerLine = (float)message.Pop();
                betInfo.LineCount = (int)message.Pop();
		
		
                if (message.DataNum >= 3)
                    betInfo.PurchaseFree = true;
                else
                    betInfo.PurchaseFree = false;
		
                if (betInfo.BetPerLine <= 0.0f)
                {
                    _logger.Error("{0} betInfo.BetPerLine <= 0 in StarBountyGameLogic::readBetInfoFromMessage {1}", strUserID, betInfo.BetPerLine);
                    return;
                }
		
                if (betInfo.LineCount != this.ClientReqLineCount)
                {
                    _logger.Error("{0} betInfo.LineCount is not matched {1}", strUserID, betInfo.LineCount);
                    return;
                }

                BasePPSlotBetInfo oldBetInfo = null;
                if (_dicUserBetInfos.TryGetValue(strUserID, out oldBetInfo))
                {
                    if (oldBetInfo.HasRemainResponse)
                        return;

                    oldBetInfo.BetPerLine   = betInfo.BetPerLine;
                    oldBetInfo.LineCount    = betInfo.LineCount;
                    oldBetInfo.MoreBet      = betInfo.MoreBet;
                    oldBetInfo.PurchaseFree = betInfo.PurchaseFree;
                }
                else
                {
                    _dicUserBetInfos.Add(strUserID, betInfo);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in StarBountyGameLogic::readBetInfoFromMessage {0}", ex);
            }
        }
	
    }
}
