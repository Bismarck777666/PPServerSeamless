using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using GITProtocol;

namespace SlotGamesNode.GameLogics
{
    class CowBoysGoldGameLogic : BasePPSlotGame
    {

        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs10cowgold";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return true;
            }
        }
        protected override int ClientReqLineCount
        {
            get
            {
                return 10;
            }
        }
        protected override int ServerResLineCount
        {
            get { return 10; }
        }
        protected override int ROWS
        {
            get
            {
                return 3;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=5,6,5,11,7,10,9,4,9,12,11,7,5,7,7&cfgs=4271&ver=2&mo_s=8&mo_v=0,10,20,30,40,50,80,100,150,200,250,500,750,1000&def_sb=4,1,6,12,11&reel_set_size=10&def_sa=6,10,6,10,4&balance_bonus=0.00&scatters=1~0,0,0,0,0~0,0,0,0,0~1,1,1,1,1&gmb=0,0,0&rt=d&sc=20.00,30.00,40.00,50.00,100.00,200.00,300.00,400.00,500.00,750.00,1000.00,2000.00,3000.00,4000.00,5000.00,6000.00,7000.00,8000.00,10000.00&defc=200.00&wilds=2~0,0,0,0,0~1,1,1,1,1&bonuses=0&fsbonus=&paytable=0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;750,200,50,5,0;500,150,30,0,0;250,100,25,0,0;200,100,20,0,0;100,50,10,0,0;50,25,5,0,0;50,25,5,0,0;25,10,5,0,0;25,10,5,0,0;0,0,0,0,0;100,50,10,0,0;100,50,10,0,0;100,50,10,0,0;100,50,10,0,0;100,50,10,0,0;100,50,10,0,0;100,50,10,0,0;100,50,10,0,0;100,50,10,0,0;100,50,10,0,0&rtp=94.50&reel_set0=7,9,8,8,8,2,12,8,6,5,10,11,4,8,5,8,11,8,9,8~11,4,2,8,8,8,5,8,10,6,9,7,1,12,5,2,1,10,12,10,8~8,8,8,10,2,7,9,8,1,11,12,6,5,4,5,6,1,9,2,5,12,9,12,2,4,12,1,12,9,5,2,4,7,1,9,5,10,9,12,7~2,10,11,9,7,12,8,8,8,1,5,8,6,4,7,1,7,1,8,7,4,7~10,3,7,8,8,8,8,9,6,12,4,5,11,2,8,5,9,12,8,5,8,4,8,12,8,4,7,12,7,11,3,12,4,12,9,8,9,8,7,4,8,9,7,12,9,12,11,8,4,8,4,9,4,8,12,8,12,9,8&accInit=[{id:0,mask:\"cp; mp\"}]&reel_set2=11,8,8,8,4,2,9,8,5,6,10,7,12,9,5,6,4,6,5,6,5,4,5,6,9,5,9~8,8,8,8,7,5,9,6,11,12,10,2,4,10,6~8,8,8,8,11,10,2,6,7,12,1,9,5,4,11,6,9,6,9,10,7,6,9,6,9,10,11~11,6,1,2,12,7,8,8,8,8,9,5,10,4,8,6,8,7,8,2,8,2,8,2,8,6,4,7,5,6~8,9,11,4,5,9,3,9,12,7,7,9,3,10,2,12,8,12,12,4,9,2,11,5,12,8,8,8,11,6,4,11,3,12,5,11,10,12,4,9&reel_set1=8,10,7,4,12,6,11,9,5,2,4,12,9,4,5,9,4,2,11,12,5,4,5,4,9,5,4,7,9,7,9~2,5,12,1,8,10,4,7,11,9,6,9,11,9,12,1,4,5,1,7,9,5,12,8,1~10,11,1,4,5,8,12,9,6,7,2,8,5,8,7,9,6,2,8~6,8,12,5,4,7,10,2,1,11,9,10,5,12,10,4,8,11,8,10,4,5,8,9,8,12,4,11,10,1,11,8,12,5,10,8,11,5,9,5,11,5,4,7,11,4,10,9,8,12,8,4,9,5,8,4,5,11,8,11,1,8,9,11,1,7,4,9,11,8,4,10,11,10,4,5~12,7,10,8,4,6,5,3,2,11,9,5,8,3,9,6,10&reel_set4=8,8,8,7,12,8,5,2,6,9,10,11,4,10,5,2,5,11,9,5,11,5,2,5,11,5,11,5,4,12,4,12,5,2,12,11~7,8,8,8,4,6,1,11,5,10,9,2,12,8,10,1,10,1~4,12,8,8,8,8,7,10,6,11,1,9,2,5,6,7,10,8,5,12,7,9,8,6,8,10,9,8,11,6,1,8,5,11,10~8,8,8,2,12,4,8,9,10,11,7,6,5,10,5~8,9,11,4,5,9,3,9,12,7,7,9,3,10,2,12,8,12,12,4,9,2,11,5,12,8,8,8,11,6,4,11,3,12,5,11,10,12,4,9&reel_set3=10,8,8,8,9,12,7,8,4,2,5,11,6,7,4,8~8,8,8,12,4,9,10,11,1,7,6,2,5,8,9,4,9,7,11,6,12,6,4,11,12,9,7,6~6,8,8,8,4,2,11,9,7,8,5,12,10,8,10,2,8,7,12,8,12,2,8,2,9,8~5,8,8,8,7,8,1,4,9,2,11,12,6,10,1,8,4,8,10,1,11,6,8,10,9,8,7,12,10,12,10,8~8,9,11,4,5,9,3,9,12,7,7,9,3,10,2,12,8,12,12,4,9,2,11,5,12,8,8,8,11,6,4,11,3,12,5,11,10,12,4,9&reel_set6=4,11,8,12,2,10,7,6,5,9,11,12,11,12,5,7,12~5,10,9,2,6,7,11,4,8,12,6,2,4,6,2,6,2,11,2,11,4,2,9,6,8,10,2,4,6,10,2,8,6,9,8,10,6,2,4,2~7,6,10,9,2,12,11,8,5,4,9,10,9,8,12,9,12,10,11,10,9,4,10,11,10,6,10,8,6,8,6,8,9,2,9,8,10,2,8,2,10~4,5,9,7,12,8,11,6,10,2,8,10,11,10~8,9,11,4,5,9,3,9,12,7,7,9,3,10,2,12,8,12,12,4,9,2,11,5,12,8,8,8,11,6,4,11,3,12,5,11,10,12,4,9&reel_set5=8,8,8,7,6,11,5,10,4,2,8,9,12,10,6,10,4,12,10,12,10,9,11~7,8,8,8,2,11,5,10,6,4,8,9,12,8,4,9,4,10,4,9,5,12,5,11,4,12,9,10,4,5,4,5,4,12,5,12,8,4,8,11,5,4,5~8,8,8,11,6,10,2,7,5,8,9,4,12,11,9,2,11~8,8,8,5,8,4,6,11,2,9,7,12,10,5,7,10,9,10,2,7,5,9,11,2,10,4,6,10,5,12,11,6,2,6,7,5,2,6,2,7,11,5,9,6,7,9~8,9,11,4,5,9,3,9,12,7,7,9,3,10,2,12,8,12,12,4,9,2,11,5,12,8,8,8,11,6,4,11,3,12,5,11,10,12,4,9&reel_set8=8,8,8,10,7,11,2,12,5,9,8,4,6,2,7,2,7,9,2,7,2,7,2,7,2~8,8,8,6,11,4,9,2,5,10,1,12,8,7,11,7,9,1,11,10,12,9~1,4,10,9,6,8,6~8,8,8,7,8,2,5,12,11,1,6,10,9,4,10,11,12,11,12,2,11,7,12,11,2,11,5,11,12,10,9,7,10,12~8,9,11,4,5,9,3,9,12,7,7,9,3,10,2,12,8,12,12,4,9,2,11,5,12,8,8,8,11,6,4,11,3,12,5,11,10,12,4,9&reel_set7=9,2,8,4,11,8,8,8,6,12,10,7,5,8,11,8,12,8,12,8,12,8,5,12~10,8,6,5,1,8~4,11,8,8,8,1,5,12,6,7,10,2,8,9,7,8,7,9,7,9,1,5,11,8,7,11,6,1,7,1,8,1,12,1,8,6~5,8,8,8,2,12,1,7,10,11,8,4,6,9,8,2,10,12,8,7,10,8,12,6,10,7,8,7~8,9,11,4,5,9,3,9,12,7,7,9,3,10,2,12,8,12,12,4,9,2,11,5,12,8,8,8,11,6,4,11,3,12,5,11,10,12,4,9&reel_set9=8,8,8,12,7,4,6,2,9,10,8,11,5,11~8,8,8,11,8,7,10,1,5,4,6,2,12,9,5,7,12,11,12,10,12,4,7~9,8,8,8,8,10,7,11,1,12,6,4,5,2,8,2,4,7,8,5,8,7,10,7,2,8,4,5,7,8,2~9,4,6,12,5,1,4~8,9,11,4,5,9,3,9,12,7,7,9,3,10,2,12,8,12,12,4,9,2,11,5,12,8,8,8,11,6,4,11,3,12,5,11,10,12,4,9";
            }
        }
        #endregion
        public CowBoysGoldGameLogic()
        {
            _gameID = GAMEID.CowBoysGold;
            GameName = "CowBoysGold";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
            dicParams["reel_set"] = "0";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
            if (dicParams.ContainsKey("mo_tw"))
                dicParams["mo_tw"] = convertWinByBet(dicParams["mo_tw"], currentBet);          
        }
    }
}
