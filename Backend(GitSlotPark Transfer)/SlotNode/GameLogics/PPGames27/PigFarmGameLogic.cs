using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class PigFarmGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs25pfarmfp";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return false;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 25; }
        }
        protected override int ServerResLineCount
        {
            get { return 25; }
        }
        protected override int ROWS
        {
            get
            {
                return 3;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=6,7,4,2,8,9,8,5,6,7,8,6,7,3,9&cfgs=1&ver=2&mo_s=11&def_sb=6,10,3,7,6&mo_v=25,50,75,100,125,150,175,200,250,350,400,450,500,600,750,2500&reel_set_size=2&def_sa=3,7,6,11,9&mo_jp=750;2500;25000&scatters=1~1,1,1,0,0~0,0,5,0,0~1,1,1,1,1&gmb=0,0,0&rt=d&gameInfo={rtps:{regular:\"96.00\"},props:{max_rnd_sim:\"1\",max_rnd_hr:\"19230769\",max_rnd_win:\"1100\"}}&wl_i=tbm~1100&mo_jp_mask=jp3;jp2;jp1&sc=10.00,20.00,30.00,40.00,50.00,100.00,150.00,200.00,250.00,375.00,500.00,750.00,1250.00,2500.00,3750.00,5000.00&defc=50.00&wilds=2~500,250,25,0,0~1,1,1,1,1&bonuses=0&fsbonus=&n_reel_set=0&ntp=0.00&paytable=0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;500,250,25,0,0;400,150,20,0,0;300,100,15,0,0;200,50,10,0,0;50,20,10,0,0;50,20,5,0,0;50,20,5,0,0;50,20,5,0,0;0,0,0,0,0;0,0,0,0,0&reel_set0=6,8,7,1,6,8,9,4,7,8,2,2,2,7,6,10,8,1,3,10,8,7,9,11,11,11,8,9,5,7,9,5,7,8,5,6,8,5,9,8,5,3,10~9,7,8,10,5,8,10,9,7,4,2,2,2,7,5,9,6,7,10,3,8,10,6,11,11,11,4,8,7,6,9,3,10,9,6,4,8,10,6,8,5,10~9,7,3,1,10,8,6,9,10,3,2,2,2,8,9,6,5,9,1,10,4,6,10,11,11,11,5,6,7,10,6,9,10,4,3,10,9,4,10,6,9,10,8,5~9,7,3,10,8,5,7,9,10,8,2,2,2,10,7,9,5,8,6,7,8,10,7,11,11,6,9,7,8,3,4,6,9,3,8,4,5,6,9,3,6,10,5,4~7,9,1,10,7,5,3,9,10,3,2,2,2,9,7,3,5,1,10,4,8,10,6,11,11,11,3,6,1,9,5,10,9,4,10,9,8&reel_set1=2,2,2,7,6,4,9,10,7,8,10,7,9,6,8,4,6,7,9,5,7,8,6,7,9,6,4,8,6,7,9,4,10,7,9,8,6,7,9,3,6,7,9,4,6,10,9,6,4,9,6,7,9,8~10,10,10,9,9,9,8,8,8,6,6,6,9,9,9,7,7,7,10,10,10,9,9,9,7,7,7,3,3,3,9,9,9,8,8,8,10,10,10,5,5,5,2,2,2,10,10,10,5,5,5,8,8,8,7,7,7,5,5,5,8,8,8,3,3,3,9,9,9,8,8,8,10,10,10,7,7,7,8,8,8,10,10,10,5,5,5,8,8,8,10,10,10,11,11,11,8,8,8,10,10,10,4,4,4,6,6,6,3,3,3,10,10,10,9,9,9,8,8,8,7,7,7,5,5,5,9,9,9,3,3,3,8,8,8,10,10,10,1,1,1,8,8,8,10,10,10,9,9,9,8,8,8,10,10,10,9,9,9,8,8,8,10,10,10~10,10,10,9,9,9,8,8,8,6,6,6,9,9,9,7,7,7,10,10,10,9,9,9,7,7,7,3,3,3,9,9,9,8,8,8,10,10,10,5,5,5,2,2,2,10,10,10,5,5,5,8,8,8,7,7,7,5,5,5,8,8,8,3,3,3,9,9,9,8,8,8,10,10,10,7,7,7,8,8,8,10,10,10,5,5,5,8,8,8,10,10,10,11,11,11,8,8,8,10,10,10,4,4,4,6,6,6,3,3,3,10,10,10,9,9,9,8,8,8,7,7,7,5,5,5,9,9,9,3,3,3,8,8,8,10,10,10,1,1,1,8,8,8,10,10,10,9,9,9,8,8,8,10,10,10,9,9,9,8,8,8,10,10,10~10,10,10,9,9,9,8,8,8,6,6,6,9,9,9,7,7,7,10,10,10,9,9,9,7,7,7,3,3,3,9,9,9,8,8,8,10,10,10,5,5,5,2,2,2,10,10,10,5,5,5,8,8,8,7,7,7,5,5,5,8,8,8,3,3,3,9,9,9,8,8,8,10,10,10,7,7,7,8,8,8,10,10,10,5,5,5,8,8,8,10,10,10,11,11,11,8,8,8,10,10,10,4,4,4,6,6,6,3,3,3,10,10,10,9,9,9,8,8,8,7,7,7,5,5,5,9,9,9,3,3,3,8,8,8,10,10,10,1,1,1,8,8,8,10,10,10,9,9,9,8,8,8,10,10,10,9,9,9,8,8,8,10,10,10~2,2,2,5,7,9,5,8,6,9,8,10,9,8,10,6,9,7,6,8,5,1,4,7,9,8,10,9,7,10,8,7,4,10,3,8,1,10,9,7,3,10,1,9,6,10,4,9,8,10";
            }
        }
        #endregion
        public PigFarmGameLogic()
        {
            _gameID = GAMEID.PigFarm;
            GameName = "PigFarm";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
        }
	
    }
}
