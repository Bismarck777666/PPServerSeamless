using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Akka.Event;
using GITProtocol;

namespace SlotGamesNode.GameLogics
{
    public class EmptyTheBankGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs20emptybank";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return true;
            }
        }
        protected override int ClientReqLineCount
        {
            get
            {
                return 20;
            }
        }
        protected override int ServerResLineCount
        {
            get { return 20; }
        }
        protected override int ROWS
        {
            get
            {
                return 4;
            }
        }
        protected override bool SupportMoreBet
        {
            get
            {
                return true;
            }
        }
        protected override double MoreBetMultiple
        {
            get
            {
                return 1.25;
            }
        }
        protected override bool SupportPurchaseFree
        {
            get
            {
                return true;
            }
        }
        protected override double PurchaseFreeMultiple
        {
            get
            {
                return 80.0;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=11,7,4,7,9,3,11,4,10,10,3,4,9,3,3,3,4,11,11,3&screenOrchInit={type:\"mini_slots\"}&cfgs=4549&ver=2&mo_s=16;17;18;19;20;21;14;15&mo_v=20;20;20;20;20,40;20;20,40,60,80,100,120,140,160,200;20&def_sb=3,9,6,6,3&reel_set_size=13&def_sa=9,8,11,11,6&scatters=1~0,0,0,0,0~0,0,0,0,0~1,1,1,1,1&gmb=0,0,0&rt=d&gameInfo={props:{max_rnd_sim:\"1\",max_rnd_hr:\"3964025\",max_rnd_win:\"10000\",max_rnd_win_a:\"8000\"}}&wl_i=tbm~10000;tbm_a~8000&reel_set10=5,5,2,2,2,2,2,2,5,5,5,2,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,2,2,2,2,5,5,5,5,5,2,5,5,5,2,2,5,2,2,5~2,2,5,5,5,5,5,2,5,5,2,5,2,2,2,5,2,5,5,2,5,5~5,5,5,5,2,2,2,5,2~3,7,10,11,6,4,5,5,11,2,5,9,9,8,5,10,8,11~8,4,10,10,8,5,10,5,9,8,9,6,3,5,11,2,7,5&sc=10.00,20.00,30.00,40.00,50.00,100.00,200.00,300.00,400.00,500.00,750.00,1000.00,2000.00,3000.00,4000.00,5000.00&defc=100.00&reel_set11=9,10,11,10,7,5,3,8,4,8,5,2,6,5,9,11~5,10,5,5,8,7,9,5,10,6,2,10,3,8,4,9,8,11~5,5,5,2,5,5,5,5,5,5,2,5,5,5,5,5,2,5,5,2,5,5,5,5,2,2,5,5,2,2,2,2,5,5,5,5,5,2,2,5,2,2,2,5,2,5,5~5,5,2,5,5,5,5,2,5,2,2,2,2,5,5,2,5,5,2~5,5,5,5,5,5,5,5,2,5,5,2,2,2,2,2,5,2,2,5,5,5&reel_set12=12,12,12,12,12,14,12,12,12,22,12,12,12,12,12,12,12,12,12,12,12,14,12~12,12,12,12,12,14,12,12,12,12,12,12,12,15,12,12,12,12,12,12,14,12,16,12,12,12,12,12,12,17,12,12,12,12,12,12,18,12,12,12,12,12,12,19,12,12,12,12,12,12,20,12,12,12,12,12,12,21,12,12,12,12,12,12,22,12,12,12,12,12,12~12,12,12,12,12,14,12,12,12,12,12,12,12,15,12,12,12,12,12,12,14,12,16,12,12,12,12,12,12,17,12,12,12,12,12,12,18,12,12,12,12,12,12,19,12,12,12,12,12,12,20,12,12,12,12,12,12,21,12,12,12,12,12,12,22,12,12,12,12,12,12~12,12,12,12,12,14,12,12,12,12,12,12,12,15,12,12,12,12,12,12,14,12,16,12,12,12,12,12,12,17,12,12,12,12,12,12,18,12,12,12,12,12,12,19,12,12,12,12,12,12,20,12,12,12,12,12,12,21,12,12,12,12,12,12,22,12,12,12,12,12,12~12,12,12,12,12,14,12,12,12,12,12,12,12,15,12,12,12,12,12,12,14,12,16,12,12,12,12,12,12,17,12,12,12,12,12,12,18,12,12,12,12,12,12,19,12,12,12,12,12,12,20,12,12,12,12,12,12,21,12,12,12,12,12,12,22,12,12,12,12,12,12~12,12,12,12,12,14,12,12,12,12,12,12,12,15,12,12,12,12,12,12,14,12,16,12,12,12,12,12,12,17,12,12,12,12,12,12,18,12,12,12,12,12,12,19,12,12,12,12,12,12,20,12,12,12,12,12,12,21,12,12,12,12,12,12,22,12,12,12,12,12,12~12,12,12,12,12,14,12,12,12,22,12,12,12,12,12,12,12,12,12,12,12,14,12&purInit_e=1&wilds=2~500,200,50,5,0~1,1,1,1,1&bonuses=0&fsbonus=&bls=20,25&paytable=0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;400,100,50,5,0;200,100,40,0,0;100,80,40,0,0;100,60,20,0,0;80,60,20,0,0;60,20,10,0,0;60,20,10,0,0;40,10,5,0,0;40,10,5,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0&total_bet_max=10,000,000.00&reel_set0=9,1,11,10,4,5,5,7,8,8,9,3,10,3,8,8,11,10,6,11,7,3,4,3,3,3,10,7,2,9,4,10,4,10,8,11,9,6,6,9,11,11,9,5,8,10,5,6,9,3,2~3,10,11,8,11,6,6,2,7,8,10,11,3,5,3,9,10,2,3,5,3,3,3,8,9,7,10,3,11,5,4,9,8,10,4,7,6,4,9,11,5,11,9,9,8~10,5,11,3,4,8,10,6,4,6,3,3,3,3,11,1,9,8,9,5,7,2,10,7,11~8,4,11,9,11,9,8,5,3,10,3,3,3,10,8,11,9,6,4,7,6,10,3,7,2~6,8,7,3,9,6,10,7,1,10,11,6,5,9,8,11,5,8,3,3,3,10,11,4,1,6,2,10,8,9,11,10,9,3,8,7,9,11,8,11,5,4&reel_set2=9,1,11,10,8,10,8,10,11,8,11,1,1,9,10,1~4,4,4,5,5,5,5,3,7,7,7,6,6,6,6,3,3,3,3,7,3,4~1,8,10,9,8,11,10,10,8,11,9,11,9,1,1,8,11,1~4,4,4,3,5,5,5,4,7,7,7,3,6,6,6,5,3,3,3,6,3,7~11,10,11,1,1,8,10,8,9,1,9&reel_set1=11,11,4,4,11,10,9,8,10,4,3,3,3,3,6,10,11,8,6,10,10,9,8,9,4,10,10,10,8,9,3,6,3,9,3,8,11,5,5,7,7,7,7,2,5,8,7,9,9,10,10,8,8,9,5,5,5,2,9,5,11,6,10,10,7,7,5,3,7,4,4,4,1,5,8,1,5,11,10,5,8,10,11,11,6,6,6,4,9,4,9,9,10,11,4,5,8,6,9,7~2,9,6,2,11,11,11,11,10,7,3,10,8,11,4,4,4,4,5,10,5,11,4,6,11,5,5,5,10,6,6,9,9,3,9,7,7,7,9,8,9,8,10,10,6,9,9,9,5,5,11,11,5,4,9,3,3,3,3,8,11,9,7,10,8,6,6,6,4,4,6,11,7,7,8,11~4,11,1,6,7,8,3,10,7,6,8,8,8,5,9,10,8,3,1,8,4,10,8,10,7,3,3,3,10,10,2,9,11,8,10,8,10,10,2,9,10,10,10,10,4,7,6,6,10,7,4,6,5,6,11,6,6,6,9,4,11,11,6,9,1,7,10,7,2,3,9,9,9,11,10,4,4,8,3,11,10,10,5,4,10,7,7,7,7,5,8,11,3,11,10,9,5,6,9,8,10~5,2,2,10,3,8,11,7,7,7,10,6,10,4,5,3,9,9,6,6,6,4,8,8,7,9,6,10,2,10,10,10,3,10,10,8,3,4,8,8,8,8,8,6,9,8,10,3,11,6,10,3,3,3,3,9,7,5,6,3,9,7,10,4,4,4,6,4,11,3,6,10,7,11,11,11,11,9,8,7,8,11,8,9,4,9,9,9,11,10,11,8,11,4,11,9,10,4~5,6,1,8,10,11,4,8,10,11,10,9,5,10,6,7,8,8,11,1,3,3,3,11,6,5,3,9,4,4,8,1,10,8,10,9,1,6,9,5,3,8,7,4,5,5,5,5,11,7,9,9,6,6,4,6,8,2,11,10,8,9,2,9,8,6,11,8,4,4,4,9,9,10,3,10,6,3,8,11,8,8,9,11,8,7,11,5,10,9,4,9,7,7,7,4,11,8,5,6,2,5,10,5,11,6,1,5,8,8,7,7,11,11,9,4,6,6,6,9,11,8,1,9,11,8,4,8,5,8,11,10,9,8,7,7,10,8,6,10,10,4&reel_set4=2,3,3,3,3,3,2,2,2,2,3,3~3,2,2,3,3,3,3,3,3,3,3,3,2,3,3,3,2,3,2,2,2,3,2,3,3,2,3,2,2,2~2,3,3,3,2,2,3,2,3,3,3,3,3,3,3,3,3,3,2,2,3,2,3,2,3,2,2,3,2,2,2,2,3,3,3,3,3,3,3,3,3,3,2,3,2,3,3~10,9,3,8,2,5,10,4,6,9,7,11,8,3,3,11~10,3,7,2,4,3,5,8,3,11,10,8,8,9,6,9,10,3&purInit=[{type:\"fsbl\",bet:1600,bet_level:0}]&reel_set3=8,7,10,10,9,6,8,3,5,11,4,9,2,3,3,11~3,3,3,3,3,2,2,2,2,3,2,3,3~2,2,3,3,2,2,3,3,3,3,3,3,2,3,3,3,3,2,3,2,2,2,2,3,2,3,3,3,2,2,3,3~3,2,2,2,3,3,2,3,3,3,2,3,3,3,3,3,3,3,3,2,3,3,3,3,3,2,3,2,2,2,3,3,3,3,3,3,2,3,2,3,2,2,2,3~8,2,6,3,9,3,7,3,8,10,8,10,4,11,3,5,10,9&reel_set6=3,6,4,4,10,2,11,4,8,9,5,8,7,10,9,11,4,11~4,4,4,4,2,4,4,4,4,4,4,2,2,2,2,2,2,4,4,4,2,4,4,2,4~4,4,4,4,4,2,2,2,2,4,2~4,4,4,4,2,4,2,2,2,4,4,4,2~2,9,4,8,10,6,5,4,7,9,8,10,8,4,3,4,10,11&reel_set5=3,11,6,10,11,8,9,5,7,9,10,2,3,3,8,11,3,4~2,3,4,10,6,3,8,8,7,11,9,3,10,9,5~2,3,3,3,3,3,2,3,2,2,2,2,3,3,3,3~3,3,2,3,2,3,3,2,3,2,3,3,3,3,3,3,3,3,3,3,3,3,3,2,3,2,2,2,2,3,3,3,3,3,2,2,2,2,2,2,3,2~3,3,3,2,2,3,3,3,2,2,3,3,3,3,3,3,3,3,2,3,3,2,2,3,2,2,2,2,2,3,3,2,3,3,3,3,3,3,3,3,2&reel_set8=3,5,11,9,9,8,6,10,10,4,7,4,8,11,2,4,4,11~2,8,10,8,10,11,7,10,6,8,4,3,9,4,4,5,9~4,2,4,4,4,4,2,4,4,4,4,4,4,2,4,4,4,4,4,2,2,2,2,2,2,2,4,4,4,2,4,2,4,4,4~2,2,4,4,4,4,4,4,4,4,2,2,2,4,2,2,2,4,2,4,4,4,2,4,4~2,4,4,4,4,2,4,2,2,2,4,2,4,4&reel_set7=4,4,2,4,4,2,4,4,4,2,4,4,4,4,4,4,2,2,2,2,2,4,2,4,4,2,4~4,4,4,2,4,4,4,4,4,4,4,4,4,4,2,2,2,2,2,2,4,2,4,4,2,4,2,2~4,4,4,4,2,2,2,4,2,4~7,6,11,9,5,4,2,4,10,8,10,3,4,8,11,9~8,10,3,4,8,6,10,2,10,8,7,4,9,4,11,5,9,4&reel_set9=6,4,10,2,5,3,7,11,5,9,11,5,9,11,5,8,8,10~5,2,5,5,5,5,5,5,5,5,5,5,2,2,5,2,2,5,5,2,5,2,2,2,5,5,2,5,2,5,5,2,5,5,5~5,5,5,2,5,5,5,5,5,5,5,5,5,5,5,5,5,2,5,5,5,5,2,2,2,2,5,5,2,2,2,2,2,5,5,2,2,2,5,2,2,5,2,5,2,5,5~5,5,5,5,5,2,5,2,5,2,2,2,5,2,5,5,2~10,6,5,4,5,9,9,5,10,8,8,11,3,2,7&total_bet_min=10.00";
            }
        }
        #endregion
        public EmptyTheBankGameLogic()
        {
            _gameID = GAMEID.EmptyTheBank;
            GameName = "EmptyTheBank";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
            dicParams["reel_set"] = "0";
            dicParams["bl"] = "0";
            dicParams["sw"] = "5";
            dicParams["st"] = "rect";
            dicParams["g"] = "{s1:{def_s:\"13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,12,12,12,12,12,13,13,12,12,12,12,12,13,13,12,12,12,12,12,13,13,12,12,12,12,12,13\",def_sa:\"12,12,12,12,12,12,12\",def_sb:\"12,12,12,12,12,12,12\",reel_set:\"12\",sh:\"6\",st:\"rect\",sw:\"7\"}}";
        }
        protected override void readBetInfoFromMessage(GITMessage message, string strGlobalUserID)
        {
            try
            {
                BasePPSlotBetInfo betInfo = new BasePPSlotBetInfo();
                betInfo.BetPerLine = (float)message.Pop();
                betInfo.LineCount = (int)message.Pop();

                int bl = (int)message.Pop();
                if (bl == 0)
                    betInfo.MoreBet = false;
                else
                    betInfo.MoreBet = true;

                if (message.DataNum >= 3)
                    betInfo.PurchaseFree = true;
                else
                    betInfo.PurchaseFree = false;

                if (betInfo.BetPerLine <= 0.0f)
                {
                    _logger.Error("{0} betInfo.BetPerLine <= 0 in EmptyTheBankGameLogic::readBetInfoFromMessage {1}", strGlobalUserID, betInfo.BetPerLine);
                    return;
                }

                if (betInfo.MoreBet && betInfo.PurchaseFree)
                {
                    _logger.Error("{0} betInfo.MoreBet and  PurchasedFreeSpin is same time true in EmptyTheBankGameLogic::readBetInfoFromMessage", strGlobalUserID);
                    return;
                }
                if (betInfo.LineCount != this.ClientReqLineCount)
                {
                    _logger.Error("{0} betInfo.LineCount is not matched {1}", strGlobalUserID, betInfo.LineCount);
                    return;
                }

                BasePPSlotBetInfo oldBetInfo = null;
                if (_dicUserBetInfos.TryGetValue(strGlobalUserID, out oldBetInfo))
                {
                    //만일 유저에게 남은 응답이 존재하는 경우
                    if (oldBetInfo.HasRemainResponse)
                        return;

                    oldBetInfo.BetPerLine = betInfo.BetPerLine;
                    oldBetInfo.LineCount = betInfo.LineCount;
                    oldBetInfo.MoreBet = betInfo.MoreBet;
                    oldBetInfo.PurchaseFree = betInfo.PurchaseFree;
                }
                else
                {
                    _dicUserBetInfos.Add(strGlobalUserID, betInfo);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in EmptyTheBankGameLogic::readBetInfoFromMessage {0}", ex);
            }
        }
    }
}
