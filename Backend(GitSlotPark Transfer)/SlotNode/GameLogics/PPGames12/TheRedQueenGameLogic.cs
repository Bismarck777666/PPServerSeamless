using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class TheRedQueenGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vswaysredqueen";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return true;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 20; }
        }
        protected override int ServerResLineCount
        {
            get { return 20; }
        }
        protected override int ROWS
        {
            get
            {
                return 0;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "cfgs=8059&ver=3&reel_set_size=12&scatters=1~0,0,0,0,0,0~0,0,0,0,0,0~1,1,1,1,1,1&rt=d&gameInfo={props:{max_rnd_sim:\"1\",max_rnd_hr:\"32763809\",max_rnd_win:\"5000\"}}&wl_i=tbm~5000&reel_set10=12,8,7,10,7,6,11,8,6,11,4,3,5,4,7,10,3,4,9,12,6,12,10,9,6,5,9~3,5,2,10,12,4,6,9,7,4,9,8,9,5,8,10,3,4,11,6,5,4,12,1,10,6,12,11,3,8,10,11~11,1,6,7,9~11,10,6,1~9,12,10,4,10,6,3,12,6,6,3,4,12,9,10,5,10,11,10,8,7,5,11,5,11,4,9,8,8,7,11,7~14,14,14,14,14,14&sc=10.00,20.00,30.00,40.00,50.00,100.00,150.00,200.00,250.00,375.00,500.00,750.00,1250.00,2500.00,3750.00,5000.00&defc=50.00&reel_set11=10,11,6,12,10,8,6,3,5,3,6,7,9,7,9,8,12,4,10,8,7,4,11,5~1,3,11,9~11,6,7,1,9~6,11,1,10~9,8,11,12,4,11,10,11,5,3,8,4,3,10,6,4,12,6,8,7,7,10,12,5,7,5,9,10,9,6~14,14,14,14,14,14&wilds=2~0,0,0,0,0,0~1,1,1,1,1,1&bonuses=0&paytable=0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;100,50,25,15,0,0;75,40,15,10,0,0;60,30,10,5,0,0;40,25,10,5,0,0;30,20,8,5,0,0;25,10,6,4,0,0;25,10,6,4,0,0;20,8,4,2,0,0;20,8,4,2,0,0;10,6,3,2,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0&reel_set0=7,13,6,10,8,10,12,13,3,3,4,4,6,7,7,5,11,5,11,4,7,9,11,13,6,5,4,8,12,13,6,7,6,13,8,12,13,13,12,9,13,10,13,9,3,8,10,13~8,13,12,5,13,2,3,13,13,4,10,13,5,13,9,4,12,6,7,9,5,9,11,1,3,6,11,4,11,10,8,10~6,1,6,5,7,13,10,11,8,6,5,11,4,12,10,7,4,2,13,13,3,13,10,13,13,9,5,11,6,8,9,13,3,4,13,5,13,11,10,7,13,10,9,10,12,13~9,6,7,8,4,4,3,11,13,11,12,11,8,1,5,5,10,9,10,13,7,2,5,9,3,10,11,12,10,5,13,4,6,12,4,13~11,5,6,3,11,9,8,8,12,11,13,6,4,10,13,4,7,2,7,12,10,9,11,5,10,12,3~14,14,14,14,14,14&reel_set2=10,8,10,8,12,7,12,11,13,11,13,3,13,6,13,13,5,13,9,4,12,4,13,4,8,3,9,10,6,11,9,9,8,12,7,3,5,11,10,6,13~4,1,8,5,10,10,13,3,13,4,11,10,2,13,7,3,8,6,1,12,8,2,4,6,9,6,10,12,13,9,7,11,13,13,11,5,7,12,9~5,11,13,7,8,13,6,6,1,11,2,4,3,13,9,9,8,13,10,10,1,8,10,9,6,12,13,12,4,11,13,7,12,4,5,11,13~8,5,12,10,9,9,10,12,11,4,13,5,6,10,10,4,9,10,11,4,11,11,12,11,5,7,4,8,6,9,7,12,4,6,8,12,3,8,13,12,2,13,6,8,12,13,7,10,10,11,13,3,4~3,2,11,11,12,10,7,6,8,7,5,9,10,10,9,3,12,11,12,4,11,3,12,6,10,4,8,4,10,9,5,12,8,5~14,14,14,14,14,14&reel_set1=4,7,6,10,6,10,7,3,8,4,7,13,13,5,3,13,12,5,5,8,12,8,13,12,4,11,13,3,7,9,11,4,13,6,9,13,8,12,10,9,7,5,12,8,5,6,11,9,10,13,11,13,13~11,2,4,12,10,13,3,11,11,6,6,9,10,9,8,5,7,2,10,13,5,3,9,4,13,7,13,11,12,13,8,4,7,10~1,6,8,13,11,13,6,12,10,12,5,13,11,6,4,7,9,4,8,9,9,12,12,13,3,11,5,9,7,13,1,11,8,10,8,13,2,6,10,13,7,10,13,12,13,5,9,4,3,3,10,11,6,4,10~6,11,13,9,1,6,4,12,3,3,13,11,10,10,12,9,12,5,3,6,7,8,5,8,4,10,10,11,12,11,1,10,12,8,5,7,8,11,4,4,9,9,2,12,7~12,4,9,5,10,8,10,4,12,5,3,4,4,11,10,11,6,5,7,8,11,10,7,4,6,9,8,12,3,10,7,8,5,10,12,9,9,11,12,2,6,11,13,3,12,8,11,10,12~14,14,14,14,14,14&reel_set4=5,4,9,13,4,12,4,8,7,12,13,13,11,13,11,10,11,13,7,13,8,12,6,13,9,3,10,7,5,13,9,13,8,13,13,6,10,11,13,13,10,5,11,10,8~10,7,2,13,6,10,13,9,5,13,12,13,11,12,11,13,13,3,9,11,8,10,4,12,10,6,8,13,6,4,10,12,13,11,9,11,10,13,10,13,4,7,9,6,5,2,7,13,5,8,13,11,3,13,9,7,12,8,12,8,13,13,8,4,12,9,11,13,13,5,13~13,11,9,6,12,13,12,8,5,10,11,5,13,11,7,12,10,9,13,13,13,3,9,12,13,10,13,6,4,8,2,13,10,11,8,7,4,13,12,10~8,10,9,3,10,12,3,10,7,11,12,11,12,8,12,13,4,10,7,9,6,8,10,12,13,13,10,4,9,12,13,6,5,12,11,8,7,11,5,4,11,6,2,11,9,11,5~10,8,11,4,11,13,6,9,8,10,7,12,9,7,6,7,12,11,5,4,12,9,8,11,12,10,9,3,2,5,11,8,13,12,11,10,9,10,12,6,3,10,5,10,13,12,8,12~11,9,6,9,10,9,10,12,8,11,4,11,5,11,10,6,5,12,8,13,4,8,10,7,3,12,13,9,7&reel_set3=13,9,7,11,11,3,8,6,12,5,9,4,9,12,12,7,8,4,12,9,4,7,13,12,8,12,11,13,8,13,13,6,5,12,8,3,11,10,5,5,10,9,11,10,11,13,10,13,3,10,4,6,9~13,12,4,9,11,12,5,11,4,10,12,3,6,4,11,11,3,8,10,7,7,9,10,13,6,6,5,10,13,12,10,2,9,11,13,8,12,5,7,8~9,12,4,10,2,11,5,4,12,9,4,6,3,12,11,7,8,5,3,13,5,8,9,6,9,11,10,9,10,7,8,11,12,6,7,13,10,10,13,12,11~11,12,9,8,12,12,5,12,11,10,8,11,4,2,10,9,5,4,9,3,10,12,12,13,7,3,11,10,6,6,7,10~8,10,11,9,10,10,5,6,11,12,12,5,9,7,3,12,11,13,7,4,8,4,6,10,12,2~4,11,8,7,9,3,6,11,8,12,9,12,10,11,10,6,4,12,8,13,11,12,10,5,11,3,10,12,9,7,5&reel_set6=14,14,15,14,2,14,14,1,14,15,14,2,14,2,14,14,15&reel_set5=13,10,9,7,3,10,9,9,6,7,11,9,9,10,12,12,8,10,4,12,5,12,3,12,9,7,10,8,6,6,11,11,13,11,6,11,8,4,5,10,8,11,12,5,8~8,7,1,4,9~6,5,10,1,11~8,1,3,4,12~8,3,12,9,13,10,5,12,12,5,7,7,10,9,13,6,11,10,11,4,12,11,10,6,12,4,9,10,11,3,8~14,14,14,14,14,14&reel_set8=11,7~11,3,1,9~11,1,6,7,9~10,1,12,7,10,8,5,5,9,6,9,4,3,12,4,4,6,9,2,7,11,11,5,11,10,11~12,5,10,8,11,10,8,11,7,6,3,12,9,4,5,3,7,9,6,4,12,11~14,14,14,14,14,14&reel_set7=14,2,2,15,14,14,14,2,14,14,14,14,15,2,2,2,14,14,15,2,14,14,14,14,14,14,14,14,14,14,2,14,14,14,14,14,14,14,14,2,14,2,14,2,2,1,14,14,2,14,14,14,2,2,2,1,2,14,14,14,2,14,2,14,14,2,2,1,14,14,14,14,14,2,2,14,14,15,15,15,15,2,2,2,14,14,15,14,1,2,1,14,14,14,14,14,2,14,14,14,14,14,14,14,14&reel_set9=9,10,6,8,3,11,5,10,6,7,7,12,9,8,3,12,9,4,5,7,6,6,8,4,4,11,12~11,3,1,9~5,10,7,8,10,4,11,10,10,1,6,11,8,11,3,3,12,9,6,6,11,10,7,7,6,5,12,2,5,9,10,4,4,9,5,9~11,10,6,1~9,4,11,8,6,8,10,7,10,5,12,11,3,9,5,7,10,4,12,6~14,14,14,14,14,14";
            }
        }
	
	
        #endregion
        public TheRedQueenGameLogic()
        {
            _gameID = GAMEID.TheRedQueen;
            GameName = "TheRedQueen";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["g"] = "{base:{def_s:\"7,10,11,9,4,14,3,12,7,8,3,14,7,11,12,4,6,14\",def_sa:\"5,11,4,3,3,14\",def_sb:\"5,12,5,12,4,14\",reel_set:\"0\",s:\"7,10,11,9,4,14,3,12,7,8,3,14,7,11,12,4,6,14\",sa:\"5,11,4,3,3,14\",sb:\"5,12,5,12,4,14\",sh:\"3\",st:\"rect\",sw:\"6\"},top_tracker:{def_s:\"14,15,14,15\",def_sa:\"14\",def_sb:\"15\",reel_set:\"6\",s:\"14,15,14,15\",sa:\"14\",sb:\"15\",sh:\"4\",st:\"rect\",sw:\"1\"}}";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
            if (dicParams.ContainsKey("wlc_v"))
            {
                string[] strParts = dicParams["wlc_v"].Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                for (int i = 0; i < strParts.Length; i++)
                {
                    string[] strValues = strParts[i].Split(new string[] { "~" }, StringSplitOptions.RemoveEmptyEntries);
                    strValues[1] = convertWinByBet(strValues[1], currentBet);
                    strParts[i] = string.Join("~", strValues);
                }
                dicParams["wlc_v"] = string.Join(";", strParts);
            }
        }
	
    }
}
