using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using GITProtocol;

namespace SlotGamesNode.GameLogics
{
    public class JokerKingGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs25jokerking";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return false;
            }
        }
        protected override int ClientReqLineCount
        {
            get
            {
                return 25;
            }
        }
        protected override int ServerResLineCount
        {
            get { return 25; }
        }
        protected override int ROWS
        {
            get
            {
                return 4;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=3,6,6,6,6,6,7,6,6,6,6,6,7,6,6,6,6,6,7,6,6,6,6,6&cfgs=4597&ver=2&def_sb=8,8,8,8,3,8&prm=1~2,3,5,10,25;1~25,25,25,25,25&reel_set_size=2&def_sa=8,8,8,8,8,8&scatters=1~1,1,1,1,0,0~20,15,10,8,0,0~1,1,1,1,1,1&gmb=0,0,0&rt=d&gameInfo={props:{max_rnd_sim:\"1\",max_rnd_hr:\"533902\",max_rnd_win:\"5000\"}}&wl_i=tbm~5000&sc=10.00,20.00,30.00,40.00,50.00,80.00,100.00,200.00,300.00,400.00,500.00,750.00,1000.00,2000.00,3000.00,4000.00,5000.00&defc=80.00&wilds=2~125,40,15,10,0,0~1,1,1,1,1,1&bonuses=0&fsbonus=&paytable=0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;125,40,15,10,0,0;125,40,15,8,0,0;50,25,12,6,0,0;40,15,10,5,0,0;30,12,8,4,0,0;25,10,5,3,0,0&rtp=94.50&reel_set0=4,4,4,4,8,3,6,6,6,7,5,6,3,3,3,7,7,7,5,5,5,8,8,8,3,7,5,6,7,6,7,5,6,7,3,5,3,8,6,5,7,3,7,6,3,6,7,6,7,5,3,7,5,6,7,8,6,7,3,6,7,8,5,7,6,7,8,6,7,3,7,3,5,6,7,8,7,3,6,3,7,5,8,3,7,8,7,3,7,8,6,5,6,8,7,8,7,8,5,7,3,6,3,7,8,7,3,7,6,8,6,8,7,3,6,7,5,3,6,7,8,6,5,3,5,3,8,7,3,5,8,6,7,6,7,6,8,5,3,7,3,7,3,5,7,8,7,3,8,7,5,3,6,3,7,6,8,7,3,6,7,6,7,3,5,3,7,3,7,8,6,7,3,7,5,7,3,5,7,3,5,6,3,8,3,7,3,5,3,8,6,8,5,8,5,7,3,7,3,7,3,7,3,7,5,8,6,3,5,7,3,7~4,5,7,7,7,3,7,8,6,3,3,3,5,5,5,6,6,6,8,8,8,4,4,4,5,3,8,5,6,5,7,5,7,3,6,5,6,8,7,6,5,6,5,3,7,3,5,8,5,3,7,8,3,8,3,5,8,6,8,3,5,7,8,3,8,5,3,6,5,8,5,6,8,5,8,3,5,6,7,6,7,5,8,5,7,5,3,6,8,5,8,6,7,3,5,8,6,3,5,8,7,3,8,5,7,5,6,3,8,6,8,3,8,5,3,8,3,5,8,3,8,3,7,8,3,6,3,7,8,5,8,3~4,8,7,7,7,5,6,4,4,4,7,3,6,6,6,5,5,5,8,8,8,7,3,6,7,5,6,5,8,7,5,8,7,3,6,7,8,6,5,6,8,5,8,5,7,5,6,3,6,7,8,5,3,7,6,7,6,8,7,5,8,6,5,7,5,8,5,6,5,6,7,8~5,4,4,4,3,3,3,3,7,4,5,5,5,6,8,7,7,7,6,6,6,8,8,8,7,6~3,3,3,8,5,5,5,7,3,5,4,6,8,8,8,7,7,7,4,4,4,6,6,6,4,7,5,6,8,6,8,5,4,8,7,8,5,8,5,4,8,6,7,6,7,6,5,8,6,5,8,6,5,4,5,8,4,8,6,8,5,8,5,6,5,8,4,5,7,4,6,7,6,8,5,6,8,6,8,7,8,7,6,7,4,7,5,8,4,8,7,8,4,7,6,8,6,7,4,8,5,8,5,6,5,6,8,7,8,7,8,7,8,4,8,7,5,8,4,8,5,7,5,8,7,6,7,8,7,5,7,6,4,8,7,4,5,8,5,6,5,7,8,5,8,6,8,7,8,4,5,8,6,7,8,4,7,6,8,7,8,5,6,7,8,6,4,5,6,5,8,6,4,7,8,6,7,6,8,4,8,6,8,5,8,7,6,8,4~8,5,5,5,7,7,7,7,5,8,8,8,4,3,6,4,4,4,3,3,3,6,6,6,7,6,7,6,3,4,7,6,7,6,3,6,4,5,6,7,5,6,5,7,3,7,4,6,5,6,5,7,6,3,5,6,3,5,6,5,6,7,3,6,3,6,5,7,6,3,4,5,6,5,7,6,5,4,6,5,7,5,7,6,4,5,4,5,3,5,7,3,5,6,5,3,6,5,6,5,6&reel_set1=6,8,6,6,6,4,7,4,4,4,5,3,7,7,7,8,8,8,5,5,5,4,8,7,8,5,4,5,7,8,5,8,5,7,8,7,8,7,4,8,4,8,4,8,5,7,5,8,4,5,4,7,4,8,5,8,5,4,7,4,5,7,8,4,8,4,5,8,5,7,8,5,8,5,8,5,4~3,8,8,8,4,7,4,4,4,6,8,7,7,7,5,3,3,3,6,6,6,5,5,5,6,5,6,7,5,7,5,6,4,5,6,7,6,4,7,5,4,8,5,4,7,8,5,4,5,7,4,6,5,8,7,8,4,5,4,5,4,5,4,7,4,6,5,7,5,6,5,7,6,8,5,7,4,6,4,7,5,6,8,5,6,8,6,8,6,5,7,4,8,4,6,7,8,4,5,4,5,4,8,5,7,5,6,8,7,6,7,5,8,6,4,8,5,8,4,6,7,6,7,4,7,5,6,4,8,5,4,7,5,8,6,7,4,8,4,7,5,4,8,4,6,5,4,8,4,8,5,7,4,5,6,4,8,4,8,7,4,8,7,4,8,7,5,6,7,4,7,4,5,4,5,8,5,4,8,7,5,8,4,5,8,4,6,5,6,5,4,6,7,5,4,8,5,8,5,7,8,4,6,4,5,4,6,5,6,7,4,7,4,7,4,5,8,7,5,8,5,8,7,5,4,7,8,7,8,5,7,8,6,4,5,8,5,8,5,4,7,4,8,5,6,4,7,4,6,7,8,7,8,5,8,6,8,6,4,6,7,4,8,7,5,4,8,5,8,4,8,7,8,7,4,8,5~4,6,7,5,8,3,8,8,8,7,7,7,4,4,4,5,5,5,6,6,6,5,7,8,5,8,7,8,7,8,3,8,3,7,8,6,7,5,8,7,6,7,8,5,7,8,7,8,3,8,5,7,5,3,6,7,8,5,6,5,7,5,8,7,5,7,6,5,7,5,7,5,8,5,7,8,5,6,8,5,7,5,3,5,6,7,8,3,6,7,5,8,5,7,8,7,8,7,3,7,5,7,5,7,6,8,7,5,7,8,7,6,5,7,5,6,8,5,3,8,5,7,5,7,6,7,6,7,8,6,5,6,8,5,8,7,3,5,6,5,8,5,7,5,7,8,3,6,7,5,3,8,5,6,5,8,7,8,3,6,5,6,5,7,8,7,8,5,6,8,5,8,6,7,3,8,7,5,6,7,8,5,8,5,7,8,5,8,6,8,5,8,5,7,8,5,7,3,8,7,5,6,8,5,6,8,6,8,5,8,5,8,7,6,8,7,6,5,8,5,8,7,6,7,3,8,5,8,7,5,8,3,5,7,6,5,7,5,7,8,6,7,5,6,7,6,8,5,8,5~4,7,5,6,3,8,8,8,8,3,3,3,7,7,7,6,6,6,5,5,5,4,4,4,7,3,7,5,7,8,6,7,6,7,6,3,6,3,5,7,3,7,8,7,6,3,8,6,3,7,5,7,6,7,6,8,6,7,5,7,6,7,3,6,7,6,7,6,3,7,5,3,7,8,6,7,3,7,3,6,8,3,7,5,3,6,3,7,6,7,5,7,3,7,3,6,3,7,5,7,8,7,3,7,6,3,8,7,8,7,3,6,3,7,8,7,5,3,5,7,6,8~6,4,4,4,5,5,5,5,7,3,4,8,3,3,3,6,6,6,7,7,7,8,8,8,5,3,4,5,7,5,4,5,8,5,7,3,7,5,7,4,5,7,8,7,4,8,4,5,8,7,3,4,5,3,8,4,7,8,7,5,7,8,4,7,5,3,8,5,4,5,7,4,7,5,3,7,3,8,5,7,3,4,5,7,4,5,8,7,8,4,5,8,4,7,3,5,3,5,8,5,7,3,8,5,7,4,8,4,7,8,3,8,5,4,5,8,7,4,5,3,7,5,4,3,4,8,5,3,4,7,5,8,5,3,7,3,7,3,7,5,3,4,7,5,4,3,7,5,8,5,4,3,4,3,5,7,4,7~4,8,8,8,7,3,3,3,3,6,6,6,5,6,8,7,7,7,5,5,5,4,4,4,5,6,3,5,8,7,6,8,3,6,8,6,5,7,8,7,5,6,8,6,3,6,8,6,3,8,6,7,5,8,3,6,5,3,8,3,5,7,3,6,3,7,3,6,5,8,6,3,8,3,6,7,8,5,6,8,6,5,6,3,5,8,3,6,8,6,3,5,6,5,8,6,8,3,8,6,8,5,7,6,7,5,8,3,7,3,6,3,7,5,8,3,5,8,5,6,3,8,7,5,3,8,7,8,7,3,7,5,8,3,8,7,8,6,5,6,3,7,8,3,6,3,7,8,7,5,3,5,6,5,8,7,8,3,5,6,7,8,7,8,6,3,6,7,8,6,8,6,3,5,8,6,3,6,8,7,6,3,6,5,8,5,8";
            }
        }
        #endregion
        public JokerKingGameLogic()
        {
            _gameID = GAMEID.JokerKing;
            GameName = "JokerKing";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
            dicParams.Add("reel_set", "0");
        }
    }
}
