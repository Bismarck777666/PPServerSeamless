using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class AztecBonanzaGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs7776aztec";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return false;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 30; }
        }
        protected override int ServerResLineCount
        {
            get { return 30; }
        }
        protected override int ROWS
        {
            get
            {
                return 6;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "msi=11&def_s=12,12,8,12,12,12,3,4,8,12,7,5,4,3,3,7,5,3,3,3,12,9,6,9,12,12,12,6,12,12&cfgs=2772&nas=12&ver=2&reel_set_size=13&def_sb=5,9,3,10,3&def_sa=4,9,7,9,10&prg_cfg_m=cp&scatters=1~0,0,0,0,0~0,0,0,0,0~1,1,1,1,1&gmb=0,0,0&rt=d&reel_set10=11,11,4,4,4,7,7,7,6,6,10,10,10,3,3,6,6,6,11,11,5,5,8,8,7,7,11,11,7,7,7,11,11,5,5,5,9,9~9,9,6,6,9,9,9,3,3,7,7,11,11,10,10,10,8,8,11,11,9,9,9,5,5,4,4,4,6,6,6,11,11,5,5,5,11,11~6,6,5,5,5,10,10,10,8,8,11,11,7,7,7,9,9,11,11,5,5,11,11,10,10,10,3,3,4,4,4,11,11,6,6,6,10,10~11,11,5,5,5,6,6,9,9,6,6,6,3,3,5,5,10,10,7,7,3,7,7,7,4,4,4,10,10,10,8,8,11,11,9,9,4,4~9,9,10,10,10,4,4,6,6,6,4,4,4,5,5,11,11,6,6,5,5,5,8,8,7,7,9,9,9,3,3,10,10,7,7,7&prg_cfg=1&sc=0.60,6.00,12.00,18.00,24.00,30.00,60.00,90.00,120.00,150.00,250.00,350.00,500.00,800.00,1600.00,2500.00,3600.00&defc=24.00&reel_set11=3,3,7,7,11,11,7,7,7,6,6,11,11,4,4,4,5,5,6,6,6,11,11,9,9,11,11,10,10,10,8,8,7,7,7,5,5,5~4,4,4,11,11,8,8,8,3,3,7,7,5,5,11,11,9,9,10,10,10,11,11,6,6,11,11,6,6,6,8,8,5,5,5,8,8,8~6,6,6,11,11,3,3,11,11,10,10,10,5,5,10,10,10,5,5,5,7,7,7,4,4,4,10,10,6,6,9,9,11,11,8,8,11,11~3,3,11,11,4,4,10,10,9,9,11,11,4,4,4,5,5,5,7,7,3,3,3,8,8,7,7,7,6,6,6,6,8,8,6,6,10,10,10,5,5~8,8,3,3,3,4,4,3,3,8,8,8,10,10,10,6,6,9,9,4,4,4,10,10,5,5,5,11,11,7,7,6,6,6,7,7,7,8,8,5,5&reel_set12=7,7,10,3,3,5,5,11,11,11,6,6,6,7,7,11,11,8,8,6,6,5,5,5,9,9,9,7,7,7,11,11,4,4,4,11,11~6,6,6,11,11,10,10,11,11,11,8,8,8,3,3,8,8,8,5,5,4,4,4,11,11,6,6,7,7,8,8,5,5,5,11,11,9,9,9~3,3,11,11,9,9,9,4,4,4,10,10,11,11,8,8,9,9,9,7,7,7,6,6,6,11,11,5,5,9,9,6,6,11,11,5,5,5~11,11,3,3,3,6,6,6,7,7,5,5,9,9,9,4,4,7,7,7,9,9,5,5,5,4,4,4,3,3,6,6,11,11,8,8~9,9,6,6,6,5,5,5,11,11,3,3,3,7,7,10,10,8,8,8,6,6,9,9,9,7,7,7,4,4,4,3,3,8,8,4,4,8,8,5,5&wilds=2~0,0,0,0,0~1,1,1,1,1&bonuses=0&fsbonus=&paytable=0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;75,30,15,0,0;30,15,10,0,0;30,15,10,0,0;15,8,5,0,0;15,8,5,0,0;10,5,3,0,0;10,5,3,0,0;10,5,3,0,0;0,0,0,0,0;0,0,0,0,0&reel_set0=7,7,10,10,4,10,10,7,7,10,6,5,7,7,9,9,3,8,8,6,6,10,10~9,9,9,6,9,9,3,3,6,5,5,7,8,8,9,9,8,4,10,10,7,5,5~6,4,4,8,8,4,4,8,9,8,8,6,6,6,9,9,6,6,3,7,7,10,10,10,6,6,7,10,8,8,5,4~6,6,3,3,9,9,4,4,8,8,4,4,7,7,4,4,4,6,6,7,7,8,8,5,5,10,10,6,6,8,8,3,3,9,9,10,10,5,5,8,8,5,5,10,10,6,6,7,7,10,10,6,6,10,10,3,3,4,4,5,5,8,8,9,9,7,7,9,9,10,10,9,9,3,3,4,4,7,7,3,3~3,3,7,7,6,6,5,5,8,8,6,6,9,9,8,8,10,10,7,7,3,3,10,10,5,5,4,4,8,8,4,4,5,5,9,9,10,10,6,6,8,8,7,7,6,6,10,10,9,9,4,4,4,3,3,5,5,10,10,3,3,7,7,8,8,10,10,7,7,9,9,3,3,6,6,4,4,9,9&reel_set2=6,6,9,6,6,6,4,6,5,8,8,3,4,4,10,10,10,9,9,8,8,7,7,10,4,4,8,7~7,7,10,10,7,7,6,10,4,6,6,4,8,8,5,3,10,10,9,9,5~8,7,5,5,9,9,4,3,3,5,5,9,9,9,10,10,7,9,9,8,8,4,3,3,6~4,4,9,9,6,6,10,10,6,6,3,3,10,10,4,4,8,8,6,6,9,9,10,10,5,5,6,6,5,5,6,6,3,3,9,9,10,10,7,7,10,10,8,8,7,7,5,5,4,4,4,8,8,6,6,3,3,9,9,3,3,4,4,7,7,3,3,4,4,5,5,7,7,10,10,8,8,7,7,8,8,9,9~10,10,7,7,4,4,8,8,9,9,8,8,5,5,7,7,3,3,6,6,9,9,10,10,8,8,5,5,6,6,4,4,5,5,7,7,8,8,4,4,7,7,6,6,8,8,9,9,3,3,9,9,10,10,9,9,10,10,3,3,6,6,3,3,5,5,10,10,7,7,4,4,7,7,9,9,3,3,6,6,4,4,4,10,10,8,8&t=243&reel_set1=4,5,5,9,9,3,3,6,8,8,5,5,8,3,3,7,9,9,9,4,10,10,9,9~9,9,5,4,4,7,10,10,10,6,6,6,8,8,4,8,8,6,6,3,8,5,6,7,7,9,10,6,6~5,3,7,7,6,10,10,9,9,6,6,10,4,8,8,5,4,10,10,7,7~4,4,10,10,7,7,3,3,7,7,3,3,6,6,7,7,9,9,8,8,7,7,8,8,10,10,8,8,10,10,9,9,5,5,4,4,6,6,4,4,6,6,7,7,9,9,5,5,10,10,8,8,9,9,8,8,6,6,4,4,3,3,6,6,9,9,6,6,10,10,9,9,10,10,7,7,3,3,5,5,4,4,4,3,3,5,5~10,10,3,3,8,8,7,7,3,3,7,7,8,8,9,9,7,7,6,6,4,4,7,7,10,10,3,3,9,9,4,4,4,6,6,9,9,4,4,5,5,4,4,8,8,10,10,6,6,10,10,5,5,6,6,10,10,8,8,3,3,6,6,9,9,7,7,9,9,3,3,5,5,6,6,8,8,10,10,9,9,5,5,7,7&reel_set4=5,5,5,8,8,4,4,4,8,8,8,10,10,10,10,6,6,6,5,5,8,8,8,7,7,7,3,3,3,9,9,9,9~4,4,10,10,10,6,6,6,10,10,10,8,8,8,8,4,4,4,10,10,5,5,5,9,9,9,9,3,3,3,7,7,7~7,7,7,9,9,4,4,4,9,9,9,10,10,10,10,3,3,3,5,5,5,7,7,6,6,6,8,8,8,8~6,6,6,3,3,3,7,7,7,10,10,10,8,8,8,5,5,5,9,9,9,4,4,4,5,5,3,3,3~4,4,10,10,10,9,9,9,8,8,8,5,5,5,7,7,7,4,4,4,3,3,3,6,6,6&reel_set3=6,6,7,7,6,6,9,9,7,7,6,6,9,9,7,7,10,10,4,4,9,9,4,4,7,7,6,6,9,9,7,7,8,8,4,4,6,6,3,3,5,5,9,9,8,8,10,10~9,9,3,3,9,9,4,4,6,6,7,7,9,9,10,10,6,6,7,7,5,5,9,9,8,8,6,6,4,4,9,9,10,10,6,6,7,7,4,4,7,7~8,8,3,3,8,8,8,10,10,9,8,8,5,5,4,4,10,10,6,6,9,9,9,5,5,7,7,10,10~8,8,7,7,8,8,9,9,4,4,9,9,8,8,10,10,6,6,8,8,5,5,3,3,10,10,7,7~5,5,8,8,6,6,4,4,6,6,3,3,6,6,9,9,8,8,3,3,10,10,9,9,8,8,7,7,10,10,7,7,8,8&reel_set6=11,11,8,8,8,11,11,9,9,6,6,3,11,11,8,8,7,7,7,5,5,5,7,7,4,4,10,10,10,8,8,8,11,11,11,6,6,6~11,11,9,9,8,8,11,11,10,10,10,11,11,4,4,7,7,6,6,6,11,11,11,5,5,5,3,3,9,9,9,6,6,11,11,9,9,9~7,7,7,11,11,5,5,11,11,11,6,6,8,8,8,10,10,10,7,7,10,10,6,6,6,9,9,10,10,10,3,3,11,11,4,4,11,11~10,10,10,11,11,5,5,9,9,6,6,6,3,3,8,8,8,10,10,7,7,4,4,3,3,3,9,9,7,7,7,8,8,6,6,5,5,5~3,3,3,6,6,9,9,5,5,5,9,9,7,7,9,9,9,6,6,6,7,7,7,10,10,10,8,8,10,10,8,8,8,5,5,3,3,4,4,11,11&reel_set5=8,8,8,11,11,7,7,3,3,6,6,6,7,7,7,10,10,10,11,11,8,8,11,11,6,6,4,4,8,8,8,9,9,11,11,5,5,5~5,5,5,8,8,11,11,7,7,7,6,6,7,7,4,4,11,11,9,9,11,11,6,6,6,10,10,10,3,3,9,9,9,11,11,9,9,9~11,11,6,6,6,11,11,10,10,6,6,10,10,10,7,7,3,3,11,11,5,5,5,8,8,8,7,7,7,11,11,4,4,10,10,10,9,9~9,9,10,10,8,8,8,7,7,7,8,8,6,6,5,5,5,9,9,3,3,10,10,10,7,7,4,4,11,11,4,4,4,6,6,6,5,5~4,4,4,7,7,7,5,5,5,10,10,10,6,6,6,9,9,5,5,7,7,9,9,11,11,8,8,8,4,4,10,10,3,3,8,8,9,9,9,6,6&reel_set8=8,8,8,7,7,11,11,6,6,5,5,11,11,11,4,4,8,8,11,11,3,3,10,10,10,8,8,8,9,9,5,5,5,11,11~9,9,7,7,7,11,11,8,8,4,4,6,6,9,9,9,11,11,9,9,9,10,10,10,11,11,3,3,5,5,11,11,11,5,5,5,9,9,7,7~10,10,11,11,7,7,7,6,6,4,4,4,10,10,10,5,5,11,11,8,8,8,11,11,11,7,7,10,10,10,3,3,11,11,9,9,11,11~4,4,11,11,8,8,8,9,9,6,6,9,9,7,7,7,3,3,10,10,10,4,4,4,5,5,5,8,8,3,3,3,5,5,7,7,10,10~10,10,10,9,9,4,4,4,3,3,3,5,5,3,3,8,8,9,9,9,7,7,7,5,5,5,7,7,11,11,9,9,6,6,4,4,10,10,8,8,8&reel_set7=8,8,11,11,10,10,10,11,11,6,6,3,3,9,9,11,11,11,7,7,7,5,5,8,8,8,4,4,4,6,6,6,11,11,8,8,8,7,7~9,9,9,11,11,9,9,9,11,11,11,10,10,10,7,7,7,6,6,5,5,9,9,3,3,11,11,9,9,7,7,8,8,11,11,4,4,4~5,5,4,4,4,7,7,7,11,11,3,3,11,11,6,6,11,11,7,7,10,10,10,9,9,11,11,10,10,10,6,6,6,8,8,8,10,10~9,9,4,4,4,6,6,6,11,11,6,6,5,5,7,7,7,10,10,3,3,10,10,10,8,8,8,4,4,8,8,9,9,7,7,3,3,3~9,9,9,3,3,3,11,11,4,4,4,10,10,5,5,3,3,10,10,10,8,8,8,7,7,7,8,8,9,9,6,6,6,7,7,9,9,6,6,4,4&reel_set9=11,11,9,9,11,11,5,5,5,11,11,11,8,8,4,4,6,6,10,10,10,7,7,8,8,8,3,3,5,5,11,11,8,8,8,6,6,6~5,5,5,9,9,9,8,8,9,9,9,10,10,10,3,6,6,11,11,11,6,6,6,9,9,11,11,7,7,4,4,4,11,11,5,5,11,11,9,9~6,6,6,11,11,11,7,11,11,9,9,10,10,10,4,4,4,3,3,5,5,8,8,8,11,11,10,10,10,5,5,5,6,6,10,10,11,11~4,4,8,8,8,7,7,8,3,3,3,9,9,4,4,4,3,3,10,10,5,5,5,6,6,9,9,11,11,11,10,10,10,11,11,6,6,6,5,5~6,6,9,9,6,6,6,10,10,5,5,5,3,3,3,4,4,3,3,5,5,11,11,11,8,9,9,9,10,10,10,4,4,4,9,9,7,7,8,8,8";
            }
        }
	
	
        #endregion
        public AztecBonanzaGameLogic()
        {
            _gameID = GAMEID.AztecBonanza;
            GameName = "AztecBonanza";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["reel_set"] = "0";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
        }

    }
}
