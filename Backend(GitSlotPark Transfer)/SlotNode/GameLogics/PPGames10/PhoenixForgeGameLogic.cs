using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class PhoenixForgeGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs20phoenixf";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return true;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 20; }
        }
        protected override int ServerResLineCount
        {
            get { return 20; }
        }
        protected override int ROWS
        {
            get
            {
                return 3;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=1,7,3,5,4,9,4,4,6,8,1,5,7,6,4&cfgs=4120&ver=2&def_sb=4,9,6,3,5&reel_set_size=5&def_sa=6,2,3,7,5&scatters=1~20,5,2,0,0~20,15,10,0,0~1,1,1,1,1&gmb=0,0,0&rt=d&gameInfo={props:{max_rnd_sim:\"1\",max_rnd_hr:\"413907\",max_rnd_win:\"5000\"}}&wl_i=tbm~5000&sc=10.00,20.00,30.00,40.00,50.00,100.00,150.00,200.00,250.00,375.00,500.00,750.00,1250.00,2500.00,3750.00,5000.00&defc=50.00&wilds=2~0,0,0,0,0~1,1,1,1,1&bonuses=0&fsbonus=&paytable=0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;500,100,25,0,0;400,80,20,0,0;250,50,15,0,0;100,25,8,0,0;100,25,8,0,0;75,10,3,0,0;75,10,3,0,0&reel_set0=8,8,8,4,1,8,6,6,6,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,6,4,1,4,6,4,6,4~9,9,9,3,1,5,7,9,5,7,5,3,1,3,1,5,1,5,1,3,7,1,5,7,1,7,5,3,7,1,5,1,5,1,5,1,7,5,1,3,7,5,3,5,7,5,1,5,1,5,1,5,3,7,1,7,5,1,3,5,3,7,1,5,1,5,1,7,5,1,7,3,7,3,1,7,5,1,7,5,3,7,5,1,5,1,5,7,5,1,5,7,1,7,1,7,3,1,7,5,3,1~7,4,3,8,6,1,5,9,5,4,1,3,1,8,1,4,8,1,8,1,4,8,5,8,1,8,1,4,9,5,3,8,3,8,4,1,8,3,4,8,9,8,4,8,4,1,8,1,8,4,3,4,3,5,8,9,5,1,3,1,5,9,8,4,5,1,4,3,4,8,3,8,5,8,1,5,4,8,4,5,8,4,1,5,1,8,1,9,3,5,1,5,3,4,3,4,8,1,9,1,4,5,8,9,6,5,8,1,6,5,1,4,3,5,4,3,4,5,1~8,9,5,1,6,7,4,3,1,9,4,9,1,7,1,9,4,9,1,9,3,6,1,9,7,9,3,1,6,9,1,5,3,9,4,9,7,9,4,9,4,7,1,4,6,4,9,6,1,9,6,1,7,1,3,1,9,7,6,4,3,9,6,7,9,7,6,9,1,6,7,3,1,3,9,6,1,9,1,4,3,4,9,1,9,6,1,9,4,1,6,1,6,3,9,4,7,1,6,1~1,8,5,3,6,9,4,7,6,5,7,6,5,8,4,6,8,6,7,4,8,7,8,9,5,7,4,9,6,5,7,6,8,4,8,9,8,5,4,7,8,4,8,7,4,7,4,8,6,7,6,7,4,6,5,8,6,8,5,4,5,8,5,8,5,8,6,4,6,7,5,9,6,5,6,8,4,6,7,8,3,7,8,7,8,7,6,8,7,8,6,5,8,7,5,8,6,4,6,7,6,7,4,8,6,9,5,6,7,8,9,8,5,6,4,5,7,9,5,7,9,7,6,9,8,4,8,5,9,5&reel_set2=5,7,9,3,4,8,1,6,4,3,7,3,6,8,4,3,7,4,7,4,7,6,3,8,6,7,6,4,7,3~2,1,9,5,4,3,6,8,7,5,1,4,5,1,4,1,8,1,4,5,4,3,1,5,1,4,8,5,1,4,1,8,5,4,5,8,1,4,5,8,1,5,4,8,3,1,3,1,4,3,1,5,1,8,1,4,5,8,4,1,5,8,5,1,4,3,7,1,5,4,1,4,3,8,5,1,8,4,5,8,1,4,1,3,5,3,8,5,4,1,8,1,8,7,1,8,5,6,1,3,1,8,4,1,3,4,5,7,8,3,7,1,8,1,5,7,1,8,3,4,1,3,9,5,1,5,3,1,3,7,1,5,1,8,9,8,9,4,1,8~7,4,3,8,9,5,1,6,2,1,5,8,5,8,6,8,5,1,8,1,8,3,6,1,5,8,3,9,8,5,9,6,1,5,8,5,1,9,8,9,4,3,9,8,1,9,2,9,1,5,1,6,1,5,8,9,8,9,8,1,9,6,9,8,9,8,1,8,1,5,8,6,1,5,8,9,5,6,8,9,1,5,1,6,5,1,6,4,1,9,8,1,8,5,8,5,1,9,5,8,9,6,1,6,8,1,2,8,9,1,8,1,8,5,9,8,1,9,8,5,9,8,9,8,9,6,5,1,9,8,9,5,8,5,1,9,8,5,1,6,1,8,5,1,9,8,1,5,9,8,9,1,5,9,1,8,5,1,5,1,6,8,5,1,9,1,8,5,8,6,8,1,8,1,9,5,1,8,2,9,5,8,6,1,8,9,8,9,5,8,1,9,8,5,9,8,5,1,9,1,2,8,1,2,1,6,5,8,9,8,1,9,8~9,1,4,6,2,7,3,5,8,6,4,3,1,2,6,5,3,2,7,4,6,1,2,1,3,1,3,1,4,8,4,7,4,6,7,8,3,4,2,8,2,3,2,6,4,1,8,3,1,8,2,4,1,2,5,6,4,2,6,1,7,4,6,3,4,8,4,1,3,1,4,3,4,2,6,4,3,2,3,6,8,4,3,7,8,4,6,4,8,6,8,6,3,7,3,1,6,3,4,6,4,7,5,2,6,2,4,2,3,7,4,2,6,3,7,1,3,6,5,3,8,6,4,8,3,4~6,7,8,9,4,3,5,1,3,7,8,4,5,4,8,7,3,8,3,7,1,8,7,3,8,3,8,3,7,8,4,8,7,4,8,3,4,8,9,8,7,3,8,3,8,3,9,4,8,3,5,3,1,7,9,8,4,3,1,8,3,8,3,7,3,8,3,7,8,1,3,7,3,7,8,3,8,3,8,7,5,7,3,8,9,7,8,3,9,8,9,7&reel_set1=5,9,9,9,3,9,7,1,3,9,1,7,9,3,1,9,3,7,9,1,3,1,3,9,3,9,7,3,9,3,9,3,7,9,1,9,1,9,3,1,7,9,7,3,9,7,9,3,9,1,3,9,3,9,1,9,1,3,7,3,9,1,7,9,1,3,9,3,9,3,1,3,9,1,9,1,9,1,3,1,3,9,3,9,7,9,3,1,3,9,7,1,9,1,9,1,3,9,7,3,7,3,9,3,9,7,9,3,9,1~6,4,1,8,6,6,6,8,8,8,1,8,1,8,1,8,1,4,8,1,4,8,1,4,1,4,1,4,8,1,4,1,4,8,1,4,1,4,1,8,1,4,8,1,4,8,1,8,1,8,1,8,1,4,1,4,8,1,4,8,1,4~1,6,5,9,8,3,4,7,5,6,5,4,5,9,5,3,5,9,5,8,9,5,9,5,9,5,9,5,9,3,5,9,5,9,5,9,3,5,8,9,5,3,5,9,8,5,9,5,3,5,9,5,9,5,9,5,9,3,5,3,5,9,4,9,5,3,4,5,3,9,3,5,9,5,6,5,8,5,8,5,9,3,5,3,8,5,9,5,3,6,9,5,3,8,5,8,5,9,5,3,9,7,5,9,5,8,7,9,8,9,4,6,5,9,6,9,8,9,5,9~9,8,4,5,6,1,3,7,1,4,8,4,5,1,6,5,4,5,4,5,6,5,6,8,4,5,1,4,8,6,1,4,8,1,8,1,6,7,5,1,8,7,5,7,5,1,6,5,1,6,1,6,1,4,1,4,7,6,5,4,6,8,6,8,5,4,6,1,8,5,6,1,5,8,4,1,4,6,7,4,6,7,6,7,6,5,1,5,4,6,1,6,5,6,5,8,3,6,5,1,5,1,5,6,8,7,1,7,1,5,4,5,6,5,1,8,1,6,8,1,5,1,7,1,4,6,1,7,8,5,8,5,8,1,7,5,6,5,1,4,5,7,4,7,6,5~4,3,5,6,9,8,1,7,1,9,5,1,9,7,1,6,7,6,7,8,5,9,3,6,5,3,6,5,6,7,9,5,6,7,6,3,1,6,5,6,1,6,1,6,5,7,9,7,6,3,9,7,6,9,6,1,5,6,5,3,9,6,9,6,8,1,9,1,6,7,5,9,7,6,1,6,5,7,6,5,9,5,1,6,3,9,5,1,3,9,6,5,6,9,1,6,5,6,1,9,5,6,9,3,5,3,6,5,6,1,6,8,3,9,6,8,3,6,7,6,9,6,5,7,8,6,1,6,7,3,6,5,6,7,9,6,7,1,6,9,5,6,5,6,9,6,8,5,6,7,3,6,3,6,3,8,3,5,6,9,5,7,3,1,6&reel_set4=7,1,3,8,4,9,5,6,1,5,4,1,9,4,5,9,4,5,1,5,1,9,8,5,1,8,9,4,9,1,4,8,9,1,8,4,1,5,8,1,9,1,8,9,8,1,5,8,9,5,9,5,8,1,6,8,9,5,9,1,5,4,1,9,5,1,8,4,8,1,4,8,5,9,4,5,1,5,1,9,5,3,5,9,5,8,5,9,3,5,8,1,8,9,1,9,6,4,1,8,6~6,2,4,7,8,1,3,9,5,2,1,7,3,7,1,4,7,8,3,8,2,5,3,8,2,4,2,3,5,8,7,2,5,9,1,8,7,4,3,5,2,5,3,2,3,7,2,5,2,3,1,8,4,7,2,5,8,7,1,7,5,7,8,5,1,8,3,9,5,3,1~8,4,6,9,1,7,3,2,5,1,7,6,9,3,4,3,5,1,7,1,6,3,9,5,3,1,9,7,2,7,3,1,3,5,3,1,3,2,3,1,3,7,3,5,9,3,5,1,7,5,3,2,1,4,1~8,3,5,2,4,9,1,6,7,6,3,4,9,3,2,9,2,5,4,9,2,4,3,4,9,5,4,2,9,3,2,5,2,9,2,9,3,2,4,9,1,4,5,2,9,4,9,3,1,3,1,9,5,6,9,2,3,4,1,3,5,2,1,9,2,3,2,3,2,4,5,2,1,2,4,2,4,9,7,6,3,4,9,4,9,4,5,4,2,1,9,2,3,5,2,9,4,7,5,2,4,5,6,1,4,2,9,2,5,4,3,4,1,2,3,1,2,5,2,1,4,5,3,9,3,9,2,1,2,1,5,2,5,4,2,1,3,2,4,3,9,4,9,2,9,2,3,4,1,4,3,4,3,4,3,2,3,9,4,1,9,4,3,9,2,5,3,2,5,9,2,4,9,3,1,5,9,4,1,2,9,6,5,4,2,5,3,9,2,4,9,2,1,3,4,1~7,6,8,9,4,5,3,1,8,9,8,3,6,9,6,9,8,3,4,1,8,3,8,3,9,8,3,8,6,8,3,8,9,8,9,8,9,8,6,8,9,3,4,5,9,8,6,5,8,6,5,8,9,4,9,6,9,1,9,8,9,5,3,8,9,6,9,4,3,6,8,1,8,6,3,9,5,9,4,8,3,8,3,8,5,9,8,3,8,4,3,8,6,4,8,9,6,8,6,9,4,8,3,6,3,9,5,9,4,8,9,8,6,4,8,9,1,8,6,9,6,1,9,6,3,8,3,9,8&reel_set3=9,5,3,1,6,8,7,4,1,4,8,4,6,4,3,1,3,6,3,4,1,3,5,4,3,5,4,5,6,4,3,6,1,6,4,6,3,5,6,8,6,3,1,6,4,3,1,3,6,4,1,3,6,3,6,3,6,4,6,1,5,6,5,4,6,1,6,4,6,1,3,4,3,1,4,6,1,6,4,6,5,6,3,6,5,1,5,3,4,6,5,3,4,1,5,4,3,1,6,4,8,6,3,1,6,5,1,4,1,4,3,4,3,6,5,6,1,4,3,4,6,1,5,6,3,4,6,1,6,8,6,3,6,1,6,4,8,5,6,1,4,5,3,4,5,1,5,8,5,3,4,6,3,1,4,1,4,5,4,6,3,6,4,3,1,6,3,1,6,1,3,5,1,5,3,4,6,5,1,5,6,3,1,3,1,6~4,6,8,9,7,1,3,5,2,7,8,6,5,7,2,5,2,1,9,1,9,7,1,9,5,6,9,3,5,7,6,7,9,7,9,8,7,9,5,9,7,9,8,3,9,5,9,7,5,2,9,2,9,7~3,2,9,7,5,1,4,6,8,5,6,5,4,5,6,4,5,6,7,4,7,5,6,7,6,5,7,1,4,7,4,5,7,4,8,4,7,5,2,4,9,5,4,1,8,5,4,5,8,5,2,5,6,5,7,6,5,6,5,6,4,2,6,4,5,6,4,7,6,7,1,4,2,6,4,5,1,7,2,7,5,2,5,7,1,5,6,2,5,7,4,8,6,5,4,5,6,5,7,5,4,6,4,6,2,5,4,1,5,4,5,6,8,7,4,5,7~9,2,7,4,3,8,5,6,1,2,7,6,2,8,2,5,8,4,1,6,2,6,2,8,2,6,2,8,6,8,2,8,2,1,6,8,4,7,8,2,6,8,1,8,1,6,2,8,4,8,2,4,7,2,1,2,8,6,2,7,2,8,2,6,8,2,1,2,6,7,1,7,2,1,2,8,2,3,2,8,1,2,4,7,2,6,2,8,4,7,4,1,6~4,8,6,1,7,5,9,3,8,6,1,5,8,7,6,5,9,5,6,9,5,6,5,9,5,6,9,5,9,6,7,1,6,9,8,9,6,1,8,1,9,6,9,6,8,6,8,1,6,1,5,1,6,9,3,7,9,1,8,6,5,9,1,6,1,6,9,6,8,9,7,1,9,6,7,5,6,9,1,8,6,9,5,9,6,8,9,5,6,9,8,6,8,5,6,1,9,5,6,8,6,9,6,1,8,5,1,5,1,5,9,1,9,6,9,5,9,5,1,9,6,5,1,9,5,9,6,5,6,7,9,8,6,8,1,5,1,5,1,5,1,6,5,6,8,6,1,9,1,8,5,8,5,6,9,6";
            }
        }
	
	
        #endregion
        public PhoenixForgeGameLogic()
        {
            _gameID = GAMEID.PhoenixForge;
            GameName = "PhoenixForge";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["reel_set"] = "0";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
        }
	
    }
}
