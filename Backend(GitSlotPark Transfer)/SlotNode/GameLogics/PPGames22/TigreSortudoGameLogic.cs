using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class TigreSortudoGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs5luckytig";
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 5; }
        }
        protected override int ServerResLineCount
        {
            get { return 5; }
        }
        protected override int ROWS
        {
            get
            {
                return 3;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=4,4,5,1,3,7,4,4,6&cfgs=1&ver=3&def_sb=4,3,6&reel_set_size=9&def_sa=4,3,6&scatters=&rt=d&gameInfo={rtps:{regular:\"96.50\"},props:{max_rnd_sim:\"1\",max_rnd_hr:\"1140250\",max_rnd_win:\"2500\"}}&wl_i=tbm~2500&sc=40.00,80.00,120.00,160.00,200.00,400.00,600.00,800.00,1000.00,1500.00,2000.00,3000.00,5000.00,10000.00,15000.00,20000.00&defc=200.00&wilds=2~250,0,0~1,1,1&bonuses=0&ntp=0.00&paytable=0,0,0;100,0,0;0,0,0;25,0,0;10,0,0;8,0,0;5,0,0;3,0,0;0,0,0;0,0,0&reel_set0=4,6,6,1,6,4,5,4,1,1,3,6,6,5,4,6,4,7,6,3,4,4,4,4,6,3,6,2,5,3,7,5,7,7,7,7,4,7,4,6,2,3,5,5,3,3,3,7,7,3,4,4,6,4,7,5,6,6,6,1,3,3,7,1,7,6,7,3,5,5,5,5,1,7,6,7,3,7,6,1,1,7~6,5,1,7,6,5,7,2,4,5,5,4,4,3,1,6,1,6,6,4,4,4,7,3,3,3,1,6,7,4,3,7,7,7,7,2,5,7,7,7,6,7,5,7,3,3,7,3,5,6,3,5,5,5,5,5,3,5,6,6,4,5,7,7,4,6,6,6,5,1,4,4,7,1,5,7,7,3,7,5,3~7,6,1,1,5,6,7,4,7,3,6,6,6,6,1,3,3,5,7,3,1,3,3,5,3,7,7,4,6,7,4,4,4,6,3,4,5,3,4,7,7,7,7,7,7,1,3,4,7,2,4,4,6,4,4,5,5,5,7,6,6,5,3,6,6,5,3,5,7,4,4,4,4,7,1,7,7,5,4,6,7,1,3,5,5&reel_set2=9,9,9,9,9,9,9,9,9,2,9,9,9,9,9,9,9,2,9,9,9,9,9,9,9,9,9,9,9,9,2,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,9,9,9,9,2,9,9,9,9,9,9,9,9,9,9,9,9,2,9,9,9,9,9,9,2,9,9,9,9,9,2,9~9,9,9,9,9,9,9,9,9,2,9,9,9,9,9,9,9,9,2,9,9,9,9,2,9,9,9,2,9,2,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,9,9,9,2,9,9,9,9,2,9,9,9,9,9,2,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,2,9,2,9,2~9,9,9,9,9,9,9,9,9,9,9,9,9,2,9,2,9,2,2,9,9,2,9,9,9,9,9,9,9,9,9,9,9,9,9,2,9,9,2,9,9,2,9,9,9,9,9,9,2,9,9,2,9,9,9,9,9,9,9,9,9,9,9,9,9,2,2,9,9,9,9,9,9,9,9,9&reel_set1=2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2~2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2~2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2&reel_set4=9,9,9,9,9,9,9,9,9,9,9,9,3,9,9,9,9,9,9,9,3,9,9,3,9,9,2,9,9,9,9,3,9,9,9,9,9,9,9,9,9,9,9,9,3,9,9,3,9,3,9,9,9,9,9,9,9,9,3,9,9,2,9,9,9,9,9,9,9,9,3,9,3,9,9,9,3~9,9,9,9,9,9,2,9,9,9,9,9,9,9,9,3,9,9,9,9,9,3,9,9,3,9,9,9,9,9,9,3,9,9,9,9,9,9,9,9,9,3,9,9,9,9,9,9,9,9,9,9,9,3,9,9,9,9,9,9,9,9,9,9,9,2,9,9,3,3,9,9,9,3,9,9,9,9,9,3,9,9,9,9,9,9,9,3,9,9,9,3,3,9,3~9,9,9,9,9,3,9,9,3,9,9,3,9,9,3,9,9,9,9,9,3,9,3,9,2,3,9,9,9,9,9,9,2,9,9,9,3,9,9,9,9,9,9,9,9,9,9,9,9,9,3,3,9,9,9,3,9,9,9,9,9,9,9,9,9,9,9,9,9,3,9,9,9,9,9,9,9,3,9,9,9,9,9&reel_set3=9,2,9,9,2,9,9,9,9,9,9,9,9,9,9,9,9,1,9,9,1,9,9,9,9,9,9,9,9,9,9,9,9,1,9,9,1,9,9,1,9,9,9,9,9,9,9,9,9,1,9~2,9,9,1,9,9,9,9,9,1,1,9,9,9,1,9,9,9,9,9,9,9,9,1,1,9,9,1,9,9,9,9,9,9,9,9,1,9,9,9,9,9,9,9,9,1,9,9,9,9,9,9,9,9,9,9,9,1,9,9,9,9,9,9,2,9,1,9,9,9,9,1,9,9,9,1,9,9,9,9,9,9,9,9,9,9,9,1,9,9,9,9,9,9,9,1,9,9,9,9,9,9~9,9,9,9,1,9,9,1,9,9,9,9,9,9,1,9,9,9,9,9,9,9,9,9,9,1,9,1,9,9,9,9,1,9,1,9,9,9,9,9,2,9,9,9,9,9,9,9,9,9,9,9,9,9,1,9,9,9,9,9,1,9,9,9,9,9,2,9,9,9,1,9,1,9,9,9,9,9,1,9,9,9,9,9,9,9,9,9,9,1,9,9,9,9,9,9,1,9,9,9&reel_set6=5,9,9,9,9,5,9,9,9,5,9,9,9,9,9,9,9,9,9,5,9,9,9,9,9,9,9,9,9,5,9,9,5,9,9,9,9,9,9,9,9,9,5,9,9,9,9,9,9,2,9,9,9,9,9,5,9,5,9,9,9,5,9,5,9,9,9,9,9,5,9,9,9,9,9,5,9,9,9,9,9,9,5,9,9,2~9,5,5,9,9,9,9,9,9,9,9,9,9,9,5,5,9,9,5,9,9,9,9,9,9,9,9,5,9,9,9,9,9,9,9,9,9,9,9,5,9,9,5,5,9,9,9,9,9,5,9,9,2,9,9,9,5,9,9,9,5,9,9,9,9,9,9,9,2,9,9,5,9~9,9,9,9,9,5,9,9,9,9,9,9,9,9,5,5,9,5,9,9,9,9,9,9,2,9,9,5,9,9,9,9,9,9,9,9,5,9,5,9,9,9,9,9,9,9,9,5,5,9,9,9,5,9,9,9,9,9,9,2,9,9,5,9,9,9,5,9,5,5,9,9,5,9,9,9,9,9,9,5,5,9,9,9,9,9,9,9,9,5&reel_set5=9,4,9,4,9,4,9,9,4,9,9,9,9,9,9,9,9,9,4,9,9,9,9,4,9,9,2,4,9,4,9,9,9,9,9,9,9,9,9,4,9~9,4,2,9,9,9,9,9,9,9,4,4,9,9,9,9,9,9,9,9,2,9,9,9,9,9,9,9,9,9,9,9,4,9,9,9,9,4,9,9,9,4,9,4,9,9,9,4,9,9,9,4,9,9,9,9,4,9,9,9~4,9,9,9,9,9,9,9,4,9,9,4,4,9,2,9,2,9,9,4,9,9,9,9,9,9,9,9,4,9,9,9,9,9,9,9,9,4,9,9,4,9,9,4,9,9,9,9,9,9,9,9,4,9,9,9,9,9,9,9,9,4,9,9,4&reel_set8=9,9,9,7,9,9,7,7,9,7,9,9,9,9,7,9,9,9,2,9,9,9,9,7,9,7,9,7,9,7,7,9,9,7,9,9,9,7,7,9,9,9,9,7,9,7,9,9,9,7,9,9,9,9,7,9,9,9,9,7,7,9,7,9,7,7,2,9,9,9,7,9,7,7,9,9,7,2,9,9,9,9~7,9,7,9,9,9,9,9,7,9,7,7,9,9,9,9,9,9,9,9,7,7,9,9,9,9,7,9,9,9,9,2,9,9,9,7,9,7,7,2,7,9,9,9,9,9,9,9,9,7,9,9,9,9,9,9,9,7,2,9,9,7,9,7,7,9,7,7,9,9,9,9,9,9,9,7,9,9,9,9,2,7,9,9,9,9,7,7,9,7,9,9,9,9,9~9,7,9,9,9,9,9,7,9,9,9,7,9,7,9,7,7,2,9,9,7,9,7,9,9,9,7,9,9,2,9,9,7,9,9,9,9,9,9,7,9,9,9,9,9,7,9,9,9,9,7,9,9,9,9,9,7,9,9,9,9,7,9,9,9,9,7,7,9,9,2,9,7,7,9&reel_set7=6,9,9,9,9,6,9,9,6,9,6,9,9,9,9,9,6,9,9,6,9,9,9,9,9,9,9,9,9,6,9,9,9,9,9,2,9,6,2,6,9,9,9,9,9,9,6,9,9,6,9,9,6~6,9,9,9,6,9,9,2,9,9,9,9,9,6,9,9,9,9,9,9,9,9,9,9,9,6,9,9,2,9,9,9,6,9,9,9,9,9,9,9,9,9,9,9,6,2,9,9,9,9,9,6,9,9,9,9,9,9,6,9,6,6,9,6,9,9,9,6,9,6,9,9,9,6,9,9,6,9,6,6,9~6,9,9,6,9,9,9,9,6,9,9,9,9,6,9,9,9,6,9,6,9,2,9,9,9,6,9,2,9,9,6,6,9,9,9,9,9,9,6,9,9,6,9,9,9,9,9,9,6,9,9,6,9,6,9,9,9,9,9,9,6,9,2,9,9,9,6,9";
            }
        }
        #endregion
        
        public TigreSortudoGameLogic()
        {
            _gameID     = GAMEID.TigreSortudo;
            GameName    = "TigreSortudo";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["reel_set"] = "0";
	        dicParams["st"] = "rect";
	        dicParams["sw"] = "3";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
        }
    }
}
