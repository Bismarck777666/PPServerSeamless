using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class FireStampedeGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vswaysstampede";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return true;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 20; }
        }
        protected override int ServerResLineCount
        {
            get { return 20; }
        }
        protected override int ROWS
        {
            get
            {
                return 5;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=1,6,14,2,9,15,9,7,11,8,7,17,5,11,6,12,8,18,7,11,10,5,13,18,12,13,17,5,10,18&cfgs=9164&ver=3&mo_s=17;18;15&mo_v=500,4000,80000;40,60,80,120,160,200,240,320,400,600,800,1000,1200,1600,2000,2400,3200,4000,6000,8000,16000;7,10,15,20,25&def_sb=4,9,6,7,11,18&reel_set_size=8&def_sa=5,11,3,3,12,18&mo_jp=500;4000;80000&scatters=1~0,0,0,0,0,0~0,0,0,0,0,0~1,1,1,1,1,1;13~0,0,0,0,0,0~0,0,0,0,0,0~1,1,1,1,1,1&rt=d&gameInfo={props:{max_rnd_sim:\"1\",max_rnd_hr:\"12048193\",max_rnd_win:\"4275\"}}&wl_i=tbm~4275&mo_jp_mask=jp1;jp2;jp3&sc=10.00,20.00,30.00,40.00,50.00,100.00,150.00,200.00,250.00,375.00,500.00,750.00,1250.00,2500.00,3750.00,5000.00&defc=50.00&purInit_e=1&wilds=2~0,0,0,0,0,0~1,1,1,1,1,1&bonuses=0&paytable=0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,100,40,20,10,0;0,40,20,10,0,0;0,25,12,8,0,0;0,25,10,5,0,0;0,20,8,4,0,0;0,15,6,3,0,0;0,15,6,3,0,0;0,10,5,2,0,0;0,10,5,2,0,0;0,10,5,2,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0&total_bet_max=10,000,000.00&reel_set0=7,12,12,13,9,12,7,1,9,9,10,7,8,8,12,8,8,4,12,9,10,7,12,10,9,12,9,10,7,10,9,9,9,8,3,6,1,3,4,10,7,10,12,12,1,11,4,9,1,9,9,8,10,9,12,3,10,10,3,4,12,10,5,7,7,7,10,7,8,12,9,8,7,12,7,12,13,9,10,7,9,7,3,7,12,9,8,8,4,7,4,4,12,10,12,8,7~1,3,1,3,11,1,6,11,11,1,11,7,6,6,4,12,3,2,1,8,1,8,12,8,11,8,8,8,5,10,8,9,6,3,10,11,4,8,9,8,3,2,4,6,11,12,1,8,5,8,12,7,12,8,1,6,6,6,10,8,10,10,6,3,10,7,6,11,12,11,12,8,11,3,1,11,7,8,11,10,11,4,4,11,3,1,1,1,1,1,6,7,8,11,11,10,1,8,8,6,8,6,12,3,11,4,11,8,1,3,10,4,4,11,13,6,6~5,5,3,9,11,12,8,5,1,10,9,11,8,11,3,7,7,6,5,10,11,7,11,5,7,3,8,5,11,7,4,8,3,7,7,9,11,5,5,1,10,7,7,7,6,11,1,6,5,1,11,6,5,10,1,1,5,11,7,5,11,12,1,1,5,5,7,5,5,9,5,3,5,5,1,6,3,10,11,11,1,8,5,7,9,5,1,1,1,1,1,6,11,7,11,1,9,5,9,7,1,2,1,11,11,6,11,5,3,9,10,11,5,1,13,8,5,4,9,5,5,7,1,7,13,6,5,11,8,2,7,5,10~12,6,6,9,3,8,10,1,6,12,1,3,10,1,8,1,10,6,7,7,7,10,10,7,12,4,2,1,12,5,6,9,8,12,6,12,12,1,9,4,5,6,6,6,5,13,12,3,4,7,1,12,6,10,12,6,7,1,12,6,7,7,1,1,1,8,9,1,11,12,4,5,8,12,3,12,6,4,1,7,1,1,9,4,12~1,1,8,1,4,8,3,11,1,3,10,6,5,1,5,8,9,4,3,10,6,7,9,6,11,1,7,8,5,11,3,1,5,7,9,4,11,11,6,12,11,7,1,5,5,5,8,8,4,5,10,1,11,7,1,6,9,4,1,11,11,3,10,4,6,4,11,6,7,9,1,11,5,11,5,8,5,12,10,5,1,9,1,6,8,10,9,1,6,10,1,1,1,9,10,10,8,8,13,1,1,11,11,9,5,9,7,4,10,3,6,11,7,10,8,13,8,1,1,9,1,1,11,7,9,9,4,8,7,11,5,1,8,6,5,7,11,3,5~18,18,18,18,18&reel_set2=3,6,12,9,7,9,7,12,12,10,12,1,3,12,8,12,9,13,12,10,12,7,8,13,8,9,9,10,9,8,1,7,7,10,7,4,9,9,9,7,5,4,7,12,9,11,7,7,12,8,10,9,12,9,10,3,8,10,10,9,12,10,12,4,8,10,4,10,7,12,7,1,7,8,4,12,4,7,7,7,1,10,12,7,8,4,11,12,9,9,10,10,8,8,9,9,12,7,6,1,9,10,5,8,9,3,10,12,7,7,3,7,8,13,9,4,12,7~3,6,12,12,10,1,8,3,3,4,10,11,1,11,8,1,8,3,6,8,8,8,4,6,6,4,11,4,8,11,11,8,10,6,10,1,3,7,8,8,11,12,6,6,6,11,8,1,11,1,8,11,10,12,5,10,7,11,3,11,2,8,7,10,9,1,1,1,1,1,4,11,7,6,11,11,8,6,8,8,3,12,11,1,3,1,13,12,6,1,4,6~5,5,6,11,6,12,5,9,11,1,5,1,11,7,4,1,3,3,7,7,2,1,9,1,1,5,5,7,10,6,5,5,11,11,1,9,6,7,7,7,1,7,10,3,5,1,7,6,3,9,8,5,1,5,5,2,11,10,5,9,5,11,11,6,5,3,8,11,5,1,11,10,8,7,13,5,10,5,7,1,1,1,1,1,7,3,1,11,8,5,6,11,5,12,5,11,9,1,8,11,5,7,11,1,9,7,13,5,8,5,7,7,11,5,9,9,10,11,11,5,11,5,13,4~12,3,9,6,6,1,3,5,1,1,12,5,11,4,12,12,8,4,7,8,12,4,8,6,1,8,7,7,7,10,1,6,3,10,10,12,12,6,6,7,6,6,1,7,1,12,1,7,9,1,13,9,1,4,8,12,5,6,6,6,3,6,7,5,1,7,12,1,6,10,8,3,12,6,10,12,11,1,1,6,10,12,5,9,4,6,10,1,1,1,10,9,6,5,2,7,13,12,1,12,9,4,12,12,1,12,1,12,7,12,1,8,3,2,4,9,6,10,4~8,9,9,7,13,8,11,4,11,7,7,4,1,9,11,3,10,1,3,11,11,10,5,1,11,10,1,10,13,6,1,12,5,3,6,10,1,4,6,3,1,8,5,9,4,5,5,5,1,11,6,11,9,4,1,9,11,7,1,5,11,6,8,7,8,6,6,9,7,1,8,8,7,5,6,9,8,3,11,1,11,1,1,9,4,11,8,6,11,5,11,3,9,10,9,1,1,1,7,4,10,8,8,1,5,10,6,7,9,3,1,3,5,1,7,8,1,4,7,8,1,11,10,11,5,5,9,8,10,4,6,6,5,7,1,1,10,11,1,10,12,5,11,1,5,8~18,18,18,18,18&reel_set1=9,12,8,8,12,9,7,10,9,10,1,7,12,3,10,10,9,12,8,9,7,12,10,10,7,7,5,10,8,9,9,9,11,13,9,3,7,1,12,4,4,12,10,9,4,4,10,4,3,7,4,12,7,9,12,8,3,8,8,4,1,7,7,7,8,13,12,3,3,6,9,12,9,9,10,7,9,10,10,12,12,3,3,7,8,10,7,12,8,9,12,9,12,7,8,7,7~11,1,1,4,11,8,6,11,10,8,11,3,3,4,11,8,6,8,8,8,6,8,8,3,11,3,3,11,9,7,8,12,3,10,3,8,8,12,6,6,6,11,5,11,4,6,11,11,1,4,11,6,4,11,6,12,8,1,12,1,1,1,1,1,2,3,7,1,7,1,10,11,3,11,2,8,3,11,1,8,11,6,1,11,11,11,10,8,10,10,7,1,12,12,4,8,8,3,3,11,12,13,10,1,6,6~11,3,6,8,11,7,2,5,7,5,8,6,1,11,5,11,9,5,5,9,7,7,1,5,7,7,7,5,1,10,11,3,3,1,8,7,5,6,4,5,7,7,13,5,10,7,3,5,11,3,9,8,1,1,1,1,1,11,1,5,1,11,11,9,11,5,1,6,12,5,10,11,1,3,1,9,5,5,10,7,13,2,5~12,3,1,12,6,12,4,12,10,1,6,9,4,9,5,9,6,6,12,6,10,4,11,5,8,6,8,8,3,5,12,12,6,12,7,7,7,1,3,1,7,7,12,12,6,7,10,1,5,1,1,9,8,1,13,4,1,13,7,9,6,9,6,6,12,7,3,1,3,10,10,1,6,6,6,1,12,1,7,1,11,4,10,2,3,8,9,1,2,12,1,10,6,12,1,10,10,7,8,9,12,12,4,8,9,1,10,5,4,12,1,1,1,1,1,10,3,1,1,6,1,7,8,3,12,12,10,12,2,12,6,1,6,12,5,4,12,6,5,5,6,4,12,1,7,7,12,6,4,12,12,1~7,11,12,6,13,10,8,9,1,9,10,11,10,5,8,9,11,5,11,7,10,9,11,11,4,1,5,6,1,1,1,1,1,5,6,1,11,1,4,3,8,1,9,6,11,5,8,8,10,5,1,3,9,1,5,7,1,8,10,10,9,1,11,5,5,5,6,8,8,1,11,11,7,4,7,9,1,4,11,3,3,10,4,6,1,1,8,1,6,3,1,7,6,7,4,7~18,18,18,18,18&reel_set4=12,4,9,9,7,8,12,7,6,12,9,13,12,10,12,3,9,3,4,7,9,9,9,1,12,10,9,8,8,9,9,5,7,8,7,7,4,10,7,10,9,10,8,1,10,7,7,7,12,3,8,4,12,7,12,12,10,4,13,10,12,7,7,8,9,10,7,3,1,9,11~6,3,10,8,8,1,11,3,6,12,1,8,8,11,8,8,8,6,11,3,1,8,12,1,13,7,8,3,12,9,3,10,6,6,6,11,4,11,4,1,12,1,4,1,3,7,11,6,11,3,11,1,1,1,1,1,3,11,8,5,10,4,10,1,12,6,11,10,8,6,11,11,11,8,10,8,1,10,2,11,8,7,4,4,12,8,6,11,7,8~7,1,10,9,1,6,6,11,3,5,8,1,1,9,7,7,5,3,8,10,11,11,10,8,11,9,9,7,7,7,5,11,3,6,10,4,11,5,5,3,7,1,11,11,5,11,7,5,5,1,1,5,8,13,5,5,7,5,1,1,1,1,1,5,7,11,7,10,2,11,5,7,8,5,1,6,12,11,5,11,5,3,13,9,6,11,5,1,5,7,1,9~4,4,7,8,1,6,6,5,13,7,1,10,2,1,5,1,6,12,10,6,6,9,4,6,10,12,7,5,4,7,7,7,1,6,5,1,9,8,12,6,8,12,3,12,13,12,5,3,12,6,12,4,1,3,1,5,6,7,9,6,12,8,6,6,6,12,6,12,4,12,6,2,1,1,8,12,1,7,12,6,1,7,9,11,6,10,1,12,8,10,9,10,9,3,11,1,1,1,1,1,12,10,9,7,4,1,12,1,12,1,12,8,1,12,4,6,7,10,12,3,12,4,10,7,1,1,12,10,1,3,6~1,10,10,11,8,9,7,9,6,7,5,1,1,11,6,11,1,5,12,11,5,7,1,7,8,11,4,10,1,3,4,6,8,3,1,1,1,1,1,8,6,10,5,9,5,7,6,13,6,1,4,1,6,10,7,7,10,4,7,8,5,11,1,4,3,3,11,5,1,3,9,1,9,13,4,5,5,5,11,1,1,5,11,11,9,12,6,10,9,10,1,11,8,8,5,8,5,3,1,8,9,7,11,9,11,8,6,1,8,8,4,10,9,1,11~18,18,18,18,18&purInit=[{bet:2000,type:\"default\"}]&reel_set3=1,9,9,1,6,10,7,13,7,10,1,12,13,1,8,1,7,9,12,5,3,8,3,1,10,3,9,1,7,1,10,12,7,9,9,9,7,11,4,8,9,7,12,10,12,10,10,7,12,9,12,10,8,4,1,12,10,9,10,12,9,4,12,8,12,4,7,1,9,8,9,4,7~7,9,1,3,4,7,5,8,6,11,1,3,4,8,6,8,11,13,8,1,12,8,12,3,6,3,6,1,2,11,1,6,7,8,8,8,7,1,6,8,12,11,12,11,3,11,6,8,1,3,11,11,10,12,10,1,11,10,1,11,10,11,1,6,11,11,3,10,1,13,6,6,6,1,2,3,4,12,8,6,1,11,1,8,8,11,1,1,10,10,11,5,11,4,1,9,8,1,8,1,10,8,11,1,7,6,11,1,1,1,1,1,8,6,10,1,8,1,4,12,8,7,12,12,8,8,4,3,11,10,12,3,8,8,4,1,3,1,1,3,1,3,11,1,6,3,8~1,5,7,9,9,11,11,7,7,6,1,7,7,5,7,1,9,10,1,7,10,5,11,12,3,5,8,5,11,8,7,7,7,8,11,10,5,4,7,10,6,1,5,1,9,5,6,1,5,7,9,1,11,1,2,13,11,5,11,11,9,5,11,11,1,1,1,1,1,5,1,5,3,3,1,7,5,6,13,1,6,8,5,9,5,5,7,11,1,11,3,5,3,5,7,1,11,1,1,11,5~7,12,6,1,7,10,12,7,1,12,1,6,11,12,1,1,3,3,2,3,1,7,7,7,6,1,12,1,10,5,10,1,10,12,1,1,6,12,9,4,12,1,12,12,8,8,9,6,6,6,5,6,4,8,6,6,8,6,5,6,13,10,6,12,3,9,3,8,7,1,1,1,12,5,1,1,4,1,6,12,1,4,5,12,1,12,7,9,12,10,8,7,5,4,4~6,8,3,12,5,1,6,8,10,8,1,1,9,7,1,8,1,10,1,11,1,11,5,11,11,3,10,11,1,3,8,9,4,6,1,5,5,5,1,9,11,6,1,6,12,11,1,7,5,8,11,9,1,9,1,5,10,1,7,11,1,1,8,6,10,5,13,11,5,4,9,10,1,7,1,1,1,8,9,11,1,6,3,1,8,1,5,9,13,6,11,10,7,8,4,1,8,4,3,8,9,3,1,7,7,10,6,5,11,6,4,3,9,5,11~18,18,18,18,18&reel_set6=5,9,8,6,3,6,9,7,4,8,7,10,11,7,7,9,9,12,3,7,9,10,10,7,10,8,10,10,9,12,10,8,8,9,7,9,9,9,7,4,9,7,9,12,12,8,12,8,1,12,9,7,4,3,10,12,10,12,12,5,12,10,12,10,9,9,8,1,9,12,12,4,10,7,9,7,7,7,8,12,4,7,4,8,3,7,7,12,13,7,10,8,12,11,8,4,12,1,7,9,9,7,1,12,10,10,4,12,3,10,8,9,13,7~1,11,3,1,3,8,10,2,10,5,11,6,6,12,4,8,11,13,1,3,12,3,1,10,1,6,9,11,10,12,11,3,8,8,8,7,3,1,4,11,12,4,3,11,10,5,6,8,10,6,6,8,1,1,11,6,4,8,11,6,9,11,12,8,3,8,11,13,6,6,6,12,8,11,11,10,7,3,8,1,11,11,4,10,4,10,12,7,8,8,11,6,8,4,3,1,6,6,11,6,12,8,6,1,1,1,1,1,8,12,8,4,11,10,4,12,8,6,11,8,7,11,10,4,7,8,11,7,8,11,3,2,1,3,1,11,8,11,11,3,1,8~5,1,10,7,13,9,1,7,1,7,5,11,12,13,5,1,5,12,5,6,10,9,7,7,1,6,5,1,7,2,1,11,5,11,6,4,11,7,7,7,6,5,5,7,9,10,5,7,1,7,3,7,8,11,3,9,6,11,11,5,7,5,3,5,10,5,1,7,5,5,9,5,11,1,11,9,11,5,1,1,1,1,1,10,9,8,5,5,11,5,11,3,11,8,6,7,11,10,7,8,5,11,9,2,11,11,1,5,1,3,4,5,5,3,6,13,11,5,1,8,1,8~1,4,12,6,9,10,7,12,6,1,12,1,9,12,5,6,1,2,12,10,6,12,1,1,11,6,7,1,8,5,4,4,5,7,10,1,7,7,7,4,10,6,12,4,12,6,9,4,10,13,3,9,9,1,4,12,12,1,4,6,12,12,8,6,1,6,3,6,7,8,7,8,6,6,12,3,6,6,6,10,10,9,7,10,12,3,5,12,12,1,4,3,12,3,10,6,1,12,6,7,8,3,12,9,7,8,12,1,10,4,1,1,8,5,8,1,1,1,6,10,1,1,12,1,5,12,7,3,7,6,12,1,5,12,10,6,4,12,2,1,6,12,6,7,12,1,1,13,5,12,1,9,9,8,11~11,6,8,11,3,1,9,8,11,13,10,11,10,11,8,7,11,1,1,5,11,10,10,8,5,13,11,9,1,7,9,6,7,5,10,1,8,7,7,11,6,3,5,5,5,6,1,10,4,7,8,4,3,1,4,11,6,11,8,10,9,10,6,10,9,1,1,9,8,8,7,5,7,1,8,8,4,10,1,3,6,1,3,9,11,9,1,9,1,1,1,5,3,11,11,4,5,4,6,5,1,10,1,8,11,7,12,11,5,11,6,1,4,1,7,12,9,3,8,1,6,5,7,5,9,5,6,1,5,1,11,4,8,9,1~18,18,18,18,18&reel_set5=1,12,4,12,11,3,8,3,12,9,10,7,10,3,7,7,9,7,10,10,12,9,12,7,5,7,9,7,10,10,12,10,7,12,10,7,1,12,9,9,9,12,9,8,9,3,13,4,1,4,7,7,9,7,12,7,10,8,4,12,10,12,5,8,10,9,9,7,9,3,4,4,7,12,12,10,3,6,8,12,13,7,7,7,10,9,12,3,9,8,8,7,7,11,4,9,1,7,6,10,8,3,8,9,13,3,12,8,10,12,8,12,9,8,9,10,3,4,7,9,7,4,12,8,8~7,12,11,12,7,7,2,4,12,1,8,11,13,8,3,11,8,5,8,10,8,8,8,12,8,4,4,7,2,8,3,6,12,9,10,11,12,12,9,10,6,8,11,12,6,6,6,3,3,6,1,3,6,13,2,3,8,11,6,3,8,8,6,11,3,8,8,3,3,1,1,1,1,1,11,11,4,1,2,11,11,1,6,1,1,2,8,4,11,8,6,10,6,3,4,11,11,11,8,1,4,5,3,1,11,10,10,11,10,2,1,1,7,6,11,11,1,11,8,10,11~6,8,11,5,5,10,5,8,11,3,9,7,3,7,9,7,1,1,6,1,2,1,5,3,7,7,7,3,5,5,11,5,1,10,11,5,5,1,7,3,5,7,5,8,1,9,11,1,5,10,7,11,1,1,1,1,1,2,6,2,5,6,11,4,9,5,2,5,5,3,5,12,1,11,11,5,7,3,13,11,13,8,10,11,7~1,6,9,6,4,10,5,1,12,4,5,5,3,12,1,8,12,12,6,11,1,10,11,10,9,10,4,3,5,1,1,12,4,6,1,7,7,7,12,1,12,12,5,3,12,7,5,3,8,7,3,12,10,1,6,10,9,4,2,12,1,2,8,7,12,9,6,1,1,6,7,1,1,4,1,6,6,6,1,12,5,13,12,9,3,12,12,10,12,6,1,4,3,8,6,8,2,7,6,10,10,1,7,3,12,12,1,1,12,6,6,9,6,4,7,1,1,1,1,1,8,9,5,8,4,7,6,6,10,12,6,6,2,4,7,6,7,6,12,1,10,7,12,4,13,2,12,1,8,1,2,10,12,1,1,12,12,9~5,8,12,4,5,7,1,10,1,11,11,1,4,10,3,6,1,10,11,1,1,3,8,12,9,8,6,7,11,11,8,9,7,10,13,1,1,1,1,1,9,5,10,8,5,8,13,4,8,3,5,7,1,1,11,4,1,6,10,1,3,10,1,7,6,1,10,5,8,9,5,8,7,5,6,1,5,5,5,11,11,6,7,9,8,5,11,7,4,9,4,11,8,6,11,6,10,1,8,9,4,11,11,1,6,5,11,3,3,9,7,9,1,1,11,1~18,18,18,18,18&reel_set7=8,7,12,12,10,7,1,9,1,13,1,12,1,10,10,9,9,10,13,12,1,3,12,9,12,10,9,7,4,1,7,10,12,10,12,1,7,13,5,7,1,9,9,1,10,1,4,8,10,8,12,6,9,1,7,4,12,7,5,1,11,8,1,7,8,1,9,9,1,7,1,7,3,8,1,11,12,3,10,7,1,10,4,10,9,9,8,4,1,10,9,6,7,9,7,3,12,12,7,1,12,1,9,12~4,5,12,10,10,8,11,4,3,6,2,11,1,8,1,3,1,1,8,3,4,8,1,12,8,3,11,12,1,1,7,3,1,8,8,8,11,8,8,1,8,10,6,7,6,1,8,1,6,8,11,1,5,8,11,7,1,8,1,9,3,1,8,6,6,11,1,1,12,10,6,6,6,1,6,7,1,1,11,8,11,10,11,10,3,1,11,10,3,11,10,4,12,11,1,3,3,12,7,1,13,6,8,7,1,3,6,1,1,1,1,1,4,4,1,8,3,2,8,8,11,11,1,11,8,1,13,1,8,11,8,1,6,3,11,9,6,1,10,1,11,6,12,11,4,11,3,10~12,5,8,5,9,7,13,10,6,3,7,10,11,7,5,5,11,11,10,1,7,11,5,1,1,5,1,7,1,9,11,7,7,1,11,7,7,7,8,11,1,2,5,5,3,11,11,8,1,7,11,5,11,6,3,1,5,5,3,1,10,11,1,6,1,11,2,7,12,4,1,5,11,1,1,1,1,1,13,1,6,9,6,7,3,1,5,5,7,1,1,5,9,1,9,1,5,3,9,6,5,13,10,8,9,11,1,7,5,11,5,5,4,9,5~12,8,3,1,3,8,5,12,1,1,6,6,12,7,1,10,1,6,4,4,1,9,7,7,7,12,6,4,8,9,8,1,6,1,6,7,10,3,6,1,6,7,3,9,10,1,5,7,6,6,6,12,12,6,1,4,1,1,6,1,10,5,4,4,1,7,12,6,9,1,1,2,12,12,1,1,1,6,3,5,12,12,10,8,1,1,12,12,5,12,10,12,6,12,5,1,11,12,6,8,7,13~1,10,5,8,11,7,8,5,6,9,1,3,7,3,3,6,9,9,11,3,10,4,11,5,1,8,10,5,8,6,9,5,5,3,10,1,1,8,6,1,11,4,11,5,5,5,11,9,5,8,6,1,9,9,6,11,6,1,1,11,11,1,4,13,1,11,4,8,8,9,9,11,7,9,12,7,11,6,1,6,10,1,1,6,8,1,3,1,5,7,11,5,1,1,1,13,1,1,4,1,7,1,3,1,1,11,8,7,8,8,1,10,7,11,9,9,12,8,10,1,10,8,1,5,1,6,11,1,7,10,3,9,6,6,1,11,4,1,8,10,5,3~18,18,18,18,18&total_bet_min=10.00";
            }
        }
	
        protected override double PurchaseFreeMultiple
        {
            get { return 100; }
        }
        protected override bool SupportPurchaseFree
        {
            get { return true; }
        }
        protected override bool HasPurEnableOption
        {
            get { return true; }
        }
	
	
        #endregion
        public FireStampedeGameLogic()
        {
            _gameID = GAMEID.FireStampede;
            GameName = "FireStampede";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string strInitString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, strInitString);
	    	dicParams["reel_set"] = "0";
	        dicParams["st"] = "rect";
	        dicParams["sw"] = "6";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
            if (dicParams.ContainsKey("mo_tw"))
                dicParams["mo_tw"] = convertWinByBet(dicParams["mo_tw"], currentBet);

            if (dicParams.ContainsKey("apwa"))
                dicParams["apwa"] = convertWinByBet(dicParams["apwa"], currentBet);

            
            if (dicParams.ContainsKey("wlc_v"))
            {
                string[] strParts = dicParams["wlc_v"].Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                for (int i = 0; i < strParts.Length; i++)
                {
                    string[] strValues = strParts[i].Split(new string[] { "~" }, StringSplitOptions.RemoveEmptyEntries);
                    strValues[1] = convertWinByBet(strValues[1], currentBet);
                    strParts[i] = string.Join("~", strValues);
                }
                dicParams["wlc_v"] = string.Join(";", strParts);

            }
        }
	
        protected override void readBetInfoFromMessage(GITMessage message, string strUserID)
        {
            try
            {
                BasePPSlotBetInfo betInfo = new BasePPSlotBetInfo();
                betInfo.BetPerLine = (float)message.Pop();
                betInfo.LineCount = (int)message.Pop();
		
		
                if (message.DataNum >= 3)
                    betInfo.PurchaseFree = true;
                else
                    betInfo.PurchaseFree = false;
		
                if (betInfo.BetPerLine <= 0.0f)
                {
                    _logger.Error("{0} betInfo.BetPerLine <= 0 in FireStampedeGameLogic::readBetInfoFromMessage {1}", strUserID, betInfo.BetPerLine);
                    return;
                }
		
                if (betInfo.LineCount != this.ClientReqLineCount)
                {
                    _logger.Error("{0} betInfo.LineCount is not matched {1}", strUserID, betInfo.LineCount);
                    return;
                }

                BasePPSlotBetInfo oldBetInfo = null;
                if (_dicUserBetInfos.TryGetValue(strUserID, out oldBetInfo))
                {
                    if (oldBetInfo.HasRemainResponse)
                        return;

                    oldBetInfo.BetPerLine   = betInfo.BetPerLine;
                    oldBetInfo.LineCount    = betInfo.LineCount;
                    oldBetInfo.MoreBet      = betInfo.MoreBet;
                    oldBetInfo.PurchaseFree = betInfo.PurchaseFree;
                }
                else
                {
                    _dicUserBetInfos.Add(strUserID, betInfo);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in FireStampedeGameLogic::readBetInfoFromMessage {0}", ex);
            }
        }
	
    }
}
