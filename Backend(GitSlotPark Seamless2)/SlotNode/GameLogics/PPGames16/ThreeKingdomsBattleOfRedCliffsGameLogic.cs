using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class ThreeKingdomsBattleOfRedCliffsGameLogic : BaseSelFreePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs25kingdomsnojp";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return false;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 25; }
        }
        protected override int ServerResLineCount
        {
            get { return 25; }
        }
        protected override int ROWS
        {
            get
            {
                return 3;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=9,6,3,4,5,4,8,6,9,8,5,3,8,8,7&cfgs=1368&ver=2&reel_set_size=4&scatters=&gmb=0,0,0&sc=0.01,0.02,0.05,0.10,0.25,0.50,1.00,3.00,5.00&defc=0.01&pos=0,0,0,0,0&wilds=2~0,0,0,0,0~1,1,1,1,1;15~200,100,30,3,0~1,1,1,1,1;16~125,60,20,3,0~1,1,1,1,1;17~100,50,15,3,0~1,1,1,1,1&bonuses=0&fsbonus=&n_reel_set=0&paytable=0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;200,100,30,3,0;125,60,20,3,0;100,50,15,3,0;60,30,10,0,0;60,30,10,0,0;60,30,10,0,0;40,15,5,0,0;40,15,5,0,0;30,10,5,0,0;30,10,5,0,0;30,10,5,0,0;30,10,5,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0&rtp=94.00&reel_set0=13,6,5,5,5,14,7,1,11,13,9,14,10,9,14,10,4,4,4,6,1,7,9,5,5,5,8,10,9,11,10,6,8,10,6,1,10,4,4,4,6,8,10,6,3,3,3,11,7,1,8,5,5,5,10,9,14,10,12,8,7,12,1,10,9,5,5,5,11,10,12,11,4,4,4,7,9,1,13,3,3,3,6,11,13,12,14,10,12,14,1,9,11,3,3,3,7,6,8,13,4,4,4,9,11,1,6,5,5,5,8,13,9,11,10,12,11,13,1,14,7,4,4,4,9,11,7,9,8,7,6,14,13,1,11,13,9,8~12,14,5,5,5,13,9,11,13,3,3,3,12,11,7,6,8,13,9,14,10,12,11,5,5,5,7,9,11,10,2,2,2,6,14,10,9,4,4,4,8,13,9,8,3,3,3,10,6,11,10,5,5,5,12,8,7,12,3,3,3,14,10,9,8,5,5,5,13,9,14,7,4,4,4,12,11,13,6,3,3,3,14,10,12,11,2,2,2,10,6,14,13,3,3,3,12,8,13,6,4,4,4,11,10,12,8,5,5,5,13,12,8,13,2,2,2,12,11,10,6,4,4,4,14,7,9,8,2,2,2,7,12,8,13,9,11,13~8,7,4,4,4,12,14,1,6,3,3,3,8,12,6,11,4,4,4,13,1,8,7,5,5,5,12,14,7,12,2,2,2,8,10,1,8,4,4,4,10,9,14,10,3,3,3,12,14,1,9,5,5,5,8,10,6,14,3,3,3,10,1,14,13,5,5,5,6,8,13,6,4,4,4,11,7,1,14,3,3,3,13,9,11,10,2,2,2,12,1,13,9,3,3,3,8,13,12,11,4,4,4,13,12,1,7,5,5,5,6,8,13,12,2,2,2,8,1,9,8,4,4,4,7,12,11,13,2,2,2,6,14,1,12,14,7,9~7,9,5,5,5,14,7,6,8,3,3,3,10,6,8,7,4,4,4,12,8,13,12,5,5,5,8,7,12,8,7,9,8,10,12,8,7,4,4,4,12,14,7,12,3,3,3,11,10,9,11,5,5,5,13,9,11,13,3,3,3,9,14,7,12,5,5,5,11,7,12,8,4,4,4,10,12,14,7,3,3,3,9,14,10,12,2,2,2,14,10,12,8,3,3,3,10,9,14,13,4,4,4,9,11,10,6,5,5,5,11,13,12,8,2,2,2,13,9,11,13,4,4,4,6,8,13,12,2,2,2,11,13,6,11,7,6,14~6,11,5,5,5,7,12,1,13,3,3,3,6,7,13,9,4,4,4,14,1,12,14,5,5,5,7,9,11,10,2,2,2,6,14,1,6,4,4,4,8,13,6,11,3,3,3,10,9,1,13,5,5,5,12,11,10,6,3,3,3,14,1,12,8,5,5,5,10,6,8,7,4,4,4,6,11,1,9,3,3,3,14,7,12,11,2,2,2,7,1,14,13,3,3,3,9,11,13,12,4,4,4,11,7,1,14,5,5,5,10,6,8,13,2,2,2,6,1,13,9,4,4,4,8,10,6,11,2,2,2,10,6,1,10,9,11,13&reel_set2=13,6,5,5,5,8,13,1,11,3,3,3,13,6,11,10,4,4,4,6,1,7,9,5,5,5,11,13,6,11,5,5,5,10,6,1,10,4,4,4,6,8,10,6,3,3,3,11,7,1,8,5,5,5,10,9,14,10,3,3,3,12,1,10,9,5,5,5,11,10,12,11,4,4,4,7,9,1,13,3,3,3,6,11,13,6,14,10,12,14,1,9,11,3,3,3,7,6,8,13,4,4,4,9,11,1,6,5,5,5,8,13,9,11,10,12,11,13,1,14,7,4,4,4,9,11,7,9,8,7,6,14,13,1,11,13,9,8~12,14,17,17,17,7,12,11,13,3,3,3,6,14,13,6,16,16,16,14,10,12,11,17,17,17,13,9,11,10,2,2,2,6,14,10,9,16,16,16,8,13,9,8,3,3,3,10,6,11,10,17,17,17,12,8,7,12,3,3,3,14,10,9,8,17,17,17,13,9,14,7,16,16,16,12,11,13,6,3,3,3,14,10,12,11,2,2,2,10,6,14,13,3,3,3,12,8,13,6,16,16,16,11,10,12,8,17,17,17,13,12,8,13,2,2,2,12,11,10,6,16,16,16,14,7,9,8,2,2,2,7,12,8,13,9,11,13~8,7,17,17,17,9,11,1,6,3,3,3,8,13,9,14,16,16,16,13,1,8,7,17,17,17,12,8,10,9,2,2,2,8,10,1,8,16,16,16,10,9,14,10,3,3,3,12,14,1,9,17,17,17,8,10,6,14,3,3,3,10,1,14,13,17,17,17,6,8,13,8,16,16,16,11,7,1,14,3,3,3,13,9,11,10,2,2,2,12,1,13,9,3,3,3,8,13,12,11,16,16,16,13,12,1,7,17,17,17,6,8,13,12,2,2,2,8,1,9,8,16,16,16,7,12,11,13,2,2,2,6,14,1,12,14,7,9~7,9,17,17,17,14,7,6,8,3,3,3,7,6,11,13,16,16,16,12,8,13,12,17,17,17,11,13,12,8,7,9,8,10,12,8,7,16,16,16,12,14,7,12,3,3,3,11,10,9,11,17,17,17,13,9,11,13,3,3,3,9,14,7,12,17,17,17,11,7,12,8,16,16,16,10,12,14,7,3,3,3,9,14,10,12,2,2,2,14,10,12,8,3,3,3,10,9,14,13,16,16,16,9,11,10,6,17,17,17,11,13,12,8,2,2,2,13,9,11,13,16,16,16,6,8,13,12,2,2,2,11,13,6,11,7,6,14~6,11,17,17,17,10,6,1,13,3,3,3,12,8,7,6,16,16,16,14,1,12,14,17,17,17,7,12,14,10,6,11,10,6,14,1,6,16,16,16,8,13,6,11,3,3,3,10,9,1,13,17,17,17,12,11,10,6,3,3,3,14,1,12,8,17,17,17,10,6,8,7,16,16,16,6,11,1,9,3,3,3,14,7,12,11,9,11,7,7,1,14,13,3,3,3,9,11,13,12,16,16,16,11,7,1,14,17,17,17,10,6,8,13,2,2,2,6,1,13,9,16,16,16,8,10,6,11,2,2,2,10,6,1,10,9,11,13&reel_set1=13,6,5,5,5,8,13,1,11,3,3,3,13,6,11,10,4,4,4,6,1,7,9,5,5,5,11,13,6,11,5,5,5,10,6,1,10,4,4,4,6,8,10,6,3,3,3,11,7,1,8,5,5,5,10,9,14,10,3,3,3,12,1,10,9,5,5,5,11,10,12,11,4,4,4,7,9,1,13,3,3,3,6,11,13,12,14,10,12,14,1,9,11,3,3,3,7,6,8,13,4,4,4,9,11,1,6,5,5,5,8,13,9,11,10,12,11,13,1,14,7,4,4,4,9,11,7,9,8,7,6,14,13,1,11,13,9,8~12,14,17,17,17,7,12,11,13,3,3,3,6,14,13,6,4,4,4,14,10,12,11,17,17,17,13,9,11,10,2,2,2,6,14,10,9,4,4,4,8,13,9,8,3,3,3,10,6,11,10,17,17,17,12,8,7,12,3,3,3,14,10,9,8,17,17,17,13,9,14,7,4,4,4,12,11,13,6,3,3,3,14,10,12,11,10,9,14,10,6,14,13,3,3,3,12,8,13,6,4,4,4,11,10,12,8,17,17,17,13,12,8,13,2,2,2,12,11,10,6,4,4,4,14,7,9,8,2,2,2,7,12,8,13,9,11,13~8,7,17,17,17,9,11,1,6,3,3,3,8,13,9,14,4,4,4,13,1,8,7,17,17,17,12,8,10,9,2,2,2,8,10,1,8,4,4,4,10,9,14,10,3,3,3,12,14,1,9,17,17,17,8,10,6,14,3,3,3,10,1,14,13,17,17,17,6,8,13,6,4,4,4,11,7,1,14,3,3,3,13,9,11,10,9,11,7,12,1,13,9,3,3,3,8,13,12,11,4,4,4,13,12,1,7,17,17,17,6,8,13,12,2,2,2,8,1,9,8,4,4,4,7,12,11,13,2,2,2,6,14,1,12,14,7,9~7,9,17,17,17,14,7,6,8,3,3,3,7,6,11,13,4,4,4,12,8,13,12,17,17,17,11,13,12,8,3,3,3,10,12,8,7,4,4,4,12,14,7,12,3,3,3,11,10,9,11,17,17,17,13,9,11,13,3,3,3,9,14,7,12,17,17,17,11,7,12,8,4,4,4,10,12,14,7,3,3,3,9,14,10,12,2,2,2,14,10,12,8,3,3,3,10,9,14,13,4,4,4,9,11,10,6,17,17,17,11,13,12,8,2,2,2,13,9,11,13,4,4,4,6,8,13,12,2,2,2,11,13,6,11,7,6,14~6,11,17,17,17,10,6,1,13,3,3,3,12,8,7,6,4,4,4,14,1,12,14,17,17,17,7,12,14,10,4,4,4,6,14,1,6,4,4,4,8,13,6,11,3,3,3,10,9,1,13,17,17,17,12,11,10,6,3,3,3,14,1,12,8,17,17,17,10,6,8,7,4,4,4,6,11,1,9,3,3,3,14,7,12,11,2,2,2,7,1,14,13,3,3,3,9,11,13,12,4,4,4,11,7,1,14,17,17,17,10,6,8,13,2,2,2,6,1,13,9,4,4,4,8,10,6,11,2,2,2,10,6,1,10,9,11,13&reel_set3=13,6,5,5,5,8,13,1,11,3,3,3,13,6,11,10,4,4,4,6,1,7,9,5,5,5,11,13,6,11,5,5,5,10,6,1,10,4,4,4,6,8,10,6,3,3,3,11,7,1,8,5,5,5,10,9,14,10,3,3,3,12,1,10,9,5,5,5,11,10,12,11,4,4,4,7,9,1,13,3,3,3,7,11,13,7,4,4,4,7,1,13,11,3,3,3,7,6,8,13,4,4,4,9,11,1,7,5,5,5,8,7,9,5,5,5,11,13,1,14,7,4,4,4,9,13,3,3,3,9,8,4,4,4,14,13,1,11~12,14,17,17,17,7,12,11,13,15,15,15,6,14,13,6,16,16,16,14,10,12,11,17,17,17,13,9,11,10,2,2,2,6,14,10,9,16,16,16,8,13,9,8,15,15,15,10,6,11,10,17,17,17,12,8,7,12,15,15,15,14,10,9,8,17,17,17,13,9,14,7,16,16,16,12,11,13,6,15,15,15,12,10,12,11,2,2,2,10,6,14,13,15,15,15,12,8,13,6,16,16,16,11,10,12,8,17,17,17,13,12,8,2,2,2,13,12,11,10,6,16,16,16,14,9,15,15,15,11,13,2,2,2,7,12,8,13~8,7,17,17,17,9,11,1,6,15,15,15,8,13,9,14,16,16,16,13,1,8,7,17,17,17,12,8,10,9,2,2,2,8,10,1,8,16,16,16,10,9,14,10,15,15,15,12,14,1,9,17,17,17,8,10,6,14,15,15,15,10,1,14,13,17,17,17,6,8,13,8,16,16,16,11,7,1,14,15,15,15,13,9,11,10,2,2,2,12,1,13,9,15,15,15,8,13,12,11,16,16,16,13,12,1,7,17,17,17,6,8,13,2,2,2,12,8,1,9,8,16,16,16,7,14,15,15,15,7,9,2,2,2,6,14,1,12~7,9,17,17,17,14,7,6,8,15,15,15,7,6,11,13,16,16,16,12,8,13,12,17,17,17,11,13,12,8,2,2,2,10,12,8,7,16,16,16,12,14,7,12,15,15,15,11,10,9,11,17,17,17,13,9,11,13,15,15,15,9,14,7,12,17,17,17,11,7,12,8,16,16,16,10,12,14,7,15,15,15,9,14,10,12,2,2,2,14,10,12,8,15,15,15,10,9,14,13,16,16,16,9,11,10,6,17,17,17,11,13,12,2,2,2,8,13,9,11,13,16,16,16,6,7,15,15,15,6,14,2,2,2,11,13,6,11~6,11,17,17,17,10,6,1,13,15,15,15,12,8,7,6,16,16,16,14,1,12,14,17,17,17,7,12,14,10,2,2,2,6,14,1,6,16,16,16,8,13,6,11,15,15,15,10,9,1,13,17,17,17,12,11,10,6,15,15,15,14,1,12,8,17,17,17,10,6,8,7,16,16,16,6,11,1,9,15,15,15,14,7,12,11,14,10,12,7,1,14,13,15,15,15,9,11,13,12,16,16,16,11,7,1,14,17,17,17,10,6,8,2,2,2,13,6,1,13,9,16,16,16,8,9,15,15,15,11,13,2,2,2,10,6,1,10";
            }
        }
        protected override int FreeSpinTypeCount
        {
            get { return 3; }
        }
        protected override int[] PossibleFreeSpinTypes(int freeSpinGroup)
        {
            return new int[] { 200, 201, 202};
        }
        #endregion
        public ThreeKingdomsBattleOfRedCliffsGameLogic()
        {
            _gameID = GAMEID.ThreeKingdomsBattleOfRedCliffs;
            GameName = "ThreeKingdomsBattleOfRedCliffs";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string strInitString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, strInitString);
	    
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
        }
        protected override Dictionary<string, string> mergeSpinToBonus(Dictionary<string, string> spinParams, Dictionary<string, string> bonusParams)
        {
            Dictionary<string, string> resultParams = new Dictionary<string, string>();
            foreach (KeyValuePair<string, string> pair in bonusParams)
                resultParams.Add(pair.Key, pair.Value);

            string[] toCopyParams = new string[] { "sa", "sb", "fs", "fsmul", "fsmax", "fsres", "fswin", "fs_total", "fsmul_total", "fsres_total", "fswin_total", "n_reel_set", "s" };
            for (int i = 0; i < toCopyParams.Length; i++)
            {
                if (!spinParams.ContainsKey(toCopyParams[i]) || resultParams.ContainsKey(toCopyParams[i]))
                    continue;
                resultParams[toCopyParams[i]] = spinParams[toCopyParams[i]];
            }
            return resultParams;
        }
        protected override async Task buildStartFreeSpinData(BasePPSlotStartSpinData startSpinData, StartSpinBuildTypes buildType, double minOdd, double maxOdd)
        {
            if (buildType == StartSpinBuildTypes.IsNaturalRandom)
                await base.buildStartFreeSpinData(startSpinData, StartSpinBuildTypes.IsTotalRandom, minOdd, maxOdd);
            else
                await base.buildStartFreeSpinData(startSpinData, buildType, minOdd, maxOdd);
        }
    }
}
