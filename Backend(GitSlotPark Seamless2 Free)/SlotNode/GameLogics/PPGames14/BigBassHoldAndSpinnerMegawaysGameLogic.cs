using Akka.Actor;
using GITProtocol;
using MongoDB.Bson;
using Newtonsoft.Json.Linq;
using PCGSharp;
using SlotGamesNode.Database;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class BigBassHoldAndSpinnerMegawaysBetInfo : BasePPSlotBetInfo
    {
        public int PurchaseType { get; set; }
        public override void SerializeFrom(BinaryReader reader)
        {
            base.SerializeFrom(reader);
            this.PurchaseType = reader.ReadInt32();
        }
        public override void SerializeTo(BinaryWriter writer)
        {
            base.SerializeTo(writer);
            writer.Write(PurchaseType);
        }
    }
    class BigBassHoldAndSpinnerMegawaysGameLogic : BasePPSlotGame
    {
        protected double[] _multiTotalFreeSpinWinRates;
        protected double[] _multiMinFreeSpinWinRates;

        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vswaysbbhas";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return true;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 20; }
        }
        protected override int ServerResLineCount
        {
            get { return 20; }
        }
        protected override int ROWS
        {
            get
            {
                return 9;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=13,16,2,16,16,13,13,10,5,12,5,13,13,3,3,3,12,13,8,10,11,11,5,5,6,7,3,8,4,5,11,5,10,5,13,4,4,12,7,5,13,8,13,1,9,13,13,8,13,13,13,13,13,9&reel_set25=4,5,8,7,4,6,10,7,3,9,6,4,12,11,5,10,7,6,8,14,11,10,6,11,5,6,9,12,3,6,8,11,7,6,7,5,6,3,5,3,7,5,12,6,12,3,12,4,5,7,10,7,3,7,12,10,7,6,4,5,4,7,8,9,6,4,6,7,11,12,5,6,5,7,3,5,12,7,9,11,7,9,12,8,7,6,4,12,10,6,9,11,8,6,11,4,9,7,6,5,9,6,17~6,10,6,11,6,5,12,5,12,4,7,6,10,4,11,7,3,6,14,7,9,4,5,6,3,6,4,5,6,10,11,4,11,7,8,10,7,3,7,9,12,5,6,8,12,4,11,10,6,7,6,12,4,3,10,5,7,12,8,5,7,6,10,3,5,7,4,12,6,9,6,3,8,6,7,6,4,6,9,5,8,7,9,12,9,10,11,5,3,9,3,9,12,7,11,5,8,7,11,7,17~16,16,16,16,2,16,16,2,2,16,16,16,16,2,16,16,2,16,16,2,2,16,16,16,16,2,16,16,2,16,16,2,16,16,16,16,2,16,2,16,2,16,16,16,16,2,16,16,16,16,2,2,16,16,16,2,16,16,16,16&cfgs=8354&ver=3&mo_s=7;15&mo_v=2,5,10,15,20,25,50,5000;1,2,3,4,5,6,7,8,9,10,11,12,14,16,18,20,22,25,30,50,100,200,300,500,1000,2000&def_sb=1,7,12,10,7,7&reel_set_size=26&def_sa=9,9,9,11,5,7&scatters=1~0,0,0,0,0,0~0,0,0,0,0,0~1,1,1,1,1,1&rt=d&gameInfo={props:{max_rnd_sim:\"1\",max_rnd_hr:\"3731121\",max_rnd_win:\"20000\"}}&wl_i=tbm~20000&reel_set10=9,5,3,10,7,11,7,7,15,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,5,9,3,8,8,3,9,8,11,7,5,9,7,11,11,11,11,11,5,9,7,9,7,7,3,7,9,11,12,9,9,9,9,9,11,8,7,8,11,11,9,7,7,12,8,9,5,5,5,5,5,9,8,15,11,5,9,9,5,8,8,11,8,15,3,3,3,3,3,5,11,7,7,11,9,12,11,5,7,15,8,12,8,8,8,8,8,10,11,7,9,3,11,11,8,7,5,7,7,10,10,10,10,10,5,11,12,10,11,7,7,8,9,11,5,7,9,12,12,12,12,12,10,8,7,7,9,9,7,7,10,9,5,5,9,8,17~4,6,4,7,7,8,6,9,5,3,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,11,5,6,5,9,7,4,7,11,4,7,9,9,9,9,9,8,3,6,11,8,8,7,6,7,11,5,7,6,6,6,6,6,15,3,5,3,6,4,5,8,8,11,3,8,8,8,8,8,7,7,6,8,5,7,6,4,9,7,8,4,4,4,4,4,7,6,7,6,7,9,6,15,7,5,8,9,3,3,3,3,3,6,4,7,11,5,7,6,7,6,8,8,11,11,11,11,11,7,5,7,6,5,4,8,5,5,7,5,5,5,5,5,11,7,7,6,7,6,8,7,8,4,11,7,4,17~5,12,9,11,3,3,9,5,10,5,9,9,9,9,9,15,10,3,11,4,9,12,12,10,6,11,6,3,3,3,3,3,5,11,6,5,3,10,3,12,4,11,6,6,6,6,6,5,3,4,9,9,6,11,9,12,9,10,9,11,10,10,10,10,10,11,4,9,3,9,3,12,3,4,12,10,11,4,4,4,4,4,6,9,10,10,5,15,9,6,6,4,9,9,10,5,5,5,5,5,10,12,5,4,11,5,5,10,12,12,10,11,11,11,11,11,5,6,5,12,11,6,10,11,15,9,4,12,12,12,12,12,10,6,10,6,6,4,4,5,15,6,10,6,4,6,17~6,12,6,8,7,12,6,7,12,6,7,6,8,8,10,7,8,7,4,4,10,7,7,7,7,7,7,7,7,7,7,7,7,6,7,4,4,7,8,12,7,4,8,7,10,12,7,12,6,4,8,7,8,7,10,10,10,10,10,6,10,6,12,8,8,7,8,8,10,6,7,12,7,4,6,7,10,8,7,10,12,6,12,12,12,12,12,7,6,7,10,8,6,6,7,7,10,7,8,7,10,15,10,6,4,12,10,6,4,4,4,4,4,8,6,8,8,12,8,6,7,6,7,7,10,7,6,6,12,7,6,6,7,6,7,8,8,8,8,8,7,10,7,7,12,4,15,4,6,15,10,6,7,7,4,4,10,6,6,7,4,7,6,6,6,6,6,15,7,7,10,10,8,7,7,8,12,4,6,12,6,8,7,4,4,10,6,6,8,4,8,17~4,7,7,11,7,6,3,7,7,7,7,7,7,7,7,7,7,7,7,4,12,12,15,7,4,12,9,7,5,5,5,5,5,8,7,3,9,11,9,6,7,11,8,8,8,8,8,5,8,7,6,5,10,9,9,7,6,10,10,10,10,10,6,7,8,6,5,5,4,8,7,6,6,6,6,6,7,4,7,5,10,15,6,6,5,9,9,9,9,9,11,9,5,4,7,7,6,6,11,11,11,11,11,10,4,12,11,10,10,12,5,9,11,12,12,12,12,12,10,6,4,8,9,7,10,3,12,4,4,4,4,4,8,10,8,5,7,11,11,12,8,3,3,3,3,3,9,8,3,7,12,9,6,5,9,8,7,17~3,7,10,8,5,8,9,8,11,9,12,7,6,7,7,7,7,7,7,7,7,7,7,7,7,9,12,6,5,12,10,3,9,7,5,9,4,3,8,5,5,5,5,5,8,7,6,4,6,8,6,6,5,7,7,4,12,7,8,8,8,8,8,11,9,4,12,3,10,5,8,8,7,7,6,15,5,10,10,10,10,10,7,5,11,7,11,6,8,7,9,7,7,11,11,6,6,6,6,6,9,9,5,5,7,7,4,9,10,6,5,3,5,12,9,9,9,9,9,10,9,10,4,5,10,8,8,7,6,15,7,4,11,11,11,11,11,9,4,4,6,6,5,4,12,7,7,11,6,12,7,12,12,12,12,12,11,11,7,6,7,9,7,12,6,9,10,10,9,6,4,4,4,4,4,8,7,8,5,10,9,15,10,8,7,10,5,7,11,3,3,3,3,3,6,7,7,12,12,7,4,11,15,8,7,12,4,9,9,17&sc=10.00,20.00,30.00,40.00,50.00,100.00,150.00,200.00,250.00,375.00,500.00,750.00,1250.00,2500.00,3750.00,5000.00&defc=50.00&reel_set11=11,12,9,12,10,9,12,11,5,11,10,11,12,9,12,12,5,11,10,9,9,12,10,12,3,3,3,8,12,11,10,12,10,3,10,12,10,11,10,7,7,10,8,7,11,3,11,10,8,12,12,7,12,10,10,10,11,10,5,8,5,12,3,9,5,12,11,12,11,7,9,8,7,3,9,10,12,5,11,11,12,7,8,8,8,12,9,5,7,10,11,5,12,12,11,3,11,8,9,12,8,10,12,10,7,11,8,5,8,10,7,7,7,12,10,8,5,11,9,12,10,8,7,11,3,11,7,12,10,10,7,5,10,11,10,8,11,11,3,11,11,11,10,11,12,3,5,10,11,12,8,8,12,11,12,11,10,7,9,12,11,10,7,12,12,9,12,12,12,10,12,10,7,10,7,10,11,3,5,11,11,9,8,12,12,10,7,9,12,3,12,12,10,12,11,17~10,11,3,11,11,8,7,11,11,3,3,8,12,9,12,12,12,3,11,10,7,10,7,9,12,9,5,10,9,11,5,10,10,10,12,11,12,10,7,12,10,11,8,10,12,7,11,11,7,11,11,11,5,10,11,12,9,7,5,5,12,12,3,11,7,11,7,7,7,10,8,11,5,11,10,7,12,12,7,12,3,8,12,8,12,8,8,8,5,10,12,12,10,8,9,10,11,8,12,11,10,12,5,9,3,3,3,10,12,10,11,12,9,11,8,9,10,12,10,12,10,12,12,10,17~16,16,16,16,2,2,16,16,16,16,2,2,16,16,16,16,2,16,16,2,2,16,16,16,16,2,16,2,16,2,16,16,16,16,2,2,16,2,16,16,16,16,2,16,16,16,16,2,2,16,16,16,16,2,16,16,2,2,16,16,16,16,2,16,16,16,16,2,2,16,16,16,16&reel_set12=5,7,5,5,7,7,7,7,7,6,7,4,7,6,4,5,5,5,5,5,7,7,3,6,6,3,6,6,6,6,6,7,5,6,7,6,6,3,3,3,3,3,5,6,7,6,7,7,4,4,4,4,4,6,3,7,7,4,6,7,7,17~12,12,4,5,9,8,7,6,8,7,8,10,10,4,6,7,7,7,7,7,7,7,7,3,7,6,8,11,6,12,8,5,7,5,10,12,10,9,7,7,9,9,9,9,9,5,7,10,12,4,11,10,4,5,7,8,7,8,10,3,12,6,12,12,12,12,12,8,4,10,7,10,8,8,6,8,10,11,8,5,12,4,7,6,6,6,6,6,10,11,10,11,5,10,6,8,8,7,8,5,11,12,7,4,12,10,10,10,10,10,11,9,5,5,7,12,10,3,9,11,6,10,10,7,8,4,10,8,8,8,8,8,12,9,7,12,5,4,10,10,7,6,7,12,6,5,6,11,10,4,4,4,4,4,12,11,6,12,5,10,4,7,7,8,4,6,9,10,4,10,3,3,3,3,3,8,12,6,12,12,6,10,3,12,12,8,3,12,6,12,8,12,11,11,11,11,11,9,12,5,7,8,11,4,3,5,6,9,6,7,7,5,6,10,5,5,5,5,5,8,6,7,11,12,7,6,6,5,5,6,10,4,10,5,12,12,8,17~9,6,6,11,8,11,6,11,6,6,4,10,7,7,7,7,7,7,12,3,5,5,9,7,11,8,9,12,9,9,10,5,9,9,9,9,9,8,10,7,10,10,9,6,9,7,5,10,8,9,6,3,3,3,3,3,4,5,8,7,10,7,6,3,9,5,12,12,11,6,6,6,6,6,8,3,8,11,10,7,9,6,4,6,10,7,9,10,10,10,10,10,11,9,6,10,11,8,4,9,3,3,12,5,6,12,4,4,4,4,4,11,7,9,10,10,3,7,6,12,7,3,4,7,5,5,5,5,5,12,11,8,7,12,4,8,3,9,7,10,7,7,11,11,11,11,11,4,7,4,6,8,9,8,7,10,10,6,11,9,12,8,8,8,8,8,11,9,12,5,11,7,5,10,4,5,8,12,8,3,12,12,12,12,12,10,7,8,11,8,11,9,5,5,6,12,5,10,3,11,17~4,6,6,6,6,6,5,11,11,7,3,3,3,3,3,8,9,8,7,7,7,7,7,3,10,4,7,5,5,5,5,5,10,6,4,6,4,4,4,4,4,7,3,12,11,11,11,11,11,8,12,11,5,8,8,8,8,8,11,9,9,12,12,12,12,12,6,10,4,10,10,10,10,10,8,5,9,3,9,9,9,9,9,10,3,7,5,12,17~4,10,9,7,7,7,7,7,12,11,6,5,5,6,6,6,6,6,9,12,8,10,5,5,5,5,5,11,3,12,6,4,4,4,4,4,12,5,6,4,3,3,3,3,3,12,7,9,8,5,11,11,11,11,11,4,6,7,3,8,8,8,8,8,10,7,9,10,12,12,12,12,12,3,11,6,11,10,10,10,10,10,4,9,8,7,5,9,9,9,9,9,3,11,8,7,3,10,17~7,3,7,7,7,7,7,6,5,6,3,3,3,3,3,5,7,4,3,5,5,5,5,5,3,5,7,6,6,6,6,6,4,5,7,4,4,4,4,4,6,6,4,3,17&purInit_e=1,1&reel_set13=11,6,12,8,5,6,8,5,10,8,4,5,11,6,5,11,7,10,7,10,6,12,3,8,10,4,8,5,8,3,11,4,11,4,9,11,12,5,12,10,9,3,12,9,12,11,9,12,7,11,8,7,9,11,10,11,12,11,12,8,7,6,11,10,3,7,12,11,4,6,11,10,12,6,4,12,10,12,9,7,9,4,5,17~8,12,3,5,11,6,3,4,8,6,8,11,7,4,7,6,7,5,12,11,12,10,3,12,8,10,11,3,10,12,9,12,5,12,11,9,11,5,11,7,6,4,12,9,5,8,10,7,9,12,11,9,11,10,4,10,11,6,7,10,17~16,16,16,16,2,16,16,16,2,16,16,16,2,2,16,16,16,2,16,16,2,16,16,16,16,2,2,16,16,16,16,2,16,16,16,2,16,16,16,16,2,16,16,16,16,2,16,2,2,16,16,2,16,16,16,16,2,16,16,16,16,2,2,16,2,16,16,2,16,16,2&wilds=2~0,0,0,0,0,0~1,1,1,1,1,1&bonuses=0&reel_set18=11,9,12,8,12,12,7,8,4,6,9,4,6,10,4,7,6,14,12,12,12,12,12,11,8,9,9,8,7,11,9,9,8,10,10,12,8,8,11,4,9,6,11,11,11,11,11,4,4,6,8,9,9,6,8,11,10,10,6,6,11,12,7,11,6,10,10,10,10,10,8,12,9,10,10,7,11,4,10,9,9,12,10,8,11,11,7,11,7,9,9,9,9,9,10,12,12,11,12,10,8,11,9,10,9,7,10,11,10,10,12,11,8,8,8,8,8,12,8,7,6,11,7,12,7,11,8,8,6,8,10,10,11,12,10,12,4,4,4,4,4,10,6,11,12,9,9,10,11,10,8,7,12,7,11,8,11,12,6,6,6,6,6,7,8,12,4,9,9,10,6,10,11,9,12,12,11,8,12,12,9,10,12,17~8,10,4,10,12,11,8,11,10,10,8,6,6,10,12,12,14,10,10,12,11,11,11,11,11,12,6,11,6,10,11,3,5,11,6,11,4,4,6,10,12,10,3,6,8,11,12,12,12,12,12,10,8,12,8,12,10,10,6,8,3,10,10,5,3,10,11,8,12,6,11,10,10,10,10,10,12,5,8,3,11,8,8,3,10,12,3,3,10,11,10,11,10,5,5,6,8,8,8,8,8,11,3,11,11,12,5,6,10,8,12,4,12,6,8,11,5,8,12,5,8,5,5,5,5,5,3,6,8,10,4,12,8,8,5,12,10,12,3,5,10,8,8,11,5,11,6,6,6,6,6,5,10,6,12,11,12,12,11,12,10,6,11,11,8,10,8,8,12,11,12,4,4,4,4,4,10,6,6,12,5,11,8,4,4,11,11,4,12,5,8,12,5,8,11,6,6,3,3,3,3,3,11,5,11,12,10,8,12,12,10,5,11,4,4,10,11,5,4,11,3,12,4,12,17~5,9,7,12,9,6,10,12,4,8,6,7,9,3,12,6,8,8,12,14,7,10,10,10,10,10,9,12,9,6,12,7,12,10,10,6,10,7,9,8,4,12,3,7,9,8,3,12,12,12,12,12,7,7,12,10,7,9,8,9,4,5,8,10,10,4,5,3,7,7,4,6,5,9,9,9,9,9,8,9,4,7,8,10,3,10,3,4,9,5,5,8,12,6,7,5,9,5,8,8,8,8,8,7,12,3,6,5,9,8,12,7,9,5,10,10,4,7,10,7,9,10,7,8,12,6,6,6,6,6,5,10,9,10,6,12,6,9,12,5,12,6,4,7,7,8,5,10,10,3,12,4,4,4,4,4,8,10,9,6,12,7,4,9,6,7,10,10,12,5,12,8,7,10,8,8,10,5,5,5,5,5,3,9,7,9,10,5,6,10,8,9,10,12,8,10,7,7,12,5,12,12,8,3,3,3,3,3,9,8,6,10,12,4,3,12,6,10,6,12,4,3,7,8,7,12,3,10,7,12,5,17~5,5,5,11,7,5,11,9,5,11,3,11,11,5,11,9,11,11,14,11,9,7,7,11,7,11,11,9,11,11,9,11,11,11,11,11,11,9,3,11,7,9,5,9,11,5,11,9,11,9,7,7,11,11,7,11,7,7,11,11,9,7,5,5,7,11,7,5,7,7,7,11,9,7,11,9,3,11,7,9,3,9,11,9,11,11,7,7,9,9,5,9,11,3,9,5,7,5,7,11,9,9,9,9,9,7,5,5,9,11,11,5,7,9,9,5,11,5,7,7,9,9,9,5,9,11,7,11,9,11,11,3,9,3,5,5,3,5,5,5,5,5,11,7,11,5,11,11,11,9,5,5,5,9,7,7,7,9,7,11,9,7,11,9,7,5,11,11,7,9,7,11,3,3,3,3,3,9,11,9,5,11,3,5,5,11,5,3,5,11,9,9,7,9,7,11,11,7,7,9,7,11,5,7,5,7,7,9,7,9,17~11,5,8,11,11,7,9,9,10,12,10,10,3,7,6,11,11,14,11,11,11,9,8,11,11,10,4,7,4,10,11,6,3,12,12,7,10,12,12,12,12,12,9,11,11,12,7,11,10,8,5,10,7,7,8,12,7,7,9,9,9,9,9,11,9,8,12,3,7,6,7,12,5,11,8,7,10,10,7,7,10,10,10,10,10,11,8,4,10,5,8,7,11,11,12,10,9,5,3,7,10,7,7,7,9,5,11,12,9,10,6,10,12,6,7,6,7,7,12,10,8,8,8,8,8,5,11,8,10,12,9,7,6,12,7,9,5,11,5,6,6,4,4,4,4,4,10,9,4,4,9,12,10,4,7,7,12,7,9,7,8,7,7,5,5,5,5,5,11,5,5,9,7,11,5,7,9,10,6,8,7,11,8,8,6,6,6,6,6,4,11,7,8,7,12,12,9,6,10,12,7,12,4,12,7,3,3,3,3,3,5,7,8,9,7,10,12,6,7,7,6,8,7,8,7,7,12,11,17~12,7,12,7,10,10,11,8,6,6,5,7,12,12,12,12,12,14,7,7,10,12,9,3,6,4,7,5,7,8,5,10,11,11,11,11,11,8,7,12,12,10,8,11,9,11,8,11,7,10,7,8,8,8,8,8,4,12,11,8,5,11,11,12,3,7,9,12,7,7,7,9,4,8,5,10,9,3,10,6,7,7,12,11,12,10,10,10,10,10,7,7,3,7,5,7,6,10,4,10,5,9,7,10,9,9,9,9,9,12,7,11,8,9,4,7,8,7,11,9,11,7,4,4,4,4,4,11,10,10,4,6,5,4,10,7,7,10,6,12,7,5,5,5,5,5,11,7,6,9,6,11,8,12,11,11,7,7,12,8,6,6,6,6,6,5,10,11,10,7,12,6,11,12,6,7,8,7,12,3,3,3,3,3,9,9,12,7,7,5,11,10,10,9,9,5,9,7,7,8,17&reel_set19=9,4,7,11,8,10,8,11,6,4,10,9,11,12,9,11,12,14,10,10,10,11,7,8,12,9,12,3,12,8,8,11,5,7,6,11,12,11,10,9,9,9,9,6,11,5,6,4,5,11,12,10,5,3,8,10,10,9,12,6,9,7,8,8,8,11,10,8,12,9,12,8,11,11,4,8,5,9,12,11,10,11,12,7,7,7,5,11,7,11,7,11,10,5,8,4,3,12,10,4,11,12,7,4,11,11,11,7,8,9,8,6,11,6,12,12,3,7,12,11,7,12,11,11,4,7,10,17~11,10,12,4,12,11,10,10,5,8,4,12,7,11,11,7,14,6,12,11,11,11,12,6,10,9,12,3,11,7,7,8,5,10,6,10,8,4,11,5,9,7,7,7,12,6,11,9,11,10,11,3,11,12,3,11,7,12,11,5,9,8,5,8,8,8,7,7,11,8,3,11,4,10,6,12,11,4,12,7,12,6,11,5,9,9,9,9,11,12,9,7,11,11,12,11,8,8,5,4,9,9,8,12,12,8,11,10,10,10,8,12,11,4,10,9,10,10,12,4,9,9,10,7,11,6,12,11,7,8,17~16,16,16,16,2,2,16,2,16,16,16,16,2,2,16,16,16,16,2,16,16,16,16,2,16,2,16,2,16,16,2,16,2,16,16,16,16,2,2,16,2,2,16,2,16,16,16,2,16,16,16,16,2,16,16,16,2&reel_set14=12,11,12,8,12,12,12,12,12,11,12,11,11,10,12,10,10,10,10,10,12,9,9,11,12,12,11,11,11,11,11,10,11,11,12,11,10,11,8,8,8,8,8,12,10,12,12,10,10,9,9,9,9,9,8,11,12,11,8,12,9,11,17~10,5,4,4,9,11,3,5,9,10,12,12,12,12,12,12,12,12,12,12,12,3,11,7,11,7,5,5,7,7,9,9,4,4,4,4,4,11,4,12,3,11,12,11,9,10,10,12,7,7,7,7,7,3,10,6,7,5,5,8,4,4,11,12,12,11,11,11,11,11,6,3,11,10,7,12,4,5,12,5,5,5,5,5,9,3,8,7,5,6,11,9,7,8,3,3,3,3,3,12,5,7,12,9,7,3,6,7,10,12,9,9,9,9,9,5,10,6,3,12,9,5,8,7,12,11,10,8,8,8,8,8,3,12,7,3,6,12,11,3,12,5,6,6,6,6,6,10,7,7,11,10,5,11,10,11,3,5,3,10,10,10,10,10,7,12,11,6,3,3,5,7,7,12,10,5,12,17~11,8,12,11,7,9,3,6,6,11,11,12,6,12,12,12,12,12,12,12,12,10,9,6,8,5,10,7,6,5,11,8,11,3,12,4,4,4,4,4,12,7,11,6,12,6,3,11,6,7,3,7,4,10,8,8,8,8,8,11,4,6,9,7,6,8,10,10,11,5,5,8,5,12,11,11,11,11,11,5,12,9,3,9,4,12,12,3,6,3,11,5,4,5,5,5,5,5,6,5,10,6,7,12,4,10,6,12,4,3,4,12,5,9,9,9,9,9,3,3,12,5,12,11,4,10,11,10,4,5,11,7,10,10,10,10,10,7,12,11,6,12,10,4,11,12,8,10,6,4,5,8,6,6,6,6,6,8,12,5,8,5,9,3,5,4,9,7,4,3,3,3,3,3,4,4,5,8,5,12,12,5,10,4,7,4,12,10,6,7,7,7,7,7,3,7,7,3,9,5,12,3,4,9,12,9,4,5,3,11,17~9,11,11,11,11,11,12,8,8,8,8,8,11,10,12,12,12,12,12,8,10,9,10,10,10,10,10,9,12,9,9,9,9,9,8,11,10,12,17~7,7,12,12,12,12,12,9,3,4,4,11,11,11,11,11,6,3,10,10,10,10,10,12,3,12,9,9,9,9,9,6,5,11,7,8,8,8,8,8,10,8,6,6,6,6,6,8,5,11,3,3,3,3,3,4,5,10,9,7,7,7,7,7,5,12,12,5,5,5,5,5,10,6,8,4,4,4,4,4,11,11,3,7,9,17~12,10,10,12,12,12,12,12,11,9,8,12,8,8,8,8,8,12,9,11,10,10,10,10,10,9,10,11,11,11,11,11,8,11,8,9,9,9,9,9,12,9,12,11,8,10,17&paytable=0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;1000,500,200,40,20,0;100,50,40,20,0,0;50,20,10,6,0,0;40,16,10,6,0,0;30,12,8,4,0,0;30,12,8,4,0,0;30,12,8,4,0,0;20,8,4,2,0,0;20,8,4,2,0,0;20,8,4,2,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0&reel_set15=12,11,9,8,12,6,5,4,7,10,11,7,5,6,11,8,9,10,6,11,5,3,11,9,11,10,6,5,9,12,7,10,3,4,6,3,8,10,7,6,4,12,7,6,7,6,5,7,12,7,8,5,9,6,7,6,7,8,4,6,5,7,4,9,3,6,3,5,10,6,7,12,4,17~7,6,11,3,12,9,11,4,3,6,8,6,7,11,5,3,5,7,6,4,5,12,4,6,10,5,12,8,12,8,10,12,7,5,3,7,4,5,7,6,12,9,11,6,7,6,11,9,4,6,7,10,5,6,7,5,3,12,6,8,6,10,6,7,6,3,8,9,3,6,12,9,11,7,4,10,9,7,10,5,17~16,2,16,16,16,16,2,16,16,16,16,2,2,16,16,16,16,2,2,16,2,16,16,16,2,16,16,16,2,2,16,2,16,16,16,16,2,16,2,16,16,16,16,2,2,16,16,2,16,2,2,16,16&reel_set16=10,11,11,12,3,12,9,5,11,5,12,12,12,14,12,12,7,8,12,10,6,11,7,6,12,7,7,9,11,11,11,11,11,10,12,3,6,10,12,4,12,10,6,10,10,10,10,10,6,11,7,11,4,9,11,8,11,7,8,10,9,9,9,9,9,12,10,12,12,3,6,7,9,12,7,4,8,8,8,8,8,11,10,7,6,8,10,11,3,5,5,10,10,4,4,4,4,4,11,8,11,5,9,9,10,5,12,5,4,5,5,5,5,5,10,9,8,8,5,12,10,10,8,11,10,7,6,6,6,6,6,12,10,4,8,10,9,12,7,9,8,9,3,3,3,3,3,6,11,4,9,3,5,11,12,6,8,9,8,7,7,7,7,7,12,8,3,9,6,5,11,6,8,5,9,11,12,17~10,11,9,12,6,3,11,7,10,4,6,10,11,11,14,11,11,11,8,10,11,8,12,7,7,9,10,7,11,6,10,5,12,12,12,12,12,10,11,4,10,12,11,7,4,9,5,7,11,7,10,10,10,10,10,5,11,7,7,10,11,7,12,6,12,8,11,12,8,8,8,8,8,11,11,9,10,6,12,9,7,5,8,9,10,9,7,7,7,7,7,11,6,3,12,3,8,3,8,7,7,10,11,8,5,5,5,5,5,6,8,11,12,8,7,4,10,4,5,11,5,3,8,6,6,6,6,6,9,7,9,12,12,5,8,12,9,5,7,3,9,7,4,4,4,4,4,8,10,11,7,11,10,8,12,7,12,7,12,12,10,9,9,9,9,9,7,6,4,10,9,6,8,9,7,12,12,5,3,8,3,3,3,3,3,9,7,6,7,7,5,12,5,9,10,7,9,11,4,6,17~8,7,9,5,10,6,7,5,5,6,9,6,7,7,7,7,7,8,14,11,7,10,7,3,11,10,8,9,10,5,11,10,10,10,10,10,5,6,7,12,7,11,8,7,10,6,7,10,7,11,11,11,11,11,8,5,11,9,10,7,7,10,3,9,12,11,12,12,12,12,12,4,12,12,11,12,5,7,8,7,12,5,12,7,9,9,9,9,9,4,7,10,8,6,9,7,12,9,11,12,8,7,8,8,8,8,8,3,11,10,5,12,11,10,9,4,9,7,10,5,6,6,6,6,6,4,3,7,12,8,3,10,8,11,6,12,9,4,4,4,4,4,8,7,9,9,8,11,6,11,10,6,11,7,7,5,5,5,5,5,11,7,12,6,9,12,7,8,7,11,10,7,12,3,3,3,3,3,10,9,3,11,11,7,5,6,10,12,12,8,4,10,17~7,6,12,10,11,12,11,8,11,11,11,11,11,14,10,11,10,11,11,9,6,7,8,4,10,10,10,10,10,8,12,3,10,4,5,5,4,12,12,12,12,12,6,11,12,9,4,5,7,10,7,10,8,8,8,8,8,9,11,5,9,11,9,7,12,7,6,7,7,7,7,8,10,4,12,7,12,9,7,8,9,9,9,9,9,7,3,6,9,7,8,6,12,11,3,4,4,4,4,4,7,9,12,6,7,9,4,6,10,5,6,6,6,6,6,12,10,10,11,10,7,9,7,7,5,5,5,5,5,8,12,7,8,7,8,12,11,12,3,3,3,3,3,11,7,5,9,8,7,5,11,7,8,10,17~4,11,9,12,10,10,9,6,8,11,11,11,11,11,14,6,7,8,8,7,11,3,12,8,8,12,12,12,12,12,7,7,4,5,10,10,12,4,12,9,9,9,9,9,6,7,12,5,7,8,7,7,12,11,10,10,10,10,10,8,10,11,7,9,5,8,8,12,6,7,7,7,7,7,9,12,10,7,10,9,7,7,9,5,8,8,8,8,8,10,12,10,10,11,10,7,8,4,11,4,4,4,4,4,12,12,11,7,9,11,10,7,3,7,5,5,5,5,5,8,6,7,6,9,11,8,10,5,3,6,6,6,6,6,11,5,10,11,4,7,5,12,9,9,3,3,3,3,3,4,7,12,5,11,12,6,6,9,11,7,11,17~8,11,5,7,7,5,7,7,9,7,12,9,7,11,10,7,14,12,12,12,12,12,7,5,11,6,5,11,6,6,7,10,9,12,8,11,7,11,12,11,11,11,11,11,10,8,8,7,9,5,9,8,3,11,7,12,11,3,7,7,11,8,8,8,8,8,11,10,10,8,9,4,8,11,10,11,6,7,8,5,10,7,8,10,10,10,10,10,11,10,11,10,4,9,7,11,7,11,9,6,11,7,8,5,10,7,7,7,7,4,7,7,8,10,10,12,4,6,12,9,6,7,7,5,10,9,9,9,9,9,7,10,11,10,12,12,7,12,5,9,8,9,12,9,10,12,5,4,4,4,4,4,12,6,4,10,8,7,7,12,12,9,12,6,12,3,8,8,7,10,5,5,5,5,5,10,6,11,6,12,8,9,3,12,4,11,11,8,7,8,6,4,6,6,6,6,6,11,9,11,9,11,12,10,10,4,5,6,9,6,12,9,10,7,3,3,3,3,3,8,7,5,7,12,4,9,7,10,7,12,10,5,12,9,7,12,4,5,17&reel_set17=12,11,7,4,11,10,12,6,11,4,4,12,10,10,14,10,11,10,4,7,10,8,7,10,9,11,9,11,9,9,9,9,11,8,8,12,5,11,11,6,9,10,12,6,7,11,8,8,8,3,8,12,11,8,5,7,7,12,5,5,12,5,7,7,7,9,11,12,7,10,9,12,7,12,4,9,3,11,11,11,12,11,11,6,10,11,4,8,10,12,11,3,8,8,6,17~11,10,12,11,10,9,9,11,9,10,12,4,12,12,14,11,11,11,8,11,9,11,12,12,8,8,11,7,12,12,10,12,6,5,7,7,7,12,6,8,7,11,11,4,6,5,10,5,6,9,8,8,8,10,4,11,11,8,11,4,5,12,8,7,7,11,12,7,9,9,9,9,6,12,4,11,12,4,9,8,11,10,5,11,11,12,7,8,10,10,10,11,10,8,11,4,6,9,5,3,7,9,3,11,11,3,10,10,17~16,16,16,16,2,2,16,16,16,2,16,16,16,16,2,16,16,16,16,2,16,16,16,16,2,2,16,16,16,16,2,16,16,16,2,2,16,16,16,16,2,2,16,16,2,16,16,16,16,2,16,16,16,16,2,2&total_bet_max=12,000,000.00&reel_set21=10,11,11,12,11,8,11,6,11,12,12,9,9,7,7,12,7,14,12,11,12,7,12,10,10,10,8,4,6,11,4,8,9,5,10,11,3,6,11,11,10,5,10,11,8,9,12,5,6,11,9,9,9,9,6,7,8,6,10,9,4,8,11,11,7,12,3,11,3,9,4,10,7,5,4,10,8,8,8,11,4,11,3,12,12,5,10,7,3,4,11,11,12,12,9,7,9,8,8,9,12,11,5,7,7,7,6,9,11,8,11,12,7,12,10,10,7,11,11,8,8,12,12,9,10,12,4,12,11,11,11,5,10,11,9,12,4,11,8,6,10,5,12,4,6,12,10,11,11,5,10,8,7,11,8,7,17~11,8,11,12,4,10,11,11,12,11,11,6,12,11,11,11,14,4,12,8,11,12,11,3,12,11,10,3,7,8,7,7,7,4,8,6,8,11,7,10,12,11,5,4,6,9,10,12,8,8,8,11,12,8,10,12,9,11,3,8,11,5,7,10,12,9,9,9,9,12,6,5,7,12,5,9,11,10,11,7,4,10,12,9,10,10,10,5,10,6,9,11,5,11,7,9,8,4,11,6,9,8,4,17~16,16,16,2,16,16,16,16,2,16,16,2,16,16,16,16,2,16,2,2,16,16,16,16,2,16,16,16,16,2,16,16,16,2,16,2,2,16,16,16,16,2,2,16,2,2,16,16,16,16&reel_set22=6,6,7,6,7,6,7,7,7,7,7,6,7,7,6,7,3,6,7,3,5,5,5,14,5,5,6,6,5,6,4,7,6,5,7,6,6,6,6,6,7,5,6,5,7,6,4,7,3,3,3,3,3,5,6,7,7,6,7,4,5,5,4,4,4,4,4,3,7,7,6,5,7,3,7,7,4,17~8,12,12,10,11,11,12,8,5,4,10,7,7,7,7,7,7,7,7,14,6,5,10,5,10,5,9,7,4,4,7,7,6,9,9,9,9,9,5,10,7,10,6,11,8,5,6,5,10,5,4,12,12,12,12,12,9,5,11,12,9,6,7,10,12,6,12,7,8,6,6,6,6,6,11,6,5,8,5,12,10,3,10,10,6,12,8,10,10,10,10,10,8,10,8,12,8,12,7,8,4,11,7,11,12,8,8,8,8,8,12,7,4,12,11,10,6,7,7,10,12,6,6,4,4,4,4,4,7,12,6,12,10,12,8,8,3,11,10,4,9,3,3,3,3,3,9,3,10,7,8,5,4,4,5,7,7,6,3,11,11,11,11,11,10,4,5,6,12,6,3,8,6,10,7,6,6,5,5,5,5,5,9,7,8,12,10,10,8,4,12,8,5,7,12,8,17~5,9,9,4,10,9,10,3,7,9,12,7,7,7,7,7,7,6,12,5,14,11,7,4,10,9,6,11,11,12,10,9,9,9,9,9,4,9,10,6,9,3,5,5,11,8,6,10,10,3,3,3,3,3,6,9,6,5,7,8,5,7,9,6,9,11,10,6,6,6,6,6,8,8,5,7,11,10,12,4,6,9,4,10,3,10,10,10,10,10,7,3,8,12,7,3,5,11,7,8,6,6,4,4,4,4,4,12,8,4,10,6,4,8,4,7,7,3,11,7,5,5,5,5,5,11,7,10,9,10,10,9,7,11,12,5,9,10,11,11,11,11,11,6,8,3,7,10,9,3,11,4,7,11,12,6,8,8,8,8,8,6,12,9,11,12,9,5,10,8,3,8,9,12,12,12,12,12,7,8,8,7,11,10,5,11,8,7,8,12,5,6,17~5,5,9,6,6,6,6,6,4,4,7,10,5,3,3,3,3,3,9,7,6,14,7,7,7,7,7,8,7,7,10,5,5,5,5,5,8,3,12,9,4,4,4,4,4,10,5,9,11,4,11,11,11,11,11,4,6,3,9,8,8,8,8,8,4,7,6,11,6,12,12,12,12,12,3,10,3,8,10,10,10,10,10,11,12,12,10,8,9,9,9,9,9,8,11,11,12,6,12,17~9,10,8,7,7,7,7,7,12,5,4,8,12,6,6,6,6,6,5,11,14,9,11,5,5,5,5,5,10,7,3,7,9,4,4,4,4,4,3,11,4,10,3,3,3,3,3,4,12,6,4,5,11,11,11,11,11,5,8,3,9,8,8,8,8,8,6,7,11,8,8,12,12,12,12,12,10,10,12,11,10,10,10,10,10,7,4,9,6,7,9,9,9,9,9,3,6,12,5,3,6,17~5,7,7,7,7,7,5,3,7,3,3,3,3,3,6,4,5,5,5,14,5,5,6,3,7,6,6,6,6,6,3,6,4,4,4,4,4,7,4,4,5,6,17&reel_set0=7,7,11,7,7,5,8,5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,8,10,9,9,8,8,9,9,3,11,11,11,11,11,6,9,4,7,5,8,7,7,9,11,3,9,9,9,9,9,5,9,5,5,7,7,8,7,9,7,4,9,5,5,5,5,5,9,5,6,11,6,6,7,1,7,4,4,3,3,3,3,3,7,8,6,1,6,11,5,7,11,1,7,4,4,4,4,4,9,3,8,4,9,6,8,8,6,9,11,6,6,6,6,6,9,6,7,11,8,11,7,11,11,5,7,8,8,8,8,8,7,3,4,11,11,6,4,9,7,12,4,10,10,10,10,10,5,6,10,11,8,12,9,6,10,7,12,12,12,12,12,7,6,11,11,5,6,9,12,4,7,12,8,5,17~5,8,6,10,4,5,6,7,12,7,6,7,10,6,7,12,9,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,12,12,7,11,8,4,12,5,10,6,7,12,8,10,10,4,4,9,9,9,9,9,12,8,5,11,10,8,4,7,5,9,12,1,7,8,1,11,7,10,12,12,12,12,12,10,3,10,7,12,7,7,4,10,12,7,1,8,5,4,6,10,12,10,6,6,6,6,6,12,3,8,6,7,4,8,10,3,5,10,6,5,12,6,6,8,7,10,10,10,10,10,12,6,7,6,5,10,7,6,10,3,6,7,8,4,5,8,12,8,8,8,8,8,12,7,3,5,7,3,4,9,9,8,7,4,10,10,6,7,7,8,4,4,4,4,4,11,7,8,11,7,9,5,11,7,12,8,10,11,12,11,7,6,7,6,3,3,3,3,3,12,6,12,7,12,5,6,5,12,6,4,11,7,5,3,1,5,5,11,11,11,11,11,7,6,9,5,7,7,10,7,5,10,7,5,6,12,6,10,10,4,5,5,5,5,5,8,7,12,4,8,11,6,11,7,1,12,7,10,4,8,7,5,8,6,8,17~12,8,7,1,9,4,3,9,7,7,7,7,7,7,7,7,7,7,7,7,10,10,7,11,6,7,5,9,6,9,9,9,9,9,7,3,3,5,10,10,8,8,7,3,3,3,3,3,7,5,11,8,7,10,6,6,1,5,6,6,6,6,6,8,7,8,6,9,1,4,6,9,3,10,10,10,10,10,7,5,6,5,4,4,3,10,4,4,4,4,4,8,11,6,9,12,6,9,10,6,7,5,5,5,5,5,7,8,10,7,12,9,12,10,4,6,11,11,11,11,11,7,9,11,9,5,11,7,11,5,8,8,8,8,8,7,8,7,3,5,4,12,3,4,12,12,12,12,12,11,10,12,7,9,11,10,12,3,11,7,17~7,11,7,6,6,9,7,5,3,7,7,7,7,7,7,7,7,7,7,7,7,8,12,8,7,5,11,7,7,10,3,11,11,11,11,11,6,10,12,4,10,4,9,8,5,5,8,5,5,5,5,5,4,3,3,6,5,7,9,7,9,12,9,10,10,10,10,10,5,10,10,6,8,7,11,9,4,5,4,9,9,9,9,9,6,11,9,7,11,6,5,8,12,8,7,12,12,12,12,12,8,6,6,11,4,7,5,7,7,6,7,4,4,4,4,4,6,12,11,6,4,10,5,8,10,12,6,8,8,8,8,8,7,1,11,10,9,10,7,5,9,3,5,6,6,6,6,6,8,7,6,11,10,8,4,11,9,9,8,3,3,3,3,3,1,6,9,4,9,9,6,7,4,7,12,6,17~12,6,5,7,8,12,6,4,5,7,6,7,8,9,8,7,7,7,7,7,7,7,7,7,7,7,7,10,4,4,12,6,12,4,7,7,6,10,8,5,7,10,11,5,5,5,5,5,8,11,5,10,5,6,7,7,8,7,8,7,12,4,4,9,8,8,8,8,8,3,6,5,12,1,6,12,11,6,9,10,5,6,10,9,11,10,10,10,10,10,12,7,6,6,11,9,11,7,10,9,10,7,6,5,6,4,6,6,6,6,6,8,11,7,4,11,9,8,9,8,7,3,7,9,11,5,8,9,9,9,9,9,12,4,12,6,7,6,5,8,5,7,7,4,12,11,9,7,11,11,11,11,11,10,9,10,7,8,9,7,7,11,9,7,9,5,7,11,4,12,12,12,12,12,7,7,10,11,9,5,9,5,8,5,4,4,8,8,1,6,4,4,4,4,4,3,10,5,6,12,12,7,10,7,3,3,7,9,7,6,10,3,3,3,3,3,9,7,9,7,7,6,9,5,7,6,3,9,11,4,12,8,7,17~9,7,6,6,7,11,7,12,12,9,10,7,7,7,7,7,7,7,7,7,7,7,7,11,9,5,4,7,3,5,7,11,7,5,6,5,5,5,5,5,6,9,11,7,4,8,12,4,12,11,11,8,8,8,8,8,5,9,3,7,3,6,7,7,6,7,6,7,10,10,10,10,10,9,10,7,9,12,8,8,9,6,5,7,1,6,6,6,6,6,8,9,6,6,8,4,3,7,5,12,9,4,9,9,9,9,9,4,6,7,12,7,8,7,11,5,1,7,9,11,11,11,11,11,10,6,7,7,11,4,11,5,10,11,4,10,12,12,12,12,12,7,7,8,8,12,6,8,6,8,10,8,6,4,4,4,4,4,6,12,5,7,7,9,12,10,7,10,4,9,3,3,3,3,3,9,10,10,5,7,5,9,8,4,5,5,9,3,17&reel_set23=5,12,11,3,5,11,7,8,10,12,7,9,11,12,9,11,8,12,14,8,11,10,12,11,12,10,4,11,4,12,5,7,12,11,5,7,8,6,12,10,12,4,12,6,4,10,11,6,3,7,5,3,11,12,3,10,9,7,9,12,6,8,11,10,5,11,10,4,3,10,9,6,7,8,11,9,4,9,11,6,17~12,8,11,6,10,11,6,10,5,8,12,11,3,7,10,4,10,14,12,9,4,11,7,10,9,12,11,7,3,11,12,5,9,5,9,3,4,11,9,12,10,9,11,12,10,8,7,6,8,3,6,12,6,8,6,7,11,5,6,11,5,4,11,12,11,12,8,10,4,8,3,11,4,7,9,6,10,3,11,7,12,11,5,11,7,8,7,12,11,12,10,12,11,9,8,12,9,4,12,10,4,5,17~16,16,16,16,2,16,16,16,16,2,2,16,16,16,2,2,16,16,16,16,2,16,16,2,16,16,16,16,2,2,16,16,16,16,2,16,16,16,16,2,16,16,2,2,16,16,16,16,2,16,16,16,16,2,2,16,16,16,16,2,2,16,16,16&reel_set24=12,8,11,9,11,9,12,12,12,12,12,11,11,9,12,12,14,8,12,11,10,10,10,10,10,12,11,12,12,9,11,12,11,11,11,11,11,8,11,8,12,11,12,10,8,8,8,8,8,12,10,10,12,10,11,11,12,9,9,9,9,9,10,11,12,12,11,12,12,10,10,11,17~9,7,10,9,3,10,12,5,12,12,12,12,12,12,12,12,14,12,12,12,10,4,7,5,10,3,4,10,11,5,4,4,4,4,4,12,7,9,12,11,12,7,11,3,7,7,7,7,7,11,5,3,6,5,10,5,6,12,11,11,11,11,11,3,9,6,9,5,7,11,6,11,7,5,5,5,5,5,12,12,11,5,12,6,10,12,5,10,3,3,3,3,3,10,11,8,5,3,8,3,3,5,12,9,9,9,9,9,11,11,10,12,9,12,12,4,3,8,8,8,8,8,7,7,8,3,4,6,11,11,5,6,6,6,6,6,9,7,6,12,3,7,7,11,3,10,10,10,10,10,7,12,7,12,7,5,5,3,5,9,4,17~3,3,10,7,10,6,4,4,9,10,8,3,11,5,12,12,12,14,12,12,12,12,12,11,8,8,10,11,5,9,9,3,10,4,4,7,3,5,5,4,4,4,4,4,8,11,12,6,10,11,11,12,3,5,9,3,12,8,5,5,8,8,8,8,8,12,9,12,5,5,7,3,9,5,9,10,3,8,12,12,7,11,11,11,11,11,12,4,5,12,3,6,5,7,10,12,6,6,12,5,6,7,5,5,5,5,5,12,4,10,12,12,6,4,10,6,10,4,7,8,4,6,9,9,9,9,9,6,7,11,11,4,12,9,4,4,12,7,6,7,12,3,8,10,10,10,10,10,3,6,8,3,11,6,10,11,3,12,12,11,4,4,9,3,6,6,6,6,6,11,6,11,4,6,5,6,12,10,4,7,4,8,11,3,5,3,3,3,3,3,12,5,3,9,5,5,12,4,11,12,4,12,4,4,5,6,7,7,7,7,7,4,11,5,6,12,7,10,8,7,10,11,7,5,11,5,3,7,17~12,10,11,11,11,11,11,9,10,9,11,8,8,8,8,8,9,14,12,8,12,12,12,12,12,11,10,10,8,10,10,10,10,10,12,8,8,12,9,9,9,9,9,10,9,11,12,9,11,17~10,12,12,12,12,12,10,9,11,11,11,11,11,8,9,14,12,11,10,10,10,10,10,12,8,11,9,9,9,9,9,8,9,8,8,8,8,8,12,10,11,10,17~11,12,12,12,12,12,10,10,8,8,8,8,8,10,10,10,14,10,10,12,10,9,11,11,11,11,11,12,9,9,9,9,9,11,11,8,9,17&reel_set2=7,9,6,7,9,9,11,6,9,4,3,11,7,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,12,7,12,7,8,7,6,6,9,6,10,6,4,8,11,11,11,11,11,6,6,8,9,7,7,8,11,6,9,7,6,7,3,9,8,9,9,9,9,9,12,11,3,5,7,7,9,4,11,6,11,9,4,5,10,7,5,5,5,5,5,11,8,4,8,9,5,7,5,11,11,4,6,6,11,7,7,3,3,3,3,3,15,7,7,15,7,6,9,7,9,7,8,11,10,8,5,7,4,4,4,4,4,9,12,6,6,11,5,11,9,7,11,10,9,5,11,5,7,6,6,6,6,6,7,9,6,5,5,11,8,8,4,8,4,7,6,9,5,6,8,8,8,8,8,7,5,11,7,11,7,8,9,7,12,11,10,7,8,4,9,10,10,10,10,10,5,15,9,8,11,4,9,10,7,3,6,3,9,7,4,11,12,12,12,12,12,8,5,7,7,5,12,8,8,5,9,11,3,8,5,9,15,4,17~6,7,7,12,4,4,6,8,7,8,5,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,12,11,8,12,12,9,5,8,11,6,12,7,9,9,9,9,9,12,7,9,10,7,6,8,7,15,8,7,10,6,12,12,12,12,12,6,8,12,11,12,5,8,5,3,7,5,10,7,6,6,6,6,6,8,7,7,6,8,8,3,11,5,7,10,7,7,10,10,10,10,10,4,4,10,6,7,6,3,4,12,6,12,10,4,8,8,8,8,8,11,10,7,7,12,10,6,10,12,11,4,11,15,4,4,4,4,4,5,4,8,8,5,7,12,9,12,10,7,3,7,3,3,3,3,3,7,4,7,12,5,10,10,12,6,5,6,5,8,11,11,11,11,11,10,4,6,7,12,5,15,6,8,3,7,7,12,5,5,5,5,5,6,6,10,10,5,10,10,6,7,9,10,4,11,5,5,17~12,6,15,8,4,9,11,6,7,7,7,7,7,7,7,7,7,7,7,7,5,3,7,5,11,7,10,10,3,10,9,9,9,9,9,5,9,7,6,8,10,6,6,9,3,3,3,3,3,8,4,3,12,4,7,11,7,6,5,6,6,6,6,6,7,10,9,9,10,8,15,7,11,10,10,10,10,10,8,3,5,5,7,4,6,7,8,12,4,4,4,4,4,9,9,12,9,11,7,9,15,11,5,5,5,5,5,10,10,11,3,8,4,6,9,6,3,11,11,11,11,11,6,4,4,5,12,7,7,8,8,8,8,8,5,9,5,4,12,6,7,11,3,7,12,12,12,12,12,3,7,12,11,10,7,7,12,10,10,7,17~12,3,9,8,6,12,7,7,11,9,9,6,5,4,6,7,7,7,7,7,7,7,7,7,7,7,7,9,6,15,10,4,4,9,12,5,10,7,10,6,5,6,6,11,11,11,11,11,8,6,5,12,8,5,7,9,15,7,8,12,9,7,9,5,9,5,5,5,5,5,9,12,7,9,6,8,10,3,10,9,3,5,7,3,11,11,8,10,10,10,10,10,12,6,3,8,6,10,7,4,7,7,5,8,6,9,7,8,9,9,9,9,9,7,6,9,8,9,5,8,10,6,9,10,7,8,7,11,7,12,12,12,12,12,11,5,7,7,5,6,4,8,11,4,7,7,5,8,7,11,9,4,4,4,4,4,7,6,9,8,4,5,10,11,12,7,5,8,8,4,7,6,7,8,8,8,8,8,11,10,4,6,5,3,10,10,6,3,10,7,11,4,5,6,4,6,6,6,6,6,8,6,7,6,5,12,5,11,9,4,8,12,11,6,7,6,4,3,3,3,3,3,4,12,10,7,6,7,10,11,9,3,11,7,11,6,4,5,7,9,17~6,6,7,8,9,9,12,5,7,7,7,7,7,7,7,7,7,7,7,7,9,5,6,7,5,7,11,9,8,5,5,5,5,5,6,7,6,9,6,7,5,12,9,8,8,8,8,8,4,12,5,9,7,4,12,10,8,6,10,10,10,10,10,11,9,8,7,6,7,6,10,10,6,6,6,6,6,12,4,11,3,11,7,7,12,5,9,9,9,9,9,7,8,7,12,10,5,7,5,10,11,11,11,11,11,9,9,11,8,8,10,4,4,7,3,12,12,12,12,12,3,8,4,4,6,7,9,10,3,4,4,4,4,4,11,12,6,11,4,7,9,15,8,7,3,3,3,3,3,10,7,15,7,6,11,7,8,9,5,7,17~7,4,7,4,8,6,9,7,7,7,7,7,7,7,7,7,7,7,7,8,6,11,11,10,8,8,12,11,7,12,5,5,5,5,5,10,4,7,7,5,9,7,6,9,9,7,8,8,8,8,8,9,10,7,6,11,3,12,9,8,15,7,10,10,10,10,10,6,10,7,11,7,5,7,6,9,12,6,6,6,6,6,5,9,5,5,12,3,11,8,6,10,9,9,9,9,9,10,5,12,7,8,7,3,7,9,7,11,11,11,11,11,15,6,5,4,5,7,4,5,8,8,5,12,12,12,12,12,7,7,12,4,6,4,9,6,9,11,10,4,4,4,4,4,7,7,4,9,12,7,6,8,10,6,5,3,3,3,3,3,4,9,12,5,11,8,9,8,7,6,6,17&reel_set1=10,12,11,10,6,6,8,6,4,8,9,11,12,7,4,12,9,12,6,10,11,3,4,7,3,3,3,12,12,11,11,12,8,8,11,10,11,12,10,11,9,3,9,12,3,5,11,11,10,11,12,9,10,10,10,11,3,4,7,7,11,6,11,7,4,12,11,9,6,5,11,11,8,12,9,12,12,10,5,6,3,8,8,8,12,10,6,3,10,9,11,12,12,8,4,10,4,7,12,10,4,12,11,8,7,5,7,10,5,7,7,7,11,10,11,8,10,5,7,4,8,7,9,5,9,6,7,7,12,5,5,8,12,11,11,6,7,11,11,11,3,8,4,12,11,7,11,11,9,12,10,12,5,10,9,11,10,11,9,6,12,4,11,8,8,3,5,17~12,11,12,5,4,9,12,8,11,9,7,9,10,12,10,6,11,11,5,11,9,11,11,11,12,5,12,8,5,11,10,11,6,12,10,9,4,11,6,7,6,12,4,11,11,3,7,7,7,12,6,7,10,12,4,7,7,4,10,3,4,5,10,12,12,6,11,8,5,5,8,8,8,12,10,7,11,12,11,12,11,12,11,6,9,10,8,3,11,4,11,10,10,12,7,10,10,10,7,12,11,3,12,9,11,11,9,10,7,5,9,5,10,11,6,4,8,8,3,3,3,11,11,6,7,8,8,4,3,12,10,11,8,12,10,9,8,7,5,8,4,11,6,9,17~16,16,16,16,2,16,16,16,16,2,16,2,16,16,16,16,2,16,16,16,16,2,16,16,16,16,2,16,2,16,2,16,2,2,16,16,2,16,16,16,16,2,16,16,16,16,2,2,16,16,16,16,2,16,16,16,16,2,16,16,16,2,16,2,2,16,16,2,16,16,16,16,2,16,2,16,16,16,2,16,2,16,16,16,2,16&reel_set4=12,11,12,6,6,7,11,12,11,6,11,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,10,7,10,10,11,6,7,9,8,7,12,11,7,11,11,11,11,11,1,11,7,8,6,7,11,9,7,8,11,7,7,9,9,9,9,9,7,8,8,9,7,4,7,7,9,8,8,4,4,4,4,4,7,9,6,11,7,9,6,10,1,11,7,9,6,6,6,6,6,10,11,9,6,8,9,6,1,4,11,4,4,11,8,8,8,8,8,11,9,9,4,9,7,6,8,7,11,7,6,10,10,10,10,10,6,4,8,7,8,9,7,7,9,11,9,7,8,12,12,12,12,12,4,9,8,9,9,6,12,7,8,4,6,7,4,7,17~6,5,3,10,6,10,12,12,10,6,5,12,8,12,10,10,4,12,12,12,12,12,11,10,12,5,6,11,8,5,3,8,11,12,6,8,12,10,5,4,12,6,6,6,6,6,12,5,6,6,1,10,3,12,4,12,6,10,8,5,5,6,6,10,10,10,10,10,12,10,8,6,12,6,12,5,5,8,4,6,6,5,6,12,12,8,10,8,8,8,8,8,4,10,5,5,12,8,5,12,10,11,4,6,6,4,11,5,1,5,12,4,4,4,4,4,11,6,5,10,5,10,8,12,10,11,8,4,8,8,11,10,8,3,8,3,3,3,3,3,6,10,6,5,10,8,4,6,4,8,12,4,12,5,10,12,12,4,3,11,11,11,11,11,6,10,10,12,11,5,10,4,8,8,6,5,8,4,6,12,8,1,3,5,5,5,5,5,8,10,11,6,6,5,5,8,11,6,12,10,3,10,8,4,11,1,4,10,17~12,9,12,4,6,8,7,10,9,9,8,7,10,5,8,9,4,7,7,7,7,7,7,7,7,7,7,7,7,10,12,6,7,6,10,6,7,4,7,3,7,5,6,5,4,8,4,10,9,9,9,9,9,8,5,5,9,10,6,9,6,7,5,8,10,6,9,5,3,4,6,3,3,3,3,3,7,9,5,9,8,4,8,7,10,3,10,6,10,6,7,12,9,7,7,6,6,6,6,6,1,5,5,10,6,6,8,8,7,10,5,7,8,7,9,7,6,9,10,10,10,10,10,4,12,12,3,5,6,3,10,7,3,12,4,7,9,10,12,3,7,3,4,4,4,4,4,7,6,9,12,7,10,1,5,12,9,4,4,1,9,8,10,6,7,5,5,5,5,5,12,5,9,9,8,7,8,4,6,9,12,7,10,6,7,5,3,8,10,8,8,8,8,8,4,3,8,7,7,8,5,7,9,5,9,12,7,3,3,7,7,6,12,12,12,12,12,10,3,10,1,7,9,10,3,7,8,10,7,12,6,7,5,7,7,6,4,17~7,9,9,7,1,7,5,7,7,5,7,7,9,9,7,7,11,9,9,3,7,7,7,7,7,7,7,7,7,7,7,7,5,5,7,11,9,3,7,9,1,9,7,9,11,7,7,5,7,5,3,7,5,9,9,9,9,9,11,9,7,1,3,11,3,7,7,9,9,7,11,11,9,7,5,5,7,5,11,11,11,11,11,9,5,9,3,11,5,9,9,1,5,7,5,9,11,5,11,9,7,7,9,3,5,5,5,5,5,11,9,5,9,7,7,11,9,3,5,7,7,5,7,5,7,7,5,9,7,7,3,3,3,3,3,11,5,7,5,7,9,7,5,11,7,5,9,9,7,7,11,7,11,11,9,7,3,7,17~4,4,3,7,8,11,4,7,5,12,6,7,7,7,7,7,7,7,7,7,7,7,7,4,5,6,10,8,10,7,9,4,5,9,5,5,5,5,5,8,7,8,7,5,7,12,3,9,10,7,6,8,8,8,8,8,12,10,11,6,9,9,1,5,7,9,12,8,10,10,10,10,10,6,8,6,9,7,12,9,8,7,7,6,11,6,6,6,6,6,7,4,7,6,9,6,11,8,12,10,7,4,9,9,9,9,9,7,9,5,3,6,11,6,12,11,9,7,7,11,11,11,11,11,8,6,7,6,6,5,5,1,7,9,4,12,12,12,12,12,3,7,9,8,9,10,12,6,12,7,3,11,4,4,4,4,4,6,7,8,10,8,10,11,10,4,7,5,7,3,3,3,3,3,5,7,4,7,9,5,5,7,11,10,9,11,8,17~6,5,3,12,9,3,10,7,7,7,7,7,7,7,7,7,7,7,7,5,10,7,6,12,8,1,5,6,5,5,5,5,5,10,8,6,5,12,7,7,11,10,8,8,8,8,8,6,11,7,1,4,6,9,3,8,10,10,10,10,10,7,9,9,7,4,6,8,4,7,11,6,6,6,6,6,12,8,9,7,9,12,9,7,10,9,9,9,9,9,10,5,11,11,5,6,11,7,7,8,11,11,11,11,11,7,5,4,12,8,8,4,9,8,12,12,12,12,12,9,6,8,7,7,4,10,7,3,4,4,4,4,4,7,4,10,12,6,11,4,9,7,3,3,3,3,3,6,6,7,5,9,1,7,9,7,5,11,17&purInit=[{bet:2000,type:\"fs\"},{bet:2400}]&reel_set3=11,11,12,3,12,8,12,12,5,11,11,8,4,6,12,5,9,12,6,3,3,3,4,11,11,6,12,9,7,8,6,8,5,7,10,3,10,12,10,7,8,12,9,10,10,10,6,3,10,8,8,12,11,7,11,10,11,3,11,12,11,10,7,6,9,9,8,8,8,11,6,7,7,4,12,9,10,11,12,11,8,11,10,8,4,5,10,12,11,7,7,7,5,4,10,7,11,4,12,5,11,7,9,11,10,11,5,12,6,5,7,11,12,11,11,11,12,4,11,7,10,3,12,6,5,9,7,10,10,3,9,11,4,12,9,3,4,17~11,7,11,11,12,5,4,12,9,7,7,11,11,10,12,4,8,11,5,10,8,9,3,8,9,11,10,11,11,11,5,11,6,7,12,6,11,3,9,6,8,6,10,8,11,5,11,10,5,10,7,11,12,9,7,12,11,10,7,7,7,9,4,9,8,7,4,12,5,8,11,8,10,3,12,5,9,6,12,7,5,9,12,12,7,9,12,11,4,8,8,8,12,11,11,3,12,3,7,11,11,8,10,11,12,10,8,12,9,12,12,11,12,8,10,9,7,4,6,6,10,10,10,4,3,10,5,12,11,9,8,10,12,11,5,12,11,3,10,4,12,12,7,3,8,11,12,10,11,11,5,3,3,3,10,12,9,6,12,10,7,3,6,11,10,12,6,5,11,7,11,8,4,4,7,10,4,11,7,6,11,4,11,6,17~16,16,16,16,2,16,2,16,16,16,16,2,2,16,16,16,2,16,16,16,16,2,16,16,16,16,2,2,16,16,16,16,2,16,16,16,16,2,16,16,16,16,2,16,16,16,16,2,16,2,2,16,2,16,16,16,16,2,16,16,16,16,2,16,16,16,16,2,2,16,16,16,2,16,16,2,16,16,16,2,16,16&reel_set20=5,10,8,9,8,8,10,8,9,5,10,12,5,11,10,8,12,14,12,12,12,12,11,11,9,5,7,7,12,8,7,9,9,11,9,5,10,12,9,10,5,11,11,11,11,11,7,11,8,8,11,10,8,8,12,9,7,11,12,11,10,10,12,11,10,10,10,10,10,11,8,7,10,8,11,10,12,11,9,12,7,10,11,12,11,11,10,12,9,9,9,9,9,11,3,5,12,12,5,5,10,7,3,12,10,7,8,10,9,3,12,8,8,8,8,8,9,8,8,12,9,11,3,11,10,8,7,3,3,5,9,5,9,12,10,5,5,5,5,5,7,7,8,3,7,5,12,9,10,12,8,12,10,12,7,11,11,8,3,3,3,3,3,9,12,9,10,11,5,9,5,11,10,3,10,11,9,12,8,9,10,12,11,17~4,11,5,6,11,7,9,9,6,5,3,9,11,5,5,11,7,9,7,14,3,11,11,11,11,11,11,11,11,11,3,7,7,9,8,11,6,8,5,9,7,11,11,7,11,8,6,7,8,11,6,8,8,8,8,8,7,4,6,5,8,3,11,9,11,6,11,4,8,8,9,6,11,8,6,9,7,5,5,5,5,5,4,11,6,9,9,8,8,6,7,11,11,8,7,11,11,9,5,8,9,3,8,6,6,6,6,6,9,9,11,8,7,9,5,5,8,8,5,11,9,4,6,7,5,6,4,5,6,4,4,4,4,4,7,9,11,3,5,6,8,5,3,8,11,7,11,7,5,11,9,9,7,9,7,9,9,9,9,9,4,5,7,7,5,5,7,7,11,8,9,11,5,4,11,7,11,11,8,7,9,3,3,3,3,3,9,11,3,4,8,3,11,4,6,8,3,6,4,9,8,6,8,8,7,6,9,3,8,17~9,10,5,3,6,11,6,12,10,12,11,10,10,10,10,10,14,12,9,9,11,12,6,10,10,4,12,9,11,11,11,11,11,12,10,11,10,5,10,10,5,4,9,10,9,12,12,12,12,12,5,10,5,10,11,4,3,11,6,12,6,9,9,9,9,9,10,11,11,12,3,12,11,9,11,5,3,11,5,6,6,6,6,6,3,11,5,11,11,4,12,4,6,12,6,12,4,4,4,4,4,12,11,9,10,12,9,12,6,9,5,9,6,5,5,5,5,5,11,10,3,5,11,6,12,4,12,10,5,10,3,3,3,3,3,11,12,10,6,3,9,6,10,11,9,4,9,5,9,17~7,12,12,10,7,7,12,10,7,7,10,8,12,8,4,7,7,7,14,7,6,12,8,7,8,6,7,12,10,10,7,12,6,10,12,10,10,10,10,10,7,8,8,10,12,8,10,6,4,4,6,12,8,4,8,10,12,12,12,12,12,8,12,8,7,7,10,10,8,8,4,4,10,12,8,10,7,6,8,8,8,8,8,12,12,10,7,10,10,12,7,7,6,12,8,10,6,10,8,4,4,4,4,4,6,8,6,10,12,12,10,7,10,6,7,12,7,12,10,7,6,6,6,6,6,4,10,8,12,10,7,6,4,4,12,8,6,6,7,7,12,4,12,17~5,8,3,4,11,4,12,7,8,7,12,6,8,9,11,9,11,7,11,14,11,11,11,11,9,11,5,9,5,12,4,8,12,6,7,6,7,7,5,12,7,8,12,12,12,12,12,7,10,8,7,11,6,12,12,9,10,7,11,7,7,9,7,7,10,12,9,9,9,9,9,10,8,5,7,6,8,6,12,11,5,5,10,12,11,8,10,5,8,7,12,10,10,10,10,10,11,7,12,12,7,7,12,7,12,11,10,10,6,7,6,8,7,3,12,8,8,8,8,8,9,11,3,10,7,7,6,8,6,6,5,3,7,7,12,10,10,12,5,4,4,4,4,4,10,7,9,6,4,10,5,4,9,12,7,10,10,4,4,11,11,12,9,11,5,5,5,5,5,11,8,11,11,8,9,9,8,11,9,4,10,5,10,9,8,10,12,9,6,6,6,6,6,10,8,9,7,9,10,10,11,7,10,7,8,7,7,5,7,9,5,4,3,3,3,3,3,7,11,7,12,9,6,8,8,11,7,6,7,10,12,4,9,11,10,11,11,7,17~7,7,12,7,6,9,5,7,11,11,7,7,7,8,12,12,11,7,11,14,6,6,7,9,12,3,12,12,12,12,12,7,7,6,8,11,5,10,5,5,12,10,8,11,11,11,11,11,7,11,9,10,11,8,12,4,9,9,7,9,8,8,8,8,8,7,11,11,3,12,12,9,7,7,9,6,10,10,10,10,10,12,7,12,10,7,4,7,7,10,11,5,9,9,9,9,9,12,5,11,10,7,8,7,10,5,9,7,10,4,4,4,4,4,9,7,11,5,12,8,4,11,10,10,7,12,5,5,5,5,5,11,7,5,6,10,10,7,7,6,7,10,6,6,6,6,6,9,7,12,4,6,10,6,4,7,7,8,11,3,3,3,3,3,10,7,8,12,11,8,6,12,10,4,3,8,8,17&reel_set6=12,6,6,7,10,11,12,9,8,7,6,8,9,11,8,8,7,7,10,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,11,8,11,6,6,7,15,4,9,11,7,7,8,9,6,8,9,7,9,11,11,11,11,11,8,11,7,12,7,11,8,4,11,6,11,10,12,4,7,7,9,6,7,11,9,9,9,9,9,8,6,9,6,7,9,10,11,7,11,4,9,4,11,7,8,9,12,8,7,4,4,4,4,4,8,6,6,11,7,6,4,4,7,6,7,4,11,9,11,4,11,6,9,9,6,6,6,6,6,7,7,4,9,9,8,9,8,7,9,15,10,7,4,6,8,4,9,10,8,8,8,8,8,7,7,8,9,11,7,4,7,11,9,6,7,8,8,7,9,8,7,11,7,10,10,10,10,10,4,4,7,9,6,12,7,9,10,7,6,11,9,8,15,7,11,12,11,9,12,12,12,12,12,6,11,10,7,8,7,7,9,9,11,7,6,7,9,6,8,12,7,9,6,7,17~5,6,8,5,6,6,12,12,8,12,10,8,5,5,12,12,12,12,12,8,10,5,11,11,3,4,10,6,6,5,6,10,12,5,6,6,6,6,6,5,12,6,12,5,10,11,11,6,8,10,6,6,8,5,10,10,10,10,10,5,3,6,5,5,10,12,10,11,12,8,10,12,8,8,8,8,8,11,3,6,8,6,10,5,12,5,10,12,6,5,8,8,4,4,4,4,4,10,4,12,6,10,4,10,12,10,3,3,15,8,8,10,3,3,3,3,3,4,4,12,12,6,4,11,5,8,4,5,6,8,4,4,11,11,11,11,11,10,8,12,8,11,12,4,10,8,6,12,4,15,6,5,5,5,5,5,15,4,6,6,3,8,12,8,6,12,12,11,10,5,12,10,17~7,4,7,5,7,5,10,4,8,6,7,7,7,7,7,7,7,7,7,7,7,7,3,4,7,6,7,7,5,9,5,7,6,5,5,9,9,9,9,9,4,8,9,7,12,10,8,12,6,3,12,12,8,3,3,3,3,3,7,6,7,6,4,8,6,9,8,5,10,5,7,6,6,6,6,6,12,5,9,8,8,10,6,3,3,10,15,6,7,10,10,10,10,10,9,7,12,4,3,6,7,7,9,10,7,9,7,4,4,4,4,4,9,15,7,9,4,3,12,8,7,10,4,5,8,5,5,5,5,5,10,6,7,15,5,5,3,7,7,6,9,9,6,8,8,8,8,8,9,3,9,7,4,8,10,10,8,10,3,5,9,12,12,12,12,12,10,3,12,10,9,6,4,10,8,6,12,7,10,12,17~7,9,7,7,5,7,15,5,7,9,7,9,7,3,7,7,5,7,7,7,7,7,7,7,7,7,7,7,7,11,5,7,9,9,11,9,7,3,7,11,5,11,15,9,11,9,9,9,9,9,11,7,5,11,9,5,7,7,5,9,7,11,9,7,9,5,15,7,5,11,11,11,11,11,9,7,11,7,7,9,7,9,3,7,9,11,15,7,5,5,5,5,5,7,9,11,3,11,3,9,7,11,7,3,7,9,5,5,7,7,9,3,3,3,3,3,5,5,9,7,5,7,5,11,9,7,7,5,7,9,7,3,9,7,5,17~9,4,5,10,6,11,3,10,6,7,6,7,12,8,7,7,7,7,7,7,7,7,7,7,7,7,8,12,9,8,7,6,7,11,8,5,4,4,9,12,6,8,5,5,5,5,5,6,11,3,15,9,9,6,7,11,10,9,5,9,8,11,8,8,8,8,8,5,10,4,7,10,9,4,5,8,8,7,9,7,9,8,6,10,10,10,10,10,6,9,11,7,12,8,5,6,3,4,5,5,9,6,8,6,6,6,6,6,7,11,8,11,12,7,15,5,12,8,5,5,9,7,7,5,9,9,9,9,9,7,8,6,7,9,7,11,4,4,10,12,6,7,6,7,11,11,11,11,11,7,4,7,3,7,9,7,12,4,12,10,12,9,10,3,12,12,12,12,12,10,5,7,11,10,7,8,10,5,7,6,7,7,6,4,4,4,4,4,9,10,7,7,8,9,6,5,6,9,3,6,11,12,7,10,3,3,3,3,3,4,11,6,11,6,7,5,7,4,12,7,7,8,9,7,9,5,17~7,10,7,11,12,10,6,7,5,6,10,6,7,7,7,7,7,7,7,7,7,7,7,7,6,6,5,12,9,10,7,3,7,7,15,12,5,5,5,5,5,4,11,6,11,10,9,7,5,4,10,7,4,12,8,8,8,8,8,7,11,9,5,6,6,5,12,6,12,11,5,12,10,10,10,10,10,7,9,7,8,5,8,15,9,11,4,7,5,10,6,6,6,6,6,4,7,12,11,6,7,12,9,6,4,7,12,8,9,9,9,9,9,6,5,6,7,3,9,5,9,7,8,4,11,9,11,11,11,11,11,10,9,10,7,8,8,7,8,5,3,8,5,7,12,12,12,12,12,5,6,15,6,7,10,8,9,7,7,8,9,4,4,4,4,4,10,8,9,7,7,8,4,9,7,11,7,6,5,3,3,3,3,3,8,4,4,9,8,3,6,9,9,11,4,3,7,11,17&reel_set5=11,8,10,9,11,8,9,12,10,12,11,7,11,4,4,9,8,11,12,12,7,12,11,9,6,7,7,7,12,12,7,12,7,9,10,7,9,4,8,12,9,4,12,9,9,11,7,9,7,11,11,12,7,7,8,10,10,10,7,7,4,11,12,11,7,8,10,6,12,11,11,8,11,7,10,11,6,6,12,10,8,11,10,6,8,8,8,7,11,12,6,9,4,4,9,12,6,10,4,8,8,6,9,9,11,11,10,10,9,12,6,10,9,9,11,11,11,6,7,8,10,11,7,7,9,11,7,11,12,9,4,10,11,11,12,12,10,10,11,11,4,9,7,12,12,17~11,12,10,6,9,6,11,12,10,9,11,10,6,6,9,11,7,11,12,11,4,7,9,12,10,9,7,11,12,12,11,11,11,7,10,11,6,11,4,9,8,11,7,9,12,10,11,4,8,11,9,10,9,7,11,10,9,12,11,8,11,4,8,12,12,7,7,7,11,8,7,7,9,12,12,9,7,4,7,6,12,12,8,7,7,12,7,10,6,8,9,4,11,12,9,10,10,9,11,9,8,8,8,6,9,11,12,8,11,9,7,8,11,8,4,9,12,12,11,4,10,4,11,10,10,11,11,9,8,10,9,4,7,11,12,10,10,10,11,11,4,6,7,6,11,11,6,8,7,6,7,8,12,12,9,10,7,11,7,9,10,7,9,12,10,7,12,12,7,4,12,17~16,16,16,2,2,16,16,16,16,2,2,16,16,16,16,2,16,16,16,2,16,16,16,2,16,16,16,16,2,2,16,2,16,2,16,16,16,16,2,16,16,2,16,16,16,16,2,16,2,16,16,16,16,2,16,16,16,16,2,16,2,16,16,16,2,16,2,16,16,16,16,2,16,16,16,16,2,16,16,16,16,2,16,16,16&reel_set8=7,9,11,7,9,7,9,8,7,12,9,5,8,9,7,7,5,10,8,7,11,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,9,1,8,5,1,5,5,7,5,11,3,7,5,12,8,9,11,8,10,9,9,8,11,11,11,11,11,7,9,7,8,1,7,11,7,1,5,7,11,7,12,9,12,7,9,7,5,7,8,7,9,9,9,9,9,5,12,7,10,9,5,8,8,7,7,11,7,3,5,11,7,11,7,7,5,11,9,5,5,5,5,5,12,8,7,7,8,1,9,11,9,10,7,8,7,7,3,9,7,3,12,5,1,9,3,3,3,3,3,11,7,12,5,9,9,11,7,3,8,8,11,9,5,8,7,9,11,8,9,7,5,11,8,8,8,8,8,11,9,7,3,5,10,10,9,9,11,5,10,8,5,9,8,7,12,9,1,9,10,10,10,10,10,9,7,3,11,7,9,9,11,9,7,5,9,11,3,5,7,11,8,7,11,9,7,12,12,12,12,12,11,8,8,10,11,8,11,7,11,11,9,9,11,10,11,7,7,11,8,3,7,5,8,7,17~7,6,8,4,8,7,6,11,7,7,5,7,3,7,6,6,4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,6,8,7,6,5,8,7,7,4,5,8,6,5,7,11,8,5,9,9,9,9,9,6,6,4,5,3,6,6,5,9,6,7,7,8,5,5,7,9,7,6,6,6,6,6,7,8,9,1,11,5,7,6,5,7,5,4,11,4,5,7,6,11,8,8,8,8,8,5,7,8,5,7,4,6,11,6,9,7,7,4,8,6,8,5,9,4,4,4,4,4,7,7,9,6,7,7,3,7,6,4,1,11,6,5,8,6,7,5,3,3,3,3,3,5,6,5,11,11,7,4,11,7,7,8,5,3,5,7,11,3,4,11,11,11,11,11,5,4,7,7,6,8,3,4,8,9,7,8,4,6,8,8,4,7,5,5,5,5,5,7,8,7,7,8,7,7,3,7,8,8,11,6,6,8,7,8,5,6,4,17~9,5,11,11,9,6,12,6,3,5,4,1,5,12,6,6,10,10,6,9,9,9,9,9,6,10,12,5,6,1,9,5,5,6,10,9,9,3,10,12,6,3,11,3,3,3,3,3,5,9,9,3,12,10,11,9,6,5,9,12,10,6,10,10,11,5,4,1,9,6,6,6,6,6,3,10,9,11,10,9,6,9,5,12,3,4,5,9,5,9,9,4,4,11,6,10,10,10,10,10,6,10,3,4,4,3,12,3,10,12,3,6,6,12,11,3,11,12,4,12,4,4,4,4,4,11,10,9,12,9,5,3,9,12,10,12,5,3,10,11,4,4,11,6,5,5,5,5,5,11,9,6,10,11,4,5,4,9,5,9,6,5,12,12,3,4,11,10,11,4,11,11,11,11,11,10,11,9,11,6,3,4,10,4,6,9,11,10,9,1,10,11,10,5,9,10,12,12,12,12,12,6,10,10,5,6,3,5,6,5,11,1,9,6,11,5,11,6,3,5,12,10,6,17~6,1,8,12,6,12,7,7,6,4,6,8,7,12,10,12,7,7,10,6,7,10,6,7,7,7,7,7,7,7,7,7,7,7,7,4,6,10,12,7,7,8,6,10,4,7,4,7,8,4,12,7,10,8,8,7,4,7,6,7,10,10,10,10,10,6,10,6,6,7,6,10,7,1,4,4,7,10,4,6,6,12,8,7,8,6,8,10,10,12,12,12,12,12,8,7,7,4,7,6,6,4,4,8,7,8,7,6,4,4,7,6,6,7,8,10,4,7,1,4,4,4,4,4,7,7,6,10,7,7,6,12,8,8,6,7,7,6,6,12,7,7,8,12,10,6,7,8,8,8,8,8,7,8,8,12,10,7,7,10,6,8,4,7,7,6,7,4,10,12,10,10,6,8,7,12,7,6,6,6,6,6,12,7,8,7,8,10,6,8,6,8,7,1,8,4,6,6,12,8,6,10,6,7,4,4,12,17~6,12,7,6,4,4,5,7,7,7,7,7,7,7,7,7,7,7,7,6,8,9,6,12,4,5,9,12,5,5,5,5,5,11,7,5,1,7,8,12,7,9,8,8,8,8,8,9,6,8,10,11,3,4,5,8,7,10,10,10,10,10,6,4,7,10,8,7,9,8,10,6,6,6,6,6,9,4,5,12,11,11,7,3,9,9,9,9,9,1,6,12,10,6,9,7,7,5,11,11,11,11,11,9,6,9,11,10,6,4,5,11,7,12,12,12,12,12,8,7,12,7,10,7,8,3,6,4,4,4,4,4,6,5,7,8,10,10,9,11,5,3,3,3,3,3,9,7,4,7,5,11,7,12,8,7,3,17~4,7,5,4,9,5,7,7,5,8,5,7,7,7,7,7,7,7,7,7,7,7,7,3,1,5,8,7,3,9,9,10,11,5,12,5,5,5,5,5,7,5,5,7,4,11,9,8,7,12,7,10,8,8,8,8,8,7,1,12,6,9,6,12,12,9,12,7,7,8,10,10,10,10,10,4,9,3,7,8,6,8,11,6,5,6,3,6,6,6,6,6,7,12,4,7,8,9,4,12,11,10,12,8,4,9,9,9,9,9,6,8,7,6,10,10,6,10,11,6,7,6,11,11,11,11,11,9,4,7,7,6,7,6,11,11,6,6,9,8,12,12,12,12,12,7,7,9,11,8,4,9,9,4,6,1,10,4,4,4,4,4,3,7,11,8,9,5,10,11,10,5,7,10,9,3,3,3,3,3,11,5,9,7,7,12,6,8,5,10,7,7,4,12,17&reel_set7=9,12,10,6,11,9,9,7,9,12,4,9,9,7,7,10,12,10,4,11,12,8,6,8,6,12,4,10,8,6,9,8,10,12,7,7,7,6,7,12,12,4,7,10,10,9,11,11,6,11,12,11,12,4,11,9,9,6,11,11,7,10,9,9,7,12,9,12,11,11,6,11,10,10,10,8,7,11,7,10,11,11,7,10,4,10,6,11,12,10,12,10,8,10,7,7,8,9,11,4,11,9,12,12,9,7,11,7,9,7,8,8,8,11,7,4,12,12,11,8,10,7,7,11,8,4,4,10,9,11,11,9,10,12,11,9,12,7,12,10,7,9,8,7,8,11,4,6,11,11,11,12,9,4,9,10,12,12,6,8,9,12,11,11,9,12,7,7,8,10,8,11,6,11,9,11,7,12,12,6,4,7,8,12,11,9,17~9,6,11,10,8,11,10,11,12,10,10,11,9,11,9,7,11,11,9,7,9,11,10,11,11,11,7,7,9,10,8,12,12,9,9,8,4,7,9,11,7,11,9,11,9,6,4,9,10,11,7,7,7,8,7,12,12,4,12,6,12,12,7,12,9,11,7,11,6,10,4,11,11,8,9,9,6,8,8,8,6,9,7,12,8,6,4,12,11,7,7,8,10,12,6,12,12,11,12,8,4,10,4,11,10,10,10,11,10,7,9,10,11,7,12,12,9,11,7,11,12,8,9,6,12,12,10,4,7,4,10,8,7,17~16,16,16,16,2,16,16,16,16,2,16,2,2,16,16,16,16,2,16,16,16,16,2,16,16,16,16,2,2,16,16,16,16,2,16,16,16,2,16,16,16,2,2,16,16,16,2,16,16,16,16,2,16,2,16,16,2,16,16,16,16,2,16,16,16,16,2,16&reel_set9=10,12,11,3,12,12,7,10,8,5,12,12,8,12,12,11,12,3,3,3,5,10,3,10,12,10,9,10,5,11,11,10,10,11,12,11,9,11,11,10,10,10,12,11,11,12,12,8,12,8,9,8,9,9,10,3,11,7,9,12,12,8,8,8,7,12,8,11,9,10,5,10,12,5,7,10,11,10,12,11,3,10,7,7,7,11,7,5,5,12,11,12,10,9,10,10,7,10,11,8,11,5,12,7,11,11,11,5,12,7,10,7,11,7,8,10,8,12,12,9,8,5,8,12,11,12,12,12,7,3,11,11,10,9,12,11,10,9,11,12,7,12,12,3,12,10,3,10,17~9,8,3,11,7,12,12,3,5,5,8,11,12,7,9,12,12,3,8,10,10,7,11,9,12,12,12,10,9,7,5,7,12,12,8,10,12,9,12,7,12,10,3,12,10,12,11,12,10,7,5,10,10,10,9,11,10,3,5,11,8,11,10,8,10,12,11,10,10,5,12,11,5,10,12,11,11,8,10,11,11,11,7,11,12,12,8,9,7,3,12,11,8,11,12,10,12,8,11,10,9,11,10,10,11,8,11,7,7,7,12,10,11,12,11,12,12,8,12,5,5,9,10,11,12,8,12,10,8,10,5,10,12,10,8,8,8,11,11,12,12,10,3,12,11,11,9,12,9,5,11,11,7,11,3,12,9,7,10,7,10,9,3,3,3,5,9,11,12,7,7,11,12,11,11,5,7,12,12,8,10,12,9,11,10,12,11,12,10,10,3,17~16,16,16,16,2,16,2,2,16,16,16,2,16,16,16,2,16,16,16,2,16,2,16,16,16,16,2,16,2,16,16,2,16,16,2,16,16,16,16,2,16,2,16,16,2,2,16,16,16,16,2,2,16,16,2,2,16,16,16,16,2,2,16,16,16,16,2,16,16,16,16,2,2,16,16,16,16,2,16,16,16,16&total_bet_min=10.00";
            }
        }	
        protected override double PurchaseFreeMultiple
        {
            get { return 100; }
        }
        protected override bool SupportPurchaseFree
        {
            get { return true; }
        }
        protected override bool HasPurEnableOption
        {
            get { return true; }
        }
        protected int FreePurCount
        {
            get { return 2; }
        }
        public double[] PurchaseMultiples
        {
            get { return new double[] { 100, 120 }; }
        }

        #endregion
        public BigBassHoldAndSpinnerMegawaysGameLogic()
        {
            _gameID = GAMEID.BigBassHoldAndSpinnerMegaways;
            GameName = "BigBassHoldAndSpinnerMegaways";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["g"] = "{main:{def_s:\"8,10,11,11,5,5,6,7,3,8,4,5,11,5,10,5,13,4,4,12,7,5,13,8,13,1,9,13,13,8,13,13,13,13,13,9\",def_sa:\"9,9,9,11,5,7\",def_sb:\"1,7,12,10,7,7\",reel_set:\"0\",s:\"8,10,11,11,5,5,6,7,3,8,4,5,11,5,10,5,13,4,4,12,7,5,13,8,13,1,9,13,13,8,13,13,13,13,13,9\",sa:\"9,9,9,11,5,7\",sb:\"1,7,12,10,7,7\",sh:\"6\",st:\"rect\",sw:\"6\"},top:{def_s:\"12,5,16,3,12,16,3,5,2,3,10,16\",def_sa:\"11,11,16\",def_sb:\"12,11,16\",reel_set:\"1\",s:\"12,5,16,3,12,16,3,5,2,3,10,16\",sa:\"11,11,16\",sb:\"12,11,16\",sh:\"4\",st:\"rect\",sw:\"3\"}}";
	        dicParams["st"] = "rect";
	        dicParams["sw"] = "6";
        }
        protected override void overrideSomeParams(BasePPSlotBetInfo betInfo, Dictionary<string, string> dicParams)
        {
            base.overrideSomeParams(betInfo, dicParams);
            if (!dicParams.ContainsKey("reel_set"))
                dicParams["reel_set"] = "0";

            if (SupportPurchaseFree && betInfo.PurchaseFree)
                dicParams["puri"] = (betInfo as BigBassHoldAndSpinnerMegawaysBetInfo).PurchaseType.ToString();
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
            if (dicParams.ContainsKey("pw"))
                dicParams["pw"] = convertWinByBet(dicParams["pw"], currentBet);

            if (dicParams.ContainsKey("rs_win"))
                dicParams["rs_win"] = convertWinByBet(dicParams["rs_win"], currentBet);

            if (dicParams.ContainsKey("mo_tw"))
                dicParams["mo_tw"] = convertWinByBet(dicParams["mo_tw"], currentBet);

            if (dicParams.ContainsKey("g"))
            {
                var gParam = JToken.Parse(dicParams["g"]);
                if (gParam["bg"] != null && gParam["bg"]["rw"] != null)
                {
                    gParam["bg"]["rw"] = convertWinByBet(gParam["bg"]["rw"].ToString(), currentBet);
                    dicParams["g"] = serializeJsonSpecial(gParam);
                }
            }
            if (dicParams.ContainsKey("wlc_v"))
            {
                string[] strParts = dicParams["wlc_v"].Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                for (int i = 0; i < strParts.Length; i++)
                {
                    string[] strValues = strParts[i].Split(new string[] { "~" }, StringSplitOptions.RemoveEmptyEntries);
                    strValues[1] = convertWinByBet(strValues[1], currentBet);
                    strParts[i] = string.Join("~", strValues);
                }
                dicParams["wlc_v"] = string.Join(";", strParts);
            }
        }
        protected override double getPurchaseMultiple(BasePPSlotBetInfo betInfo)
        {
            int purchaseType = (betInfo as BigBassHoldAndSpinnerMegawaysBetInfo).PurchaseType;
            return this.PurchaseMultiples[purchaseType];
        }

        protected override void readBetInfoFromMessage(GITMessage message, string strGlobalUserID, Currencies currency)
        {
            try
            {
                string strInitString = ChipsetManager.Instance.convertTo(currency, this.InitDataString, this.SymbolName);
                var dicParams = splitResponseToParams(strInitString);

                double minChip = 0.0, maxChip = 0.0;
                getMinMaxChip(dicParams["sc"], ref minChip, ref maxChip);


                BigBassHoldAndSpinnerMegawaysBetInfo betInfo = new BigBassHoldAndSpinnerMegawaysBetInfo();
                betInfo.BetPerLine       = (float)message.Pop();
                betInfo.LineCount        = (int)message.Pop();

                if (message.DataNum >= 3)
                {
                    betInfo.PurchaseFree = true;
                    betInfo.PurchaseType = (int)message.GetData(2);
                }
                else
                {
                    betInfo.PurchaseFree = false;
                }

                if (betInfo.BetPerLine <= 0.0f)
                {
                    _logger.Error("{0} betInfo.BetPerLine <= 0 in BigBassHoldAndSpinnerMegawaysGameLogic::readBetInfoFromMessage {1}", strGlobalUserID, betInfo.BetPerLine);
                    return;
                }

                if (!isNotIntergerMultipleBetPerLine(betInfo.BetPerLine, minChip))
                {
                    _logger.Error("{0} betInfo.BetPerLine is illegual: {1} != {2} * integer", strGlobalUserID, betInfo.BetPerLine, minChip);
                    return;
                }

                if (betInfo.LineCount != this.ClientReqLineCount)
                {
                    _logger.Error("{0} betInfo.LineCount is not matched {1} != {2}", strGlobalUserID, betInfo.LineCount, this.ClientReqLineCount);
                    return;
                }
                BasePPSlotBetInfo oldBetInfo = null;
                if (_dicUserBetInfos.TryGetValue(strGlobalUserID, out oldBetInfo))
                {
                    if (oldBetInfo.HasRemainResponse)
                        return;

                    oldBetInfo.BetPerLine   = betInfo.BetPerLine;
                    oldBetInfo.LineCount    = betInfo.LineCount;
                    oldBetInfo.MoreBet      = betInfo.MoreBet;
                    oldBetInfo.PurchaseFree = betInfo.PurchaseFree;
                    (oldBetInfo as BigBassHoldAndSpinnerMegawaysBetInfo).PurchaseType = betInfo.PurchaseType;
                }
                else
                {
                    _dicUserBetInfos.Add(strGlobalUserID, betInfo);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in BigBassHoldAndSpinnerMegawaysGameLogic::readBetInfoFromMessage {0}", ex);
            }
        }
        protected override BasePPSlotBetInfo restoreBetInfo(string strGlobalUserID, BinaryReader reader)
        {
            BigBassHoldAndSpinnerMegawaysBetInfo betInfo = new BigBassHoldAndSpinnerMegawaysBetInfo();
            betInfo.SerializeFrom(reader);
            return betInfo;
        }
        protected override BasePPSlotBetInfo newBetInfo()
        {
            return new BigBassHoldAndSpinnerMegawaysBetInfo();
        }
        protected override async Task onLoadSpinData(BsonDocument infoDocument)
        {
            try
            {
                _spinDataDefaultBet     = (double)  infoDocument["defaultbet"];
                _normalMaxID            = (int)     infoDocument["normalmaxid"];
                _emptySpinCount         = (int)     infoDocument["emptycount"];
                _naturalSpinCount       = (int)     infoDocument["normalselectcount"];

                _multiTotalFreeSpinWinRates = new double[FreePurCount];
                _multiMinFreeSpinWinRates = new double[FreePurCount];

                if (SupportPurchaseFree)
                {
                    var purchaseOdds = infoDocument["purchaseodds"] as BsonArray;
                    for (int i = 0; i < FreePurCount; i++)
                    {
                        _multiMinFreeSpinWinRates[i]   = (double)purchaseOdds[2 * i];
                        _multiTotalFreeSpinWinRates[i] = (double)purchaseOdds[2 * i + 1];

                        if (this.PurchaseMultiples[i] > _multiTotalFreeSpinWinRates[i])
                            _logger.Error("freespin win rate doesn't satisfy condition {0}", this.GameName);
                    }
                }

                if (this.SupportMoreBet)
                {
                    _anteBetMinusZeroCount = (int)((1.0 - 1.0 / MoreBetMultiple) * (double)_naturalSpinCount);
                    if (_anteBetMinusZeroCount > _emptySpinCount)
                        _logger.Error("More Bet Probabily calculation doesn't work in {0}", this.GameName);
                }

            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occured in loading spin data of game {0} {1}", GameName, ex);
            }
        }
        protected override async Task<BasePPSlotSpinData> selectPurchaseFreeSpin(int agentID, BasePPSlotBetInfo betInfo, double baseBet, UserBonus userBonus, bool isAffiliate)
        {
            int purchaseType  = (betInfo as BigBassHoldAndSpinnerMegawaysBetInfo).PurchaseType;
            double payoutRate = getPayoutRate(agentID, isAffiliate);
            if (isAffiliate)
                payoutRate = 100.0;

            double targetC = PurchaseMultiples[purchaseType] * payoutRate / 100.0;
            if (targetC >= _multiTotalFreeSpinWinRates[purchaseType])
                targetC = _multiTotalFreeSpinWinRates[purchaseType];

            if (targetC < _multiMinFreeSpinWinRates[purchaseType])
                targetC = _multiMinFreeSpinWinRates[purchaseType];

            double x = (_multiTotalFreeSpinWinRates[purchaseType] - targetC) / (_multiTotalFreeSpinWinRates[purchaseType] - _multiMinFreeSpinWinRates[purchaseType]);
            double y = 1.0 - x;

            BasePPSlotSpinData spinData = null;
            if (Pcg.Default.NextDouble(0.0, 1.0) <= x)
                spinData = await selectMinStartFreeSpinData(betInfo);
            else
                spinData = await selectRandomStartFreeSpinData(betInfo);
            return spinData;
        }
        protected override async Task<BasePPSlotSpinData> selectMinStartFreeSpinData(BasePPSlotBetInfo betInfo)
        {
            try
            {
                BsonDocument spinDataDocument = null;
                int purchaseType = (betInfo as BigBassHoldAndSpinnerMegawaysBetInfo).PurchaseType;
                spinDataDocument = await Context.System.ActorSelection("/user/spinDBReaders").Ask<BsonDocument>(
                        new SelectSpinTypeOddRangeRequest(GameName, -1, PurchaseMultiples[purchaseType] * 0.2, PurchaseMultiples[purchaseType] * 0.5, purchaseType), TimeSpan.FromSeconds(10.0));
                return convertBsonToSpinData(spinDataDocument);
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in BigBassHoldAndSpinnerMegawaysGameLogic::selectMinStartFreeSpinData {0}", ex);
                return null;
            }
        }
        protected override async Task<BasePPSlotSpinData> selectRandomStartFreeSpinData(BasePPSlotBetInfo betInfo)
        {
            try
            {
                int purchaseType = (betInfo as BigBassHoldAndSpinnerMegawaysBetInfo).PurchaseType;
                var spinDataDocument = await Context.System.ActorSelection("/user/spinDBReaders").Ask<BsonDocument>(
                        new SelectPurchaseSpinRequest(GameName, StartSpinSearchTypes.MULTISPECIFIC, purchaseType),
                        TimeSpan.FromSeconds(10.0));

                return convertBsonToSpinData(spinDataDocument);
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in BigBassHoldAndSpinnerMegawaysGameLogic::selectRandomStartFreeSpinData {0}", ex);
                return null;
            }
        }
        protected override void onDoBonus(int agentID, string strUserID, GITMessage message, double userBalance, Currencies currency, bool isAffiliate)
        {
            try
            {
                int index   = (int)message.Pop();
                int counter = (int)message.Pop();

                GITMessage responseMessage  = new GITMessage((ushort)SCMSG_CODE.SC_PP_DOBONUS);
                double realWin              = 0.0;
                string strGameLog           = "";
                string strGlobalUserID      = string.Format("{0}_{1}", agentID, strUserID);
                ToUserResultMessage resultMsg = null;
                if (!_dicUserResultInfos.ContainsKey(strGlobalUserID) || !_dicUserBetInfos.ContainsKey(strGlobalUserID) ||
                    !_dicUserBetInfos[strGlobalUserID].HasRemainResponse)
                {
                    responseMessage.Append("unlogged");
                }
                else
                {
                    BasePPSlotSpinResult result = _dicUserResultInfos[strGlobalUserID];
                    BasePPSlotBetInfo betInfo   = _dicUserBetInfos[strGlobalUserID];
                    BasePPActionToResponse actionResponse = betInfo.pullRemainResponse();
                    if (actionResponse.ActionType != ActionTypes.DOBONUS)
                    {
                        responseMessage.Append("unlogged");
                    }
                    else
                    {
                        Dictionary<string, string> dicParams = splitResponseToParams(actionResponse.Response);

                        convertWinsByBet(dicParams, betInfo.TotalBet);
                        convertBetsByBet(dicParams, betInfo.BetPerLine, betInfo.TotalBet);

                        result.BonusResultString = convertKeyValuesToString(dicParams);
                        addDefaultParams(dicParams, userBalance, index, counter);
                        if (dicParams.ContainsKey("sh"))
                            dicParams.Remove("sh");
                        ActionTypes nextAction = convertStringToActionType(dicParams["na"]);
                        string strResponse = convertKeyValuesToString(dicParams);

                        responseMessage.Append(strResponse);

                        //히스토리보관 및 초기화
                        if (_dicUserHistory.ContainsKey(strGlobalUserID) && _dicUserHistory[strGlobalUserID].log.Count > 0)
                            addActionHistory(strGlobalUserID, "doBonus", strResponse, index, counter);

                        if (nextAction == ActionTypes.DOCOLLECT || nextAction == ActionTypes.DOCOLLECTBONUS)
                        {
                            realWin = double.Parse(dicParams["tw"]);
                            strGameLog = strResponse;

                            if (realWin > 0.0f)
                            {
                                _dicUserHistory[strGlobalUserID].baseBet = betInfo.TotalBet;
                                _dicUserHistory[strGlobalUserID].win = realWin;
                            }
                            resultMsg                   = new ToUserResultMessage((int)_gameID, responseMessage, 0.0, realWin, new GameLogInfo(this.GameName, "0", strGameLog), UserBetTypes.Normal); ;
                            resultMsg.BetTransactionID  = betInfo.BetTransactionID;
                            resultMsg.RoundID           = betInfo.RoundID;
                            resultMsg.TransactionID     = createTransactionID();

                            if (_dicUserFreeSpinInfos.ContainsKey(strGlobalUserID) && !_dicUserFreeSpinInfos[strGlobalUserID].Pending)
                            {
                                resultMsg.FreeSpinID = _dicUserFreeSpinInfos[strGlobalUserID].FreeSpinID;
                                addFreeSpinBonusParams(responseMessage, _dicUserFreeSpinInfos[strGlobalUserID], strGlobalUserID, realWin);
                            }

                        }
                        copyBonusParamsToResult(dicParams, result);
                        result.NextAction = nextAction;
                    }
                    if (!betInfo.HasRemainResponse)
                        betInfo.RemainReponses = null;

                    saveBetResultInfo(strGlobalUserID);
                }
                if (resultMsg == null)
                    Sender.Tell(new ToUserMessage((int)_gameID, responseMessage), Self);
                else
                    Sender.Tell(resultMsg);
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in BasePPSlotGame::onDoBonus {0}", ex);
            }
        }
        protected override Dictionary<string, string> mergeSpinToBonus(Dictionary<string, string> spinParams, Dictionary<string, string> bonusParams)
        {
            Dictionary<string, string> resultParams = new Dictionary<string, string>();
            foreach (KeyValuePair<string, string> pair in bonusParams)
                resultParams.Add(pair.Key, pair.Value);

            string[] toCopyParams = new string[] { "sa", "sb", "fs", "fsmul", "fsmax", "fsres", "fswin", "fs_total", "fsmul_total", "fsres_total", "fswin_total", "reel_set", "s", "is", "stf" };
            for (int i = 0; i < toCopyParams.Length; i++)
            {
                if (!spinParams.ContainsKey(toCopyParams[i]))
                    continue;
                resultParams[toCopyParams[i]] = spinParams[toCopyParams[i]];
            }
            if (resultParams.ContainsKey("g") && spinParams.ContainsKey("g"))
            {
                var gParam1 = JToken.Parse(resultParams["g"]);
                var gParam2 = JToken.Parse(spinParams["g"]);
                gParam1["main"] = gParam2["main"];
                gParam1["top"]  = gParam2["top"];
                resultParams["g"] = serializeJsonSpecial(gParam1);
            }
            return resultParams;
        }
        protected override UserSpinItem createUserSpinItem(int agentID, string strUserID, BasePPSlotBetInfo betInfo, double betMoney)
        {
            BigBassHoldAndSpinnerMegawaysBetInfo bigBassBetInfo = betInfo as BigBassHoldAndSpinnerMegawaysBetInfo;
            return new UserSpinItem(agentID, strUserID, this.SymbolName, betInfo.BetPerLine, betInfo.LineCount, -1, betInfo.PurchaseFree ? bigBassBetInfo.PurchaseType : -1, betMoney);
        }
    }
}
