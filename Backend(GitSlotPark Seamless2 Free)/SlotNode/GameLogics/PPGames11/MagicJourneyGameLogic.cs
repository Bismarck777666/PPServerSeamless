using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class MagicJourneyGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs8magicjourn";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return false;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 20; }
        }
        protected override int ServerResLineCount
        {
            get { return 20; }
        }
        protected override int ROWS
        {
            get
            {
                return 1;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=12,12,12,12,12&as_s=3,4,5,6,7,8,9,10,11&as_sh=3&cfgs=2625&ver=2&reel_set_size=2&def_sb=3,6,7,7,7&def_sa=5,8,9,6,6&prg_cfg_m=clc,mlc&scatters=1~0,0,0,0,0~0,0,0,0,0~1,1,1,1,1&gmb=0,0,0&rt=d&as_paytable=1~40;2~100;3~200;4~300;5~600;6~2000;8~8000&prg_cfg=0,8&sc=10.00,20.00,30.00,40.00,50.00,100.00,150.00,200.00,250.00,375.00,500.00,750.00,1250.00,2500.00,3750.00,5000.00&defc=50.00&wilds=2~0,0,0,0,0,0~1,1,1,1,1,1&bonuses=0&fsbonus=&as_def_s=3,4,5,6,7,8,9,10,11&paytable=0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0&reel_set0=12,3,12,4,12,5,12,6,12,7,12,8,12,9,12,10,12,11,12,10,12,6,12,6,12,6,12,6,12,5,12,7,12,7,12,8,12,10,12,10,12,9,12,11,12,11,12,10,12,10,12,6,12,6,12,6,12,6,12,6,12,7,12,7,12,8,12,10,12,10,12,9,12,10,12,10,12,10,12,10,12,12,6,12,6,12,6,12,6,12,6,12,7,12,7,12,8,12,10,12,10,12,9,12,10,12,10,12,10,12,10,12,6,12,6,12,6,12,6,12,12,6,12,7,12,7,12,8,12,10,12,10,12,9,12,10,12,10,12,10,12,10,12,8,12~12,6,12,7,12,9,12,9,12,9,12,9,12,4,12,11,12,11,12,11,12,8,12,8,12,8,12,8,12,5,12,12,6,12,9,12,9,12,10,12,9,12,9,12,11,12,11,12,11,12,11,12,8,12,8,12,8,12,8,12,8,12,6,12,9,12,9,12,9,12,9,12,9,12,11,12,11,12,11,12,11,12,12,8,12,8,12,8,12,8,12,8,12,6,12,5,12,9,12,9,12,9,12,9,12,11,12,11,12,11,12,11,12,8,12,8,12,8,12,8,12,12,8,12,6,12,5,12,9,12,9,12,9,12,9,12,11,12,11,12,11,12,11,12,8,12,8~12,7,12,7,12,9,12,6,12,6,12,6,12,6,12,6,12,6,12,4,12,7,12,7,12,9,12,9,12,5,12,12,9,12,7,12,8,12,10,12,5,12,5,12,6,12,11,12,8,12,6,12,9,12,9,12,9,12,9,12,9,12,9,12,7,12,8,12,5,12,6,12,6,12,6,12,6,12,6,12,6,12,12,9,12,9,12,9,12,9,12,9,12,5,12,5,12,8,12,5,12,5,12,5,12,6,12,6,12,6,12,6,12,9,12,9,12,9,12,9,12,12,9,12,5,12,5,12,8,12,5,12,8,12,5,12,6,12,6,12,6,12,6,12,9,12,9~12,7,12,9,12,5,12,10,12,10,12,10,12,4,12,6,12,6,12,6,12,6,12,6,12,6,12,6,12,6,12,12,9,12,9,12,9,12,8,12,10,12,10,12,5,12,11,12,6,12,6,12,6,12,6,12,6,12,6,12,6,12,9,12,9,12,9,12,10,12,10,12,10,12,5,12,6,12,6,12,5,12,12,6,12,6,12,6,12,6,12,6,12,5,12,9,12,9,12,10,12,10,12,10,12,5,12,6,12,6,12,5,12,6,12,6,12,6,12,6,12,12,6,12,5,12,9,12,9,12,10,12,10,12,10,12,5,12,8,12,8,12,5,12,6~12,7,12,5,12,9,12,10,12,4,12,10,12,5,12,5,12,5,12,5,12,5,12,6,12,6,12,6,12,6,12,12,7,12,8,12,9,12,10,12,8,12,10,12,5,12,11,12,5,12,5,12,6,12,6,12,6,12,6,12,6,12,7,12,8,12,9,12,10,12,8,12,10,12,5,12,5,12,5,12,5,12,12,6,12,6,12,6,12,6,12,6,12,7,12,8,12,9,12,10,12,8,12,10,12,5,12,8,12,8,12,5,12,6,12,6,12,6,12,6,12,12,6,12,7,12,8,12,9,12,10,12,8,12,10,12,5,12,5,12,8,12,8,12,6&reel_set1=12,3,12,4,12,5,12,6,12,7,12,8,12,9,12,10,12,11,12,10,12,6,12,6,12,6,12,6,12,5,12,11,12,7,12,8,12,10,12,10,12,9,12,11,12,11,12,10,12,10,12,6,12,6,12,6,12,6,12,6,12,7,12,7,12,8,12,10,12,10,12,9,12,10,12,10,12,10,12,10,12,12,6,12,6,12,6,12,6,12,6,12,7,12,7,12,8,12,10,12,10,12,9~12,6,12,11,12,9,12,9,12,9,12,9,12,4,12,11,12,11,12,11,12,8,12,8,12,8,12,8,12,5,12,12,6,12,9,12,9,12,10,12,9,12,9,12,11,12,11,12,11,12,11,12,8,12,8,12,8,12,8,12,8,12,6,12,9,12,9,12,9,12,9,12,9,12,11,12,11,12,11,12,11,12,12,8,12,8,12,8,12,8,12,8,12,6,12,5,12,9,12,9,12,9,12,9~12,7,12,11,12,9,12,11,12,6,12,6,12,11,12,6,12,6,12,4,12,7,12,11,12,9,12,9,12,5,12,12,9,12,11,12,8,12,10,12,5,12,5,12,6,12,11,12,8,12,6,12,9,12,9,12,9,12,9,12,9,12,9,12,3,12,8,12,5,12,6,12,6,12,6,12,6,12,6,12,6,12,12,9,12,9,12,9,12,9,12,9,12,5,12,5,12,8,12,5,12,5,12~12,7,12,9,12,5,12,10,12,10,12,10,12,4,12,6,12,6,12,4,12,6,12,6,12,6,12,6,12,6,12,12,9,12,9,12,9,12,8,12,10,12,10,12,5,12,11,12,6,12,6,12,6,12,6,12,6,12,6,12,6,12,9,12,9,12,9,12,10,12,10,12,10,12,5,12,6,12,6,12,5,12,12,6,12,6,12,6,12,6,12,6,12,5,12,9,12,9,12,10,12~12,7,12,5,12,9,12,10,12,4,12,10,12,5,12,5,12,5,12,5,12,5,12,4,12,6,12,6,12,6,12,12,11,12,8,12,9,12,10,12,8,12,10,12,5,12,11,12,5,12,5,12,6,12,6,12,6,12,6,12,6,12,7,12,8,12,9,12,10,12,8,12,10,12,5,12,5,12,5,12,5,12,12,6,12,6,12,6,12,6,12,6,12,3,12,8,12,9,12,10,12,8&as_paytable_m=c~p;c~p;c~p;c~p;c~p;c~p;c~p";
            }
        }
	
	
        #endregion
        public MagicJourneyGameLogic()
        {
            _gameID = GAMEID.MagicJourney;
            GameName = "MagicJourney";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["reel_set"] = "0";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
        }
	
    }
}
