using Akka.Actor;
using GITProtocol;
using PCGSharp;
using SlotGamesNode.Database;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class StreetRacerBetInfo : BasePPSlotBetInfo
    {
        public override float TotalBet
        {
            get { return this.BetPerLine * 20.0f; }
        }
    }
    class StreetRacerGameLogic : BaseSelFreePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs40streetracer";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return false;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 40; }
        }
        protected override int ServerResLineCount
        {
            get { return 20; }
        }
        protected override int ROWS
        {
            get
            {
                return 4;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=8,9,10,11,12,13,14,15,16,15,14,13,12,13,10,9,8,10,11,12&reel_set25=14,14,7,7,16,7,7,15,15,7,14,7,7,13,13,7,7,7,7,15,15,7,7,14,14,7,7,15,15,7,7,16,16,15,15,7,16,16,7,7,13,13,7,7,16,16,7,7,13,7,7,13,13,14,7,7,7~7,7,14,14,7,7,16,16,15,7,7,7,16,16,7,7,15,15,13,13,7,2,7,7,15,15,14,16,16,15,15,2,7,7,15,15,7,7,2,13,7,7,16,16,7,7,7,7,7,14,14,7,7,2,14,16,7,7,13,13,7,7,13,13~16,16,7,7,16,15,7,7,7,7,16,16,7,7,2,7,7,15,15,7,7,13,13,7,7,15,15,7,14,14,7,13,13,7,7,14,14,7,13,7,7,14,7,7,13,13,14,14,7,7,7,14,14,16,16,2,15,15,2,16,16,13,13,2,7,7~2,7,7,14,14,7,7,16,16,7,7,14,14,7,7,13,13,7,7,14,7,7,13,2,7,7,14,14,7,7,2,13,13,16,16,15,15,2,16,7,7,15,15,14,14,7,7,7,15,7,7,7,7,16,16,15,15,13,13,7,15,15,16,16,7,7~16,16,7,7,15,7,13,13,7,7,7,7,15,15,7,7,15,15,7,7,16,16,7,7,13,13,7,7,16,16,13,13,7,7,7,14,7,7,15,15,16,7,7,13,13,7,7,14,14,7,14,14,15,15,16,16,7,7,14,14,7,7&cfgs=3167&ver=2&reel_set_size=26&def_sb=8,9,10,11,12&def_sa=8,9,10,11,12&prg_cfg_m=s,tp&scatters=1~0,0,0,0,0,0~0,0,0,0,0,0~1,1,1,1,1,1;17~0,0,0,0,0,0~0,0,0,0,0,0~1,1,1,1,1,1&gmb=0,0,0&rt=d&reel_set10=16,14,14,4,4,4,14,14,4,4,13,13,4,4,15,15,4,4,14,4,4,14,4,4,15,15,4,4,16,16,4,4,15,15,13,13,16,16,14,14,4,15,15,4,4,13,13,4,4,16,16,4,4,15,15,13~2,4,4,16,16,4,15,15,4,4,4,14,4,4,13,13,4,4,15,4,4,13,16,16,4,4,13,13,2,15,15,4,4,15,15,16,16,15,15,16,16,14,14,4,4,14,14,4,4,16,4,4,4,4,4,2,4,4,13,13,4,4~16,16,4,4,13,13,4,4,2,4,13,13,4,4,2,4,4,15,15,4,16,16,4,4,4,14,14,4,4,4,4,2,16,15,15,13,13,16,16,13,4,4,14,14,2,4,4,14,4,4,16,16,15,4,4,14,14,15,15,4,4~2,4,4,14,4,4,13,13,4,4,16,16,4,4,4,14,14,4,4,15,15,4,4,2,4,4,14,14,13,13,14,14,4,4,13,13,16,16,15,15,13,15,15,4,2,15,15,4,4,2,4,4,14,14,16,16,4,4,16,15,4,4,4,4,16,16~4,4,16,16,4,16,16,4,4,14,14,4,4,16,16,4,4,13,13,4,4,4,4,15,15,16,16,4,13,13,4,4,14,14,4,4,15,15,4,4,13,13,15,15,4,4,4,14,13,13,15,4,4,16,4,4,14,14&prg_cfg=17,3&sc=10.00,20.00,30.00,40.00,50.00,100.00,150.00,200.00,250.00,375.00,500.00,750.00,1250.00,2500.00,3750.00,5000.00&defc=50.00&reel_set11=15,15,17,12,12,5,5,8,8,12,5,14,14,16,16,14,12,12,9,9,13,13,11,11,9,12,12,16,16,8,8,14,5,5,16,16,13,13,15,15,13,13,8,13,13,14,14,12,12,15,15,9,9,16,16,15,15,17,14,14,17,11,11~12,12,14,5,5,8,8,13,15,15,5,5,11,11,14,14,9,9,16,16,5,5,16,16,9,9,14,14,16,16,2,8,15,15,2,16,16,12,12,15,16,11,11,13,13,12,11,11,8,8,5,13,13,2,12,12,15,15,9,13,13~13,13,16,16,13,13,5,15,15,17,15,15,12,12,11,11,15,15,2,14,14,5,5,14,14,16,11,11,17,11,11,15,15,16,16,9,13,16,16,14,8,2,8,15,2,13,13,16,16,14,14,12,12,2,5,5,12,12,8,8,9,9~8,8,9,9,15,15,13,13,9,2,16,15,14,14,13,13,15,15,11,11,16,16,14,11,11,2,13,9,9,16,16,5,5,2,14,14,16,16,5,5,12,12,2,11,11,8,8,5,15,15,13,13,5,5,14,14,12,12,15,15,16,16~11,11,13,13,14,14,5,5,11,11,5,5,16,16,15,15,5,16,16,15,15,9,9,16,16,12,9,11,11,17,8,8,13,13,12,12,13,13,11,11,13,13,9,9,5,5,14,14,12,12,14,14,12,12,8,15,15,16,16,17,5,5&reel_set12=15,15,17,5,5,5,5,8,8,5,5,14,14,16,16,14,5,5,9,9,13,13,11,11,9,5,5,16,16,8,8,14,5,5,16,16,13,13,15,15,13,13,8,13,13,14,14,5,5,15,15,9,9,16,16,15,15,17,14,14,17,11,11~5,5,14,5,5,8,8,13,15,15,5,5,11,11,14,14,9,9,16,16,5,5,16,16,9,9,14,14,16,16,2,8,15,15,2,16,16,5,5,15,16,11,11,13,13,5,11,11,8,8,5,13,13,2,5,5,15,15,9,13,13~13,13,16,16,13,13,5,15,15,17,15,15,5,5,11,11,15,15,2,14,14,5,5,14,14,16,11,11,17,11,11,15,15,16,16,9,13,16,16,14,8,2,8,15,2,13,13,16,16,14,14,5,5,2,5,5,5,5,8,8,9,9~8,8,9,9,15,15,13,13,9,2,16,15,14,14,13,13,15,15,11,11,16,16,14,11,11,2,13,9,9,16,16,5,5,2,14,14,16,16,5,5,5,5,2,11,11,8,8,5,15,15,13,13,5,5,14,14,5,5,15,15,16,16~11,11,13,13,14,14,5,5,11,11,5,5,16,16,15,15,5,16,16,15,15,9,9,16,16,5,9,11,11,17,8,8,13,13,5,5,13,13,11,11,13,13,9,9,5,5,14,14,5,5,14,14,5,5,8,15,15,16,16,17,5,5&reel_set13=15,15,17,5,5,5,5,8,8,5,5,14,14,16,16,14,5,5,9,9,13,13,5,5,9,5,5,16,16,8,8,14,5,5,16,16,13,13,15,15,13,13,8,13,13,14,14,5,5,15,15,9,9,16,16,15,15,17,14,14,17,5,5~5,5,14,5,5,8,8,13,15,15,5,5,5,5,14,14,9,9,16,16,5,5,16,16,9,9,14,14,16,16,2,8,15,15,2,16,16,5,5,15,16,5,5,13,13,5,5,5,8,8,5,13,13,2,5,5,15,15,9,13,13~13,13,16,16,13,13,5,15,15,17,15,15,5,5,5,5,15,15,2,14,14,5,5,14,14,16,5,5,17,5,5,15,15,16,16,9,13,16,16,14,8,2,8,15,2,13,13,16,16,14,14,5,5,2,5,5,5,5,8,8,9,9~8,8,9,9,15,15,13,13,9,2,16,15,14,14,13,13,15,15,5,5,16,16,14,5,5,2,13,9,9,16,16,5,5,2,14,14,16,16,5,5,5,5,2,5,5,8,8,5,15,15,13,13,5,5,14,14,5,5,15,15,16,16~5,5,13,13,14,14,5,5,5,5,5,5,16,16,15,15,5,16,16,15,15,9,9,16,16,5,9,5,5,17,8,8,13,13,5,5,13,13,5,5,13,13,9,9,5,5,14,14,5,5,14,14,5,5,8,15,15,16,16,17,5,5&wilds=2~0,0,0,0,0,0~1,1,1,1,1,1&bonuses=0&fsbonus=&reel_set18=13,13,14,15,15,6,6,16,16,15,15,14,14,6,14,14,16,16,6,6,9,9,17,14,14,8,8,13,13,6,6,13,13,8,8,6,6,16,16,6,6,17,6,15,15,9,14,6,6,16,16,8,9,9,13,13,15,15,6,6~13,13,6,6,6,14,14,9,9,6,6,16,16,9,14,14,13,13,2,15,15,14,2,8,15,6,6,13,13,6,6,16,16,15,15,16,8,8,2,9,9,2,13,13,15,15,13,6,8,8,6,6,6,6,16,16,6,6,6,6~14,14,16,16,6,6,15,15,2,9,6,6,6,2,6,6,8,8,15,15,14,14,13,13,15,15,2,9,9,16,16,8,6,6,14,6,6,17,15,15,14,14,15,16,16,13,13,6,6,13,6,6,13,13,16,9,2,17,14,14,6,6,16,16~16,16,15,15,6,16,16,2,13,2,8,8,14,14,2,15,15,13,13,6,6,2,9,6,6,13,13,16,8,6,6,13,13,14,14,16,16,6,6,15,15,14,14,6,6,9,9,6,6,14,14,8,8,9,9,6,6,6,6,15,16,16,6,6,15,15,14~9,8,8,6,6,16,16,13,13,15,15,16,16,13,13,9,9,6,6,16,16,6,6,14,14,6,6,8,6,6,6,15,15,6,6,15,15,6,6,16,16,8,8,9,9,14,14,6,6,17,6,6,6,6,13,13,17,14,14&reel_set19=13,13,14,15,15,6,6,16,16,15,15,14,14,6,14,14,16,16,6,6,6,6,17,14,14,8,8,13,13,6,6,13,13,8,8,6,6,16,16,6,6,17,6,15,15,6,14,6,6,16,16,8,6,6,13,13,15,15,6,6~13,13,6,6,6,14,14,6,6,6,6,16,16,6,14,14,13,13,2,15,15,14,2,8,15,6,6,13,13,6,6,16,16,15,15,16,8,8,2,6,6,2,13,13,15,15,13,6,8,8,6,6,6,6,16,16,6,6,6,6~14,14,16,16,6,6,15,15,2,6,6,6,6,2,6,6,8,8,15,15,14,14,13,13,15,15,2,6,6,16,16,8,6,6,14,6,6,17,15,15,14,14,15,16,16,13,13,6,6,13,6,6,13,13,16,6,2,17,14,14,6,6,16,16~16,16,15,15,6,16,16,2,13,2,8,8,14,14,2,15,15,13,13,6,6,2,6,6,6,13,13,16,8,6,6,13,13,14,14,16,16,6,6,15,15,14,14,6,6,6,6,6,6,14,14,8,8,6,6,6,6,6,6,15,16,16,6,6,15,15,14~6,8,8,6,6,16,16,13,13,15,15,16,16,13,13,6,6,6,6,16,16,6,6,14,14,6,6,8,6,6,6,15,15,6,6,15,15,6,6,16,16,8,8,6,6,14,14,6,6,17,6,6,6,6,13,13,17,14,14&reel_set14=15,15,17,5,5,5,5,8,8,5,5,14,14,16,16,14,5,5,5,5,13,13,5,5,5,5,5,16,16,8,8,14,5,5,16,16,13,13,15,15,13,13,8,13,13,14,14,5,5,15,15,5,5,16,16,15,15,17,14,14,17,5,5~5,5,14,5,5,8,8,13,15,15,5,5,5,5,14,14,5,5,16,16,5,5,16,16,5,5,14,14,16,16,2,8,15,15,2,16,16,5,5,15,16,5,5,13,13,5,5,5,8,8,5,13,13,2,5,5,15,15,5,13,13~13,13,16,16,13,13,5,15,15,17,15,15,5,5,5,5,15,15,2,14,14,5,5,14,14,16,5,5,17,5,5,15,15,16,16,5,13,16,16,14,8,2,8,15,2,13,13,16,16,14,14,5,5,2,5,5,5,5,8,8,5,5~8,8,5,5,15,15,13,13,5,2,16,15,14,14,13,13,15,15,5,5,16,16,14,5,5,2,13,5,5,16,16,5,5,2,14,14,16,16,5,5,5,5,2,5,5,8,8,5,15,15,13,13,5,5,14,14,5,5,15,15,16,16~5,5,13,13,14,14,5,5,5,5,5,5,16,16,15,15,5,16,16,15,15,5,5,16,16,5,5,5,5,17,8,8,13,13,5,5,13,13,5,5,13,13,5,5,5,5,14,14,5,5,14,14,5,5,8,15,15,16,16,17,5,5&paytable=0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;1000,250,125,0,0;750,175,75,0,0;500,125,60,0,0;375,100,50,0,0;250,75,35,0,0;200,50,25,0,0;150,35,15,0,0;100,25,12,0,0;75,20,10,0,0;50,15,7,0,0;25,10,5,0,0;25,10,5,0,0;12,5,3,0,0;12,5,3,0,0;0,0,0,0,0&reel_set15=15,15,5,5,15,15,14,14,5,5,15,15,5,5,16,16,5,5,16,5,5,13,13,5,5,5,14,14,5,5,13,13,5,5,16,16,5,5,15,15,13,13,14,15,15,14,16,16,5,5,13,16,16,5,13,13,5,5~15,15,5,5,15,15,5,5,16,16,5,5,15,15,5,5,13,13,5,5,16,5,5,5,5,5,14,14,2,13,5,5,13,13,5,5,2,5,5,14,16,16,5,5,5,15,15,5,14,14,2,15,16,16,5,5,16,16,13,13,2,5,5~15,15,5,5,14,5,5,16,16,14,14,15,15,5,5,13,13,5,15,15,5,5,2,5,14,14,5,5,13,13,2,5,5,5,16,16,2,13,13,5,5,5,5,14,14,16,5,5,14,14,2,15,15,5,5,13,5,5,16,16,5,16,16,15,5,5~5,5,2,5,13,13,5,5,16,5,5,2,5,5,14,5,5,5,5,2,5,5,14,14,15,5,5,5,13,5,5,14,14,5,5,13,13,16,16,5,5,15,15,14,14,5,5,14,14,13,13,5,5,16,16,15,15,16,16,15,15~5,5,13,13,5,5,15,15,5,5,16,16,5,5,16,16,5,5,13,13,5,15,15,5,5,16,16,5,5,15,5,16,5,5,5,5,14,14,13,13,5,5,5,13,13,5,5,15,15,16,16,5,5,14,15,15,14,14,5,5,14,14&reel_set16=13,13,14,15,15,12,12,16,16,15,15,14,14,10,14,14,16,16,10,10,9,9,17,14,14,8,8,13,13,10,10,13,13,8,8,12,12,16,16,6,6,17,12,15,15,9,14,12,12,16,16,8,9,9,13,13,15,15,6,6~13,13,10,6,6,14,14,9,9,10,10,16,16,9,14,14,13,13,2,15,15,14,2,8,15,6,6,13,13,12,12,16,16,15,15,16,8,8,2,9,9,2,13,13,15,15,13,12,8,8,12,12,6,6,16,16,10,10,12,12~14,14,16,16,12,12,15,15,2,9,10,6,6,2,12,12,8,8,15,15,14,14,13,13,15,15,2,9,9,16,16,8,10,10,14,12,12,17,15,15,14,14,15,16,16,13,13,6,6,13,6,6,13,13,16,9,2,17,14,14,10,10,16,16~16,16,15,15,10,16,16,2,13,2,8,8,14,14,2,15,15,13,13,10,10,2,9,12,12,13,13,16,8,12,12,13,13,14,14,16,16,6,6,15,15,14,14,12,12,9,9,10,10,14,14,8,8,9,9,10,10,6,6,15,16,16,6,6,15,15,14~9,8,8,12,12,16,16,13,13,15,15,16,16,13,13,9,9,6,6,16,16,10,10,14,14,6,6,8,6,6,10,15,15,12,12,15,15,10,10,16,16,8,8,9,9,14,14,10,10,17,10,10,12,12,13,13,17,14,14&reel_set17=13,13,14,15,15,6,6,16,16,15,15,14,14,10,14,14,16,16,10,10,9,9,17,14,14,8,8,13,13,10,10,13,13,8,8,6,6,16,16,6,6,17,6,15,15,9,14,6,6,16,16,8,9,9,13,13,15,15,6,6~13,13,10,6,6,14,14,9,9,10,10,16,16,9,14,14,13,13,2,15,15,14,2,8,15,6,6,13,13,6,6,16,16,15,15,16,8,8,2,9,9,2,13,13,15,15,13,6,8,8,6,6,6,6,16,16,10,10,6,6~14,14,16,16,6,6,15,15,2,9,10,6,6,2,6,6,8,8,15,15,14,14,13,13,15,15,2,9,9,16,16,8,10,10,14,6,6,17,15,15,14,14,15,16,16,13,13,6,6,13,6,6,13,13,16,9,2,17,14,14,10,10,16,16~16,16,15,15,10,16,16,2,13,2,8,8,14,14,2,15,15,13,13,10,10,2,9,6,6,13,13,16,8,6,6,13,13,14,14,16,16,6,6,15,15,14,14,6,6,9,9,10,10,14,14,8,8,9,9,10,10,6,6,15,16,16,6,6,15,15,14~9,8,8,6,6,16,16,13,13,15,15,16,16,13,13,9,9,6,6,16,16,10,10,14,14,6,6,8,6,6,10,15,15,6,6,15,15,10,10,16,16,8,8,9,9,14,14,10,10,17,10,10,6,6,13,13,17,14,14&reel_set21=9,9,7,7,11,11,13,13,15,15,16,16,8,8,10,10,7,7,10,10,14,14,7,10,14,14,9,8,9,9,10,10,17,11,11,15,15,16,16,7,7,15,15,13,13,15,15,14,16,16,8,8,17,13,13,11,11,16,16~10,10,16,2,16,16,14,14,7,7,13,13,15,15,13,13,2,15,15,13,8,8,7,7,16,16,8,15,15,11,11,9,7,7,16,16,9,9,15,10,10,11,11,10,11,11,14,13,13,2,14,14,9,9,8,8,2,7,16,16~16,16,7,7,15,15,10,10,16,16,13,13,14,2,16,16,7,7,14,14,10,10,13,13,9,11,11,16,16,2,9,15,15,14,14,15,13,13,15,15,7,7,11,11,10,8,13,13,17,8,2,8,8,17,16,8,8,9,9,2,14,14,13,7,7~9,9,10,7,7,8,15,15,11,11,7,7,14,14,8,8,16,16,11,11,14,14,2,13,13,11,11,2,13,10,10,9,9,2,14,14,13,13,16,16,15,15,11,11,10,10,15,15,7,7,9,2,16,16,14,10,10,14,14,16,16,13,13~8,8,17,15,15,13,14,14,8,8,13,13,10,10,13,13,14,14,7,7,16,16,7,7,13,13,10,10,16,9,9,11,11,10,10,15,15,14,14,11,11,17,7,7,8,9,16,16,14,16,16,10,13,13,16,16,14,14,9,9,11,11,15&reel_set22=9,9,7,7,7,7,13,13,15,15,16,16,8,8,10,10,7,7,10,10,14,14,7,10,14,14,9,8,9,9,10,10,17,7,7,15,15,16,16,7,7,15,15,13,13,15,15,14,16,16,8,8,17,13,13,7,7,16,16~10,10,16,2,16,16,14,14,7,7,13,13,15,15,13,13,2,15,15,13,8,8,7,7,16,16,8,15,15,7,7,9,7,7,16,16,9,9,15,10,10,7,7,10,7,7,14,13,13,2,14,14,9,9,8,8,2,7,16,16~16,16,7,7,15,15,10,10,16,16,13,13,14,2,16,16,7,7,14,14,10,10,13,13,9,7,7,16,16,2,9,15,15,14,14,15,13,13,15,15,7,7,7,7,10,8,13,13,17,8,2,8,8,17,16,8,8,9,9,2,14,14,13,7,7~9,9,10,7,7,8,15,15,7,7,7,7,14,14,8,8,16,16,7,7,14,14,2,13,13,7,7,2,13,10,10,9,9,2,14,14,13,13,16,16,15,15,7,7,10,10,15,15,7,7,9,2,16,16,14,10,10,14,14,16,16,13,13~8,8,17,15,15,13,14,14,8,8,13,13,10,10,13,13,14,14,7,7,16,16,7,7,13,13,10,10,16,9,9,7,7,10,10,15,15,14,14,7,7,17,7,7,8,9,16,16,14,16,16,10,13,13,16,16,14,14,9,9,7,7,15&reel_set0=15,15,16,16,14,14,15,15,16,16,15,15,8,8,10,10,1,13,13,11,11,12,12,16,16,12,12,1,9,9,10,10~2,12,12,11,11,2,11,11,10,10,15,15,13,13,15,15,16,16,2,8,8,16,16,13,13,2,12,12,13,13,9,9,14,14~11,11,13,13,2,15,15,13,13,8,8,16,16,9,9,2,12,12,15,15,10,10,12,12,14,14,1,16,16,14,14,1~11,11,14,14,15,15,14,14,16,16,15,15,8,8,8,12,12,11,11,16,16,15,15,2,2,13,13,10,10,13,13,14,14,9,9,15,15,13,13,8,8,2,9,9,10,10,14,14,12,12,2,10,10,13,13,12,12,11,11,16,16~13,16,16,12,12,14,14,11,11,14,14,1,9,9,14,14,10,10,14,14,1,10,10,15,15,8,8,12,12,16,16,13,13,9,9,15,15,13,13,1,15,15,10,10,16,16,12,12,9,9,13,13,11,11,8,8,11,11&reel_set23=9,9,7,7,7,7,13,13,15,15,16,16,8,8,7,7,7,7,7,7,14,14,7,7,14,14,9,8,9,9,7,7,17,7,7,15,15,16,16,7,7,15,15,13,13,15,15,14,16,16,8,8,17,13,13,7,7,16,16~7,7,16,2,16,16,14,14,7,7,13,13,15,15,13,13,2,15,15,13,8,8,7,7,16,16,8,15,15,7,7,9,7,7,16,16,9,9,15,7,7,7,7,7,7,7,14,13,13,2,14,14,9,9,8,8,2,7,16,16~16,16,7,7,15,15,7,7,16,16,13,13,14,2,16,16,7,7,14,14,7,7,13,13,9,7,7,16,16,2,9,15,15,14,14,15,13,13,15,15,7,7,7,7,7,8,13,13,17,8,2,8,8,17,16,8,8,9,9,2,14,14,13,7,7~9,9,7,7,7,8,15,15,7,7,7,7,14,14,8,8,16,16,7,7,14,14,2,13,13,7,7,2,13,7,7,9,9,2,14,14,13,13,16,16,15,15,7,7,7,7,15,15,7,7,9,2,16,16,14,7,7,14,14,16,16,13,13~8,8,17,15,15,13,14,14,8,8,13,13,7,7,13,13,14,14,7,7,16,16,7,7,13,13,7,7,16,9,9,7,7,7,7,15,15,14,14,7,7,17,7,7,8,9,16,16,14,16,16,7,13,13,16,16,14,14,9,9,7,7,15&reel_set24=7,7,7,7,7,7,13,13,15,15,16,16,8,8,7,7,7,7,7,7,14,14,7,7,14,14,7,8,7,7,7,7,17,7,7,15,15,16,16,7,7,15,15,13,13,15,15,14,16,16,8,8,17,13,13,7,7,16,16~7,7,16,2,16,16,14,14,7,7,13,13,15,15,13,13,2,15,15,13,8,8,7,7,16,16,8,15,15,7,7,7,7,7,16,16,7,7,15,7,7,7,7,7,7,7,14,13,13,2,14,14,7,7,8,8,2,7,16,16~16,16,7,7,15,15,7,7,16,16,13,13,14,2,16,16,7,7,14,14,7,7,13,13,7,7,7,16,16,2,7,15,15,14,14,15,13,13,15,15,7,7,7,7,7,8,13,13,17,8,2,8,8,17,16,8,8,7,7,2,14,14,13,7,7~7,7,7,7,7,8,15,15,7,7,7,7,14,14,8,8,16,16,7,7,14,14,2,13,13,7,7,2,13,7,7,7,7,2,14,14,13,13,16,16,15,15,7,7,7,7,15,15,7,7,7,2,16,16,14,7,7,14,14,16,16,13,13~8,8,17,15,15,13,14,14,8,8,13,13,7,7,13,13,14,14,7,7,16,16,7,7,13,13,7,7,16,7,7,7,7,7,7,15,15,14,14,7,7,17,7,7,8,7,16,16,14,16,16,7,13,13,16,16,14,14,7,7,7,7,15&reel_set2=10,10,3,3,13,13,16,16,13,13,15,15,3,3,9,10,17,9,9,16,16,3,3,16,16,15,15,16,14,14,13,13,10,10,17,11,11,3,3,11,11,3,15,15,3,3,9,9,15,15,17,13,13,11,11,14,16,16,14,14,3~2,11,11,3,3,15,15,10,10,15,15,16,16,13,3,14,14,10,10,11,11,14,14,15,3,3,3,3,10,16,3,9,9,16,16,13,13,9,16,16,3,3,9,9,2,3,3,14,2,10,10,13,13,15,15,11,11,13,13,2,14,14~14,2,10,16,16,13,14,14,2,9,9,17,15,15,11,11,15,15,14,14,16,16,2,15,15,11,11,10,10,3,3,13,13,14,14,13,13,14,14,3,3,13,13,9,9,16,16,15,3,3,2,3,3,17,3,9,16,11,11,15,15~2,13,10,10,14,14,3,3,11,11,2,3,3,9,9,15,3,3,13,13,9,13,13,14,14,11,11,15,15,16,16,13,13,14,14,16,16,3,16,16,9,9,15,15,14,14,3,3,11,11,2,14,16,15,15,3,3,10,10,2,10~10,10,15,15,16,16,11,11,13,13,9,14,14,9,9,10,10,14,14,10,3,3,17,16,9,9,15,15,13,13,11,11,15,15,13,13,16,16,3,17,16,16,14,14,10,10,3,3,3,3,3,3,16,16,14,14,13,13,11,11&reel_set1=10,10,3,3,13,13,16,16,13,13,15,15,12,12,9,10,17,9,9,16,16,12,12,16,16,15,15,16,14,14,13,13,10,10,17,11,11,3,3,11,11,12,15,15,12,12,9,9,15,15,17,13,13,11,11,14,16,16,14,14,3~2,11,11,12,12,15,15,10,10,15,15,16,16,13,3,14,14,10,10,11,11,14,14,15,12,12,3,3,10,16,12,9,9,16,16,13,13,9,16,16,3,3,9,9,2,12,12,14,2,10,10,13,13,15,15,11,11,13,13,2,14,14~14,2,10,16,16,13,14,14,2,9,9,17,15,15,11,11,15,15,14,14,16,16,2,15,15,11,11,10,10,12,12,13,13,14,14,13,13,14,14,12,12,13,13,9,9,16,16,15,12,12,2,3,3,17,3,9,16,11,11,15,15~2,13,10,10,14,14,3,3,11,11,2,12,12,9,9,15,12,12,13,13,9,13,13,14,14,11,11,15,15,16,16,13,13,14,14,16,16,3,16,16,9,9,15,15,14,14,3,3,11,11,2,14,16,15,15,12,12,10,10,2,10~10,10,15,15,16,16,11,11,13,13,9,14,14,9,9,10,10,14,14,10,12,12,17,16,9,9,15,15,13,13,11,11,15,15,13,13,16,16,3,17,16,16,14,14,10,10,12,12,3,3,12,12,16,16,14,14,13,13,11,11&reel_set4=3,3,3,3,13,13,16,16,13,13,15,15,3,3,9,3,17,9,9,16,16,3,3,16,16,15,15,16,14,14,13,13,3,3,17,3,3,3,3,3,3,3,15,15,3,3,9,9,15,15,17,13,13,3,3,14,16,16,14,14,3~2,3,3,3,3,15,15,3,3,15,15,16,16,13,3,14,14,3,3,3,3,14,14,15,3,3,3,3,3,16,3,9,9,16,16,13,13,9,16,16,3,3,9,9,2,3,3,14,2,3,3,13,13,15,15,3,3,13,13,2,14,14~14,2,3,16,16,13,14,14,2,9,9,17,15,15,3,3,15,15,14,14,16,16,2,15,15,3,3,3,3,3,3,13,13,14,14,13,13,14,14,3,3,13,13,9,9,16,16,15,3,3,2,3,3,17,3,9,16,3,3,15,15~2,13,3,3,14,14,3,3,3,3,2,3,3,9,9,15,3,3,13,13,9,13,13,14,14,3,3,15,15,16,16,13,13,14,14,16,16,3,16,16,9,9,15,15,14,14,3,3,3,3,2,14,16,15,15,3,3,3,3,2,3~3,3,15,15,16,16,3,3,13,13,9,14,14,9,9,3,3,14,14,3,3,3,17,16,9,9,15,15,13,13,3,3,15,15,13,13,16,16,3,17,16,16,14,14,3,3,3,3,3,3,3,3,16,16,14,14,13,13,3,3&reel_set3=10,10,3,3,13,13,16,16,13,13,15,15,3,3,9,10,17,9,9,16,16,3,3,16,16,15,15,16,14,14,13,13,10,10,17,3,3,3,3,3,3,3,15,15,3,3,9,9,15,15,17,13,13,3,3,14,16,16,14,14,3~2,3,3,3,3,15,15,10,10,15,15,16,16,13,3,14,14,10,10,3,3,14,14,15,3,3,3,3,10,16,3,9,9,16,16,13,13,9,16,16,3,3,9,9,2,3,3,14,2,10,10,13,13,15,15,3,3,13,13,2,14,14~14,2,10,16,16,13,14,14,2,9,9,17,15,15,3,3,15,15,14,14,16,16,2,15,15,3,3,10,10,3,3,13,13,14,14,13,13,14,14,3,3,13,13,9,9,16,16,15,3,3,2,3,3,17,3,9,16,3,3,15,15~2,13,10,10,14,14,3,3,3,3,2,3,3,9,9,15,3,3,13,13,9,13,13,14,14,3,3,15,15,16,16,13,13,14,14,16,16,3,16,16,9,9,15,15,14,14,3,3,3,3,2,14,16,15,15,3,3,10,10,2,10~10,10,15,15,16,16,3,3,13,13,9,14,14,9,9,10,10,14,14,10,3,3,17,16,9,9,15,15,13,13,3,3,15,15,13,13,16,16,3,17,16,16,14,14,10,10,3,3,3,3,3,3,16,16,14,14,13,13,3,3&reel_set20=6,6,6,6,13,13,6,6,6,15,15,6,6,14,6,6,14,14,6,6,16,16,6,6,13,13,6,16,16,6,6,14,14,6,6,13,6,6,15,15,6,6,13,13,6,6,16,16,6,16,6,6,15,15,14,14,15,15~14,14,6,6,6,14,14,6,6,16,16,6,6,13,13,6,6,15,14,14,6,6,13,13,6,6,2,16,16,6,6,15,15,13,13,2,6,2,6,6,14,15,15,16,16,6,6,16,16,6,6,6,6,6,2,15,15,6,6,16,14,6,6,13~2,6,6,13,6,6,6,14,14,6,6,15,15,6,6,14,14,13,13,6,6,6,6,14,6,6,13,13,16,16,15,16,16,13,13,2,16,16,6,6,13,13,6,6,16,16,14,14,2,6,6,14,14,15,15,6,15,15,6,2,6,6,15,15,16,6,6~6,6,6,13,6,6,14,6,6,2,14,14,13,13,16,16,6,6,15,6,6,6,6,15,15,6,6,16,6,6,2,15,15,6,2,15,15,6,6,14,14,6,6,14,14,15,15,16,16,13,13,6,6,16,16,6,6,13,13,6,6,14,14~14,14,16,16,6,6,16,16,6,6,15,6,6,6,14,14,6,6,16,6,6,13,13,6,13,13,6,6,15,15,6,6,16,16,6,6,15,15,13,13,15,15,6,6,6,6,14,14,6,6,14,13,13,14,14,6,6&reel_set6=10,10,14,14,11,11,10,14,14,13,13,12,12,15,15,12,12,8,8,15,15,12,12,17,14,14,10,10,8,13,13,15,15,12,14,15,15,4,16,16,13,13,16,16,13,13,16,16,4,4,17,10,10,16,16,11,11,4,4~10,10,16,14,14,16,16,14,14,10,10,14,16,16,2,8,15,15,13,13,4,12,12,11,11,12,12,14,14,13,13,12,12,8,8,10,10,15,15,8,8,11,11,16,16,4,4,13,13,4,4,10,15,15,16,16,2,11,11,2,12,13~4,2,15,11,11,2,8,15,15,8,8,12,12,15,15,17,8,8,13,4,4,14,14,15,15,12,12,17,16,16,11,11,13,13,4,4,11,11,13,13,10,10,13,13,16,16,12,12,16,16,17,14,14,16,16,2,8,14,14,10,15,15,2,14,12,12~16,13,13,14,14,12,12,15,15,11,11,14,14,11,11,13,13,15,15,4,4,16,16,8,16,16,4,14,2,10,10,16,16,15,15,13,13,10,10,2,13,12,12,14,14,10,15,4,4,8,8,11,11,15,15,10,10,16,16,4,4,2~11,11,15,15,10,10,16,16,13,13,10,10,16,16,13,13,12,12,13,13,16,16,4,15,15,10,10,13,13,12,12,14,14,11,11,14,14,15,15,11,11,10,4,4,16,16,8,8,12,12,17,14,14,8,4,4,10,10,16,17&reel_set5=3,3,15,15,3,13,3,3,16,16,3,3,13,13,3,3,3,3,15,15,3,3,16,16,3,3,14,14,3,3,16,16,3,3,14,14,3,3,15,15,13,13,14,3,3,3,16,16,3,3,13,13,15,15,3,3,14,14,16~3,3,14,14,3,3,13,3,3,2,3,3,15,15,3,3,14,14,15,15,16,16,15,15,3,3,14,3,3,3,3,3,16,16,2,3,3,14,14,16,3,3,15,13,13,3,3,14,3,3,3,2,3,3,13,13,16,16,13,13,2,3,16,16~13,3,3,2,3,3,16,16,3,3,3,3,2,3,14,14,3,3,16,16,3,3,15,15,3,3,15,15,3,3,13,13,3,3,2,14,14,13,13,16,13,13,16,16,14,14,2,3,16,16,3,14,14,3,3,3,15,13,13,3,3,14,15,15,3,3~3,3,16,16,3,3,14,3,3,2,3,3,13,13,3,3,14,14,3,3,2,3,3,14,14,3,16,16,3,3,3,14,14,3,3,3,3,14,14,15,15,16,15,15,16,16,15,15,3,3,2,13,13,3,3,15,13,13,3,3,13,16,16~3,3,16,16,3,3,15,15,3,3,3,3,14,14,3,3,14,3,13,13,3,3,16,16,3,3,13,13,3,3,15,15,3,3,15,15,3,3,15,13,13,16,16,14,14,16,3,3,3,14,14,13,13,3,3,16,16,14,14&reel_set8=10,10,14,14,4,4,10,14,14,13,13,4,4,15,15,4,4,8,8,15,15,4,4,17,14,14,10,10,8,13,13,15,15,4,14,15,15,4,16,16,13,13,16,16,13,13,16,16,4,4,17,10,10,16,16,4,4,4,4~10,10,16,14,14,16,16,14,14,10,10,14,16,16,2,8,15,15,13,13,4,4,4,4,4,4,4,14,14,13,13,4,4,8,8,10,10,15,15,8,8,4,4,16,16,4,4,13,13,4,4,10,15,15,16,16,2,4,4,2,4,13~4,2,15,4,4,2,8,15,15,8,8,4,4,15,15,17,8,8,13,4,4,14,14,15,15,4,4,17,16,16,4,4,13,13,4,4,4,4,13,13,10,10,13,13,16,16,4,4,16,16,17,14,14,16,16,2,8,14,14,10,15,15,2,14,4,4~16,13,13,14,14,4,4,15,15,4,4,14,14,4,4,13,13,15,15,4,4,16,16,8,16,16,4,14,2,10,10,16,16,15,15,13,13,10,10,2,13,4,4,14,14,10,15,4,4,8,8,4,4,15,15,10,10,16,16,4,4,2~4,4,15,15,10,10,16,16,13,13,10,10,16,16,13,13,4,4,13,13,16,16,4,15,15,10,10,13,13,4,4,14,14,4,4,14,14,15,15,4,4,10,4,4,16,16,8,8,4,4,17,14,14,8,4,4,10,10,16,17&reel_set7=10,10,14,14,11,11,10,14,14,13,13,4,4,15,15,4,4,8,8,15,15,4,4,17,14,14,10,10,8,13,13,15,15,4,14,15,15,4,16,16,13,13,16,16,13,13,16,16,4,4,17,10,10,16,16,11,11,4,4~10,10,16,14,14,16,16,14,14,10,10,14,16,16,2,8,15,15,13,13,4,4,4,11,11,4,4,14,14,13,13,4,4,8,8,10,10,15,15,8,8,11,11,16,16,4,4,13,13,4,4,10,15,15,16,16,2,11,11,2,4,13~4,2,15,11,11,2,8,15,15,8,8,4,4,15,15,17,8,8,13,4,4,14,14,15,15,4,4,17,16,16,11,11,13,13,4,4,11,11,13,13,10,10,13,13,16,16,4,4,16,16,17,14,14,16,16,2,8,14,14,10,15,15,2,14,4,4~16,13,13,14,14,4,4,15,15,11,11,14,14,11,11,13,13,15,15,4,4,16,16,8,16,16,4,14,2,10,10,16,16,15,15,13,13,10,10,2,13,4,4,14,14,10,15,4,4,8,8,11,11,15,15,10,10,16,16,4,4,2~11,11,15,15,10,10,16,16,13,13,10,10,16,16,13,13,4,4,13,13,16,16,4,15,15,10,10,13,13,4,4,14,14,11,11,14,14,15,15,11,11,10,4,4,16,16,8,8,4,4,17,14,14,8,4,4,10,10,16,17&reel_set9=4,4,14,14,4,4,4,14,14,13,13,4,4,15,15,4,4,8,8,15,15,4,4,17,14,14,4,4,8,13,13,15,15,4,14,15,15,4,16,16,13,13,16,16,13,13,16,16,4,4,17,4,4,16,16,4,4,4,4~4,4,16,14,14,16,16,14,14,4,4,14,16,16,2,8,15,15,13,13,4,4,4,4,4,4,4,14,14,13,13,4,4,8,8,4,4,15,15,8,8,4,4,16,16,4,4,13,13,4,4,4,15,15,16,16,2,4,4,2,4,13~4,2,15,4,4,2,8,15,15,8,8,4,4,15,15,17,8,8,13,4,4,14,14,15,15,4,4,17,16,16,4,4,13,13,4,4,4,4,13,13,4,4,13,13,16,16,4,4,16,16,17,14,14,16,16,2,8,14,14,4,15,15,2,14,4,4~16,13,13,14,14,4,4,15,15,4,4,14,14,4,4,13,13,15,15,4,4,16,16,8,16,16,4,14,2,4,4,16,16,15,15,13,13,4,4,2,13,4,4,14,14,4,15,4,4,8,8,4,4,15,15,4,4,16,16,4,4,2~4,4,15,15,4,4,16,16,13,13,4,4,16,16,13,13,4,4,13,13,16,16,4,15,15,4,4,13,13,4,4,14,14,4,4,14,14,15,15,4,4,4,4,4,16,16,8,8,4,4,17,14,14,8,4,4,4,4,16,17";
            }
        }
        protected override int FreeSpinTypeCount
        {
            get { return 5; }
        }
        protected override int[] PossibleFreeSpinTypes(int freeSpinGroup)
        {
            return new int[] { 200, 201, 202, 203, 204 };
        }
        #endregion
        public StreetRacerGameLogic()
        {
            _gameID = GAMEID.StreetRacer;
            GameName = "StreetRacer";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["reel_set"] = "0";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
        }
        protected override async Task buildStartFreeSpinData(BasePPSlotStartSpinData startSpinData, StartSpinBuildTypes buildType, double minOdd, double maxOdd)
        {
            if (buildType == StartSpinBuildTypes.IsNaturalRandom)
                await base.buildStartFreeSpinData(startSpinData, StartSpinBuildTypes.IsTotalRandom, minOdd, maxOdd);
            else
                await base.buildStartFreeSpinData(startSpinData, buildType, minOdd, maxOdd);
        }
        protected override Dictionary<string, string> mergeSpinToBonus(Dictionary<string, string> spinParams, Dictionary<string, string> bonusParams)
        {
            Dictionary<string, string> resultParams = new Dictionary<string, string>();
            foreach (KeyValuePair<string, string> pair in bonusParams)
                resultParams.Add(pair.Key, pair.Value);

            string[] toCopyParams = new string[] { "s", "sa", "sb", "fs", "fsmul", "fsmax", "fsres", "fswin", "fs_total", "fsmul_total", "fsres_total", "fswin_total", "reel_set" };
            for (int i = 0; i < toCopyParams.Length; i++)
            {
                if (!spinParams.ContainsKey(toCopyParams[i]))
                    continue;
                resultParams[toCopyParams[i]] = spinParams[toCopyParams[i]];
            }

            if (!resultParams.ContainsKey("g") && spinParams.ContainsKey("g"))
                resultParams["g"] = spinParams["g"];
            return resultParams;
        }
        protected override BasePPSlotBetInfo restoreBetInfo(string strUserID, BinaryReader reader)
        {
            StreetRacerBetInfo betInfo = new StreetRacerBetInfo();
            betInfo.SerializeFrom(reader);
            return betInfo;
        }
        protected override BasePPSlotBetInfo newBetInfo()
        {
            return new StreetRacerBetInfo();
        }
        protected override void readBetInfoFromMessage(GITMessage message, string strGlobalUserID, Currencies currency)
        {
            try
            {
                string strInitString = ChipsetManager.Instance.convertTo(currency, this.InitDataString, this.SymbolName);
                var dicParams = splitResponseToParams(strInitString);

                double minChip = 0.0, maxChip = 0.0;
                getMinMaxChip(dicParams["sc"], ref minChip, ref maxChip);


                StreetRacerBetInfo betInfo = new StreetRacerBetInfo();
                betInfo.BetPerLine = (float)message.Pop();
                betInfo.LineCount = (int)message.Pop();

                if (betInfo.BetPerLine <= 0.0f || float.IsNaN(betInfo.BetPerLine) || float.IsInfinity(betInfo.BetPerLine))
                {
                    _logger.Error("{0} betInfo.BetPerLine <= 0 in StreetRacerGameLogic::readBetInfoFromMessage {1}", strGlobalUserID, betInfo.BetPerLine);
                    return;
                }

                if (!isNotIntergerMultipleBetPerLine(betInfo.BetPerLine, minChip))
                {
                    _logger.Error("{0} betInfo.BetPerLine is illegual: {1} != {2} * integer", strGlobalUserID, betInfo.BetPerLine, minChip);
                    return;
                }

                if (betInfo.LineCount != this.ClientReqLineCount)
                {
                    _logger.Error("{0} betInfo.LineCount is not matched {1} != {2}", strGlobalUserID, betInfo.LineCount, this.ClientReqLineCount);
                    return;
                }
                BasePPSlotBetInfo oldBetInfo = null;
                if (_dicUserBetInfos.TryGetValue(strGlobalUserID, out oldBetInfo))
                {
                    //만일 유저에게 남은 응답이 존재하는 경우
                    if (oldBetInfo.HasRemainResponse)
                        return;

                    oldBetInfo.BetPerLine = betInfo.BetPerLine;
                    oldBetInfo.LineCount = betInfo.LineCount;
                }
                else
                {
                    _dicUserBetInfos.Add(strGlobalUserID, betInfo);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in StreetRacerGameLogic::readBetInfoFromMessage {0}", ex);
            }
        }
        protected override void onDoBonus(int agentID, string strUserID, GITMessage message, double userBalance, Currencies currency, bool isAffiliate)
        {
            try
            {
                int index   = (int)message.Pop();
                int counter = (int)message.Pop();
                int ind     = (int)message.Pop();
                string strGlobalUserID = string.Format("{0}_{1}", agentID, strUserID);

                GITMessage responseMessage = new GITMessage((ushort)SCMSG_CODE.SC_PP_DOBONUS);
                if (!_dicUserResultInfos.ContainsKey(strGlobalUserID) || !_dicUserBetInfos.ContainsKey(strGlobalUserID))
                {
                    responseMessage.Append("unlogged");
                }
                else
                {
                    BasePPSlotBetInfo       betInfo = _dicUserBetInfos[strGlobalUserID];
                    BasePPSlotSpinResult    result  = _dicUserResultInfos[strGlobalUserID];
                    if ((result.NextAction != ActionTypes.DOBONUS) || (betInfo.SpinData == null) || !(betInfo.SpinData is BasePPSlotStartSpinData))
                    {
                        responseMessage.Append("unlogged");
                    }
                    else
                    {
                        BasePPSlotStartSpinData startSpinData = betInfo.SpinData as BasePPSlotStartSpinData;
                        if (ind >= startSpinData.FreeSpins.Count)
                        {
                            responseMessage.Append("unlogged");
                        }
                        else
                        {
                            BasePPSlotSpinData freeSpinData = convertBsonToSpinData(startSpinData.FreeSpins[ind]);
                            preprocessSelectedFreeSpin(freeSpinData, betInfo);

                            betInfo.SpinData = freeSpinData;
                            List<string> freeSpinStrings = new List<string>();
                            for (int i = 0; i < freeSpinData.SpinStrings.Count; i++)
                                freeSpinStrings.Add(addStartWinToResponse(freeSpinData.SpinStrings[i], startSpinData.StartOdd));

                            string strSpinResponse = freeSpinStrings[0];
                            if (freeSpinStrings.Count > 1)
                                betInfo.RemainReponses = buildResponseList(freeSpinStrings);

                            double selectedWin = (startSpinData.StartOdd + freeSpinData.SpinOdd) * betInfo.TotalBet;
                            double maxWin = startSpinData.MaxOdd * betInfo.TotalBet;

                            //시작스핀시에 최대의 오드에 해당한 윈값을 더해주었으므로 그 차분을 보상해준다.
                            if (!startSpinData.IsEvent && !isAffiliate)
                                sumUpWebsiteBetWin(agentID, 0.0, selectedWin - maxWin);
                            else if (maxWin > selectedWin)
                                addEventLeftMoney(agentID, strUserID, maxWin - selectedWin);
                            Dictionary<string, string> dicParams = splitResponseToParams(strSpinResponse);
                            convertWinsByBet(dicParams, betInfo.TotalBet);
                            convertBetsByBet(dicParams, betInfo.BetPerLine, betInfo.TotalBet);
                            if (SupportMoreBet)
                            {
                                if (betInfo.MoreBet)
                                    dicParams["bl"] = "1";
                                else
                                    dicParams["bl"] = "0";
                            }
                            result.BonusResultString = convertKeyValuesToString(dicParams);
                            addDefaultParams(dicParams, userBalance, index, counter);
                            ActionTypes nextAction = convertStringToActionType(dicParams["na"]);
                            string strResponse = convertKeyValuesToString(dicParams);

                            responseMessage.Append(strResponse);

                            //히스토리보관 및 초기화
                            if (_dicUserHistory.ContainsKey(strGlobalUserID) && _dicUserHistory[strGlobalUserID].log.Count > 0)
                                addDoBonusActionHistory(strGlobalUserID, ind, strResponse, index, counter);

                            result.NextAction = nextAction;
                        }
                        if (!betInfo.HasRemainResponse)
                            betInfo.RemainReponses = null;

                        saveBetResultInfo(strGlobalUserID);
                    }
                }
                Sender.Tell(new ToUserMessage((int)_gameID, responseMessage), Self);
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in StreetRacerGameLogic::onDoBonus {0}", ex);
            }
        }
    }
}
