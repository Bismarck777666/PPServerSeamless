using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class ExtraJuicyGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs10fruity2";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return false;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 10; }
        }
        protected override int ServerResLineCount
        {
            get { return 10; }
        }
        protected override int ROWS
        {
            get
            {
                return 3;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "cfgs=2301&ver=2&reel_set_size=13&prg_cfg_m=wm&scatters=1~2,2,2,0,0~12,12,12,0,0~1,1,1,1,1&gmb=0,0,0&rt=d&reel_set10=9,8,8,8,6,5,5,5,9,3,3,3,7,7,7,5,4,4,4,4,8,7,9,8,7,8,5,1,6,6,6,5,8,4,9,9,9,3,8~7,8,4,4,4,8,8,8,9,3,3,3,5,6,7,8,8,9,9,9,3,4,4,7,7,7,6,6,6,5,5,5,6,8~5,9,6,8,5,5,5,3,3,3,7,7,7,1,6,6,6,7,9,8,8,8,3,3,9,4,4,4,4,8,9,9,9,5,7,7~9,7,3,3,3,3,9,9,9,6,6,6,9,5,5,5,8,8,8,3,7,7,7,8,4,4,4,7,5,6,4,5,8,9~8,8,8,1,6,6,6,3,3,3,9,9,9,5,5,5,9,6,7,7,7,4,9,8,4,4,4,3,7,5,8,5,9,1,7&prg_cfg=0&sc=20.00,40.00,60.00,80.00,100.00,200.00,300.00,400.00,500.00,750.00,1000.00,1500.00,2500.00,5000.00,7500.00,10000.00&defc=100.00&reel_set11=9,8,8,8,6,5,5,5,9,3,3,3,7,7,7,5,4,4,4,4,8,7,9,8,7,8,5,1,6,6,6,5,8,4,9,9,9,3,8~7,8,4,4,4,8,8,8,9,3,3,3,5,6,7,8,8,9,9,9,3,4,4,7,7,7,6,6,6,5,5,5,6,8~5,9,6,8,5,5,5,3,3,3,7,7,7,1,6,6,6,7,9,8,8,8,3,3,9,4,4,4,4,8,9,9,9,5,7,7~9,7,3,3,3,3,9,9,9,6,6,6,9,5,5,5,8,8,8,3,7,7,7,8,4,4,4,7,5,6,4,5,8,9~8,8,8,1,6,6,6,3,3,3,9,9,9,5,5,5,9,6,7,7,7,4,9,8,4,4,4,3,7,5,8,5,9,1,7&reel_set12=9,8,8,8,6,5,5,5,9,3,3,3,7,7,7,5,4,4,4,4,8,7,9,8,7,8,5,1,6,6,6,5,8,4,9,9,9,3,8~7,8,4,4,4,8,8,8,9,3,3,3,5,6,7,8,8,9,9,9,3,4,4,7,7,7,6,6,6,5,5,5,6,8~5,9,6,8,5,5,5,3,3,3,7,7,7,1,6,6,6,7,9,8,8,8,3,3,9,4,4,4,4,8,9,9,9,5,7,7~9,7,3,3,3,3,9,9,9,6,6,6,9,5,5,5,8,8,8,3,7,7,7,8,4,4,4,7,5,6,4,5,8,9~8,8,8,1,6,6,6,3,3,3,9,9,9,5,5,5,9,6,7,7,7,4,9,8,4,4,4,3,7,5,8,5,9,1,7&wilds=2~0,0,0,0,0~1,1,1,1,1&bonuses=0&fsbonus=&paytable=0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;1000,500,50,0,0;500,250,30,0,0;250,100,20,0,0;150,50,12,0,0;100,20,8,0,0;50,10,4,0,0;20,5,2,0,0&reel_set0=9,8,8,8,6,5,5,5,9,3,3,3,7,7,7,5,4,4,4,4,8,7,9,8,7,8,5,1,6,6,6,5,8,4,9,9,9,3,8~7,8,4,4,4,8,8,8,9,3,3,3,5,6,7,8,8,9,9,9,3,4,4,7,7,7,6,6,6,5,5,5,6,8~5,9,6,8,5,5,5,3,3,3,7,7,7,1,6,6,6,7,9,8,8,8,3,3,9,4,4,4,4,8,9,9,9,5,7,7~9,7,3,3,3,3,9,9,9,6,6,6,9,5,5,5,8,8,8,3,7,7,7,8,4,4,4,7,5,6,4,5,8,9~8,8,8,1,6,6,6,3,3,3,9,9,9,5,5,5,9,6,7,7,7,4,9,8,4,4,4,3,7,5,8,5,9,1,7&reel_set2=9,8,8,8,6,5,5,5,9,3,3,3,7,7,7,5,4,4,4,4,8,7,9,8,7,8,5,1,6,6,6,5,8,4,9,9,9,3,8~7,8,4,4,4,8,8,8,9,3,3,3,5,6,7,8,8,9,9,9,3,4,4,7,7,7,6,6,6,5,5,5,6,8~5,9,6,8,5,5,5,3,3,3,7,7,7,1,6,6,6,7,9,8,8,8,3,3,9,4,4,4,4,8,9,9,9,5,7,7~9,7,3,3,3,3,9,9,9,6,6,6,9,5,5,5,8,8,8,3,7,7,7,8,4,4,4,7,5,6,4,5,8,9~8,8,8,1,6,6,6,3,3,3,9,9,9,5,5,5,9,6,7,7,7,4,9,8,4,4,4,3,7,5,8,5,9,1,7&reel_set1=9,8,8,8,6,5,5,5,9,3,3,3,7,7,7,5,4,4,4,4,8,7,9,8,7,8,5,1,6,6,6,5,8,4,9,9,9,3,8~7,8,4,4,4,8,8,8,9,3,3,3,5,6,7,8,8,9,9,9,3,4,4,7,7,7,6,6,6,5,5,5,6,8~5,9,6,8,5,5,5,3,3,3,7,7,7,1,6,6,6,7,9,8,8,8,3,3,9,4,4,4,4,8,9,9,9,5,7,7~9,7,3,3,3,3,9,9,9,6,6,6,9,5,5,5,8,8,8,3,7,7,7,8,4,4,4,7,5,6,4,5,8,9~8,8,8,1,6,6,6,3,3,3,9,9,9,5,5,5,9,6,7,7,7,4,9,8,4,4,4,3,7,5,8,5,9,1,7&reel_set4=9,8,8,8,6,5,5,5,9,3,3,3,7,7,7,5,4,4,4,4,8,7,9,8,7,8,5,1,6,6,6,5,8,4,9,9,9,3,8~7,8,4,4,4,8,8,8,9,3,3,3,5,6,7,8,8,9,9,9,3,4,4,7,7,7,6,6,6,5,5,5,6,8~5,9,6,8,5,5,5,3,3,3,7,7,7,1,6,6,6,7,9,8,8,8,3,3,9,4,4,4,4,8,9,9,9,5,7,7~9,7,3,3,3,3,9,9,9,6,6,6,9,5,5,5,8,8,8,3,7,7,7,8,4,4,4,7,5,6,4,5,8,9~8,8,8,1,6,6,6,3,3,3,9,9,9,5,5,5,9,6,7,7,7,4,9,8,4,4,4,3,7,5,8,5,9,1,7&reel_set3=9,8,8,8,6,5,5,5,9,3,3,3,7,7,7,5,4,4,4,4,8,7,9,8,7,8,5,1,6,6,6,5,8,4,9,9,9,3,8~7,8,4,4,4,8,8,8,9,3,3,3,5,6,7,8,8,9,9,9,3,4,4,7,7,7,6,6,6,5,5,5,6,8~5,9,6,8,5,5,5,3,3,3,7,7,7,1,6,6,6,7,9,8,8,8,3,3,9,4,4,4,4,8,9,9,9,5,7,7~9,7,3,3,3,3,9,9,9,6,6,6,9,5,5,5,8,8,8,3,7,7,7,8,4,4,4,7,5,6,4,5,8,9~8,8,8,1,6,6,6,3,3,3,9,9,9,5,5,5,9,6,7,7,7,4,9,8,4,4,4,3,7,5,8,5,9,1,7&reel_set6=9,8,8,8,6,5,5,5,9,3,3,3,7,7,7,5,4,4,4,4,8,7,9,8,7,8,5,1,6,6,6,5,8,4,9,9,9,3,8~7,8,4,4,4,8,8,8,9,3,3,3,5,6,7,8,8,9,9,9,3,4,4,7,7,7,6,6,6,5,5,5,6,8~5,9,6,8,5,5,5,3,3,3,7,7,7,1,6,6,6,7,9,8,8,8,3,3,9,4,4,4,4,8,9,9,9,5,7,7~9,7,3,3,3,3,9,9,9,6,6,6,9,5,5,5,8,8,8,3,7,7,7,8,4,4,4,7,5,6,4,5,8,9~8,8,8,1,6,6,6,3,3,3,9,9,9,5,5,5,9,6,7,7,7,4,9,8,4,4,4,3,7,5,8,5,9,1,7&reel_set5=9,8,8,8,6,5,5,5,9,3,3,3,7,7,7,5,4,4,4,4,8,7,9,8,7,8,5,1,6,6,6,5,8,4,9,9,9,3,8~7,8,4,4,4,8,8,8,9,3,3,3,5,6,7,8,8,9,9,9,3,4,4,7,7,7,6,6,6,5,5,5,6,8~5,9,6,8,5,5,5,3,3,3,7,7,7,1,6,6,6,7,9,8,8,8,3,3,9,4,4,4,4,8,9,9,9,5,7,7~9,7,3,3,3,3,9,9,9,6,6,6,9,5,5,5,8,8,8,3,7,7,7,8,4,4,4,7,5,6,4,5,8,9~8,8,8,1,6,6,6,3,3,3,9,9,9,5,5,5,9,6,7,7,7,4,9,8,4,4,4,3,7,5,8,5,9,1,7&reel_set8=9,8,8,8,6,5,5,5,9,3,3,3,7,7,7,5,4,4,4,4,8,7,9,8,7,8,5,1,6,6,6,5,8,4,9,9,9,3,8~7,8,4,4,4,8,8,8,9,3,3,3,5,6,7,8,8,9,9,9,3,4,4,7,7,7,6,6,6,5,5,5,6,8~5,9,6,8,5,5,5,3,3,3,7,7,7,1,6,6,6,7,9,8,8,8,3,3,9,4,4,4,4,8,9,9,9,5,7,7~9,7,3,3,3,3,9,9,9,6,6,6,9,5,5,5,8,8,8,3,7,7,7,8,4,4,4,7,5,6,4,5,8,9~8,8,8,1,6,6,6,3,3,3,9,9,9,5,5,5,9,6,7,7,7,4,9,8,4,4,4,3,7,5,8,5,9,1,7&reel_set7=9,8,8,8,6,5,5,5,9,3,3,3,7,7,7,5,4,4,4,4,8,7,9,8,7,8,5,1,6,6,6,5,8,4,9,9,9,3,8~7,8,4,4,4,8,8,8,9,3,3,3,5,6,7,8,8,9,9,9,3,4,4,7,7,7,6,6,6,5,5,5,6,8~5,9,6,8,5,5,5,3,3,3,7,7,7,1,6,6,6,7,9,8,8,8,3,3,9,4,4,4,4,8,9,9,9,5,7,7~9,7,3,3,3,3,9,9,9,6,6,6,9,5,5,5,8,8,8,3,7,7,7,8,4,4,4,7,5,6,4,5,8,9~8,8,8,1,6,6,6,3,3,3,9,9,9,5,5,5,9,6,7,7,7,4,9,8,4,4,4,3,7,5,8,5,9,1,7&reel_set9=9,8,8,8,6,5,5,5,9,3,3,3,7,7,7,5,4,4,4,4,8,7,9,8,7,8,5,1,6,6,6,5,8,4,9,9,9,3,8~7,8,4,4,4,8,8,8,9,3,3,3,5,6,7,8,8,9,9,9,3,4,4,7,7,7,6,6,6,5,5,5,6,8~5,9,6,8,5,5,5,3,3,3,7,7,7,1,6,6,6,7,9,8,8,8,3,3,9,4,4,4,4,8,9,9,9,5,7,7~9,7,3,3,3,3,9,9,9,6,6,6,9,5,5,5,8,8,8,3,7,7,7,8,4,4,4,7,5,6,4,5,8,9~8,8,8,1,6,6,6,3,3,3,9,9,9,5,5,5,9,6,7,7,7,4,9,8,4,4,4,3,7,5,8,5,9,1,7";
            }
        }
	
	
        #endregion
        public ExtraJuicyGameLogic()
        {
            _gameID = GAMEID.ExtraJuicy;
            GameName = "ExtraJuicy";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
            dicParams["n_reel_set"] = "0";
            dicParams["s"] = "5,6,7,8,6,5,6,7,8,6,9,3,4,6,5";
            dicParams["sa"] = "8,3,2,3,4";
            dicParams["sb"] = "9,6,8,1,7";

        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
        }
	
    }
}
