using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using GITProtocol;

namespace SlotGamesNode.GameLogics
{
    public class BuffaloKingBetInfo : BasePPSlotBetInfo
    {
        public override float TotalBet
        {
            get
            {
                return BetPerLine * 40.0f;
            }
        }
    }
    public class BuffaloKingGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs4096bufking";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return true;
            }
        }
        protected override int ClientReqLineCount
        {
            get
            {
                return 4096;
            }
        }
        protected override int ServerResLineCount
        {
            get { return 40; }
        }
        protected override int ROWS
        {
            get
            {
                return 4;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=9,3,11,6,6,11,5,9,11,4,6,12,4,9,9,6,8,11,12,9,9,1,3,13&cfgs=5271&ver=2&def_sb=3,4,7,6,8,4&reel_set_size=9&def_sa=8,7,5,3,7,5&scatters=1~0,0,0,0,0,0~100,25,15,8,0,0~1,1,1,1,1,1&gmb=0,0,0&rt=d&sc=5.00,10.00,20.00,30.00,40.00,50.00,80.00,100.00,200.00,400.00,800.00,1500.00,2500.00&defc=50.00&wilds=2~0,0,0,0,0,0~1,1,1,1,1,1&bonuses=0&fsbonus=&paytable=0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;300,250,200,80,0,0;250,200,100,60,0,0;250,200,100,60,0,0;200,120,80,40,0,0;200,120,80,40,0,0;120,80,40,20,0,0;120,80,40,20,0,0;100,60,30,10,0,0;100,60,30,10,0,0;80,40,20,10,0,0;80,40,20,10,0,0&rtp=94.55&total_bet_max=10,000,000.00&reel_set0=3,3,3,3,8,7,10,9,9,4,11,8,8,10,6,9,1,11,11,5,5,10,12,10,11,6,6,6,4,13,13,7,7,7,12,10,6,13,4,11,11,10,12,5,13,1,12,12,3,8,11,11,10,6,6,9,9,5,5,5,10,10,12,7,7,13,13,11,4,4,4,10,10,9,7,13,13,5,9,8,12,12~12,12,8,9,5,13,13,7,9,10,10,4,4,4,11,13,13,7,7,12,10,10,12,12,6,6,6,13,13,7,11,7,5,8,13,6,9,12,3,3,11,8,8,7,7,7,13,13,5,5,5,6,12,12,4,4,8,8,11,10,7,9,9,10,5,5,11,11,1,9,6,10,8,2,11,4,9,9,7,8,8,3,3,3,3~3,3,3,3,8,8,7,9,9,4,11,6,8,10,6,9,1,11,11,5,5,10,6,6,6,12,10,11,4,13,13,7,7,7,12,10,6,2,4,11,11,10,12,5,13,1,12,12,3,8,11,11,10,6,6,9,9,5,5,5,10,10,12,7,7,13,13,11,4,4,4,10,10,9,7,13,13,5,9,8,12,12~12,12,8,9,5,13,13,7,9,10,10,4,4,4,11,13,13,7,7,12,10,10,12,12,6,6,6,13,13,7,11,7,5,8,13,6,9,12,3,3,11,8,8,13,13,7,7,7,5,5,5,6,12,12,4,4,8,8,11,10,7,9,9,10,5,5,11,11,1,9,6,10,8,2,11,4,9,9,7,8,8,3,3,3,3~3,3,3,3,8,8,7,9,9,4,11,6,8,10,6,9,1,11,11,5,5,10,12,10,11,4,13,13,7,7,7,12,10,6,2,4,11,11,10,6,6,6,12,5,13,1,12,12,3,8,11,11,10,6,6,9,9,5,5,5,10,10,12,7,7,13,13,11,4,4,4,10,10,9,7,13,13,5,9,8,12,12~12,12,8,9,5,13,13,7,9,10,10,4,4,4,11,5,5,5,13,13,7,7,12,10,10,12,12,6,6,6,13,13,7,11,7,5,8,13,6,9,12,3,3,11,7,7,7,8,8,13,13,6,12,12,4,4,8,8,11,10,7,9,9,10,5,5,11,11,1,9,6,10,8,2,11,4,9,9,7,8,8,3,3,3,3&reel_set2=12,12,7,9,5,13,13,7,9,12,3,3,3,3,13,13,13,7,7,12,10,10,5,5,5,9,9,9,7,7,7,9,9,13,13,7,12,7,5,10,13,9,9,12,3,3,10,9,9,13,13,7,12,12,5,5,10,10,10,12,7,9,9,10,5,5,12,12,1,10,7,3,3,3,13,5,9,9,7,10,10,3,3,3,3~5,5,5,8,8,6,6,9,9,11,11,8,8,12,6,9,1,11,11,5,5,9,9,11,12,12,5,8,8,4,9,9,6,6,6,12,12,12,4,4,4,11,11,5,12,8,8,1,9,9,5,8,11,11,12,6,6,9,9,5,5,5,8,8,12,5,5,11,11,11,4,4,4,9,9,9,4,11,11,11,9,8,12,12~3,3,3,3,8,7,10,10,4,11,3,3,3,10,6,13,1,11,11,11,3,3,10,8,8,7,10,11,8,8,4,13,13,7,7,7,13,13,6,10,3,3,3,10,4,4,13,1,11,11,3,8,8,8,10,7,7,7,13,13,6,6,6,10,8,7,7,13,13,11,4,4,4,10,10,10,3,3,3,11,6,8,8,8~12,12,8,9,5,13,13,7,9,10,10,4,4,4,11,13,13,7,7,12,10,10,5,5,5,9,9,6,6,6,6,13,13,7,11,7,5,8,13,6,9,12,7,7,7,3,3,3,3,8,8,11,6,12,12,4,4,8,8,11,10,7,9,9,10,5,5,11,11,1,9,6,10,8,2,11,4,9,9,7,8,8,3,3,3,3~3,3,3,3,8,8,7,9,9,4,11,2,8,10,6,9,1,11,11,5,5,10,9,9,6,6,6,7,10,11,8,8,4,13,13,7,7,7,12,10,6,6,4,11,11,10,12,5,13,1,12,12,3,3,3,3,8,6,6,9,9,5,5,5,10,10,12,7,7,13,13,11,4,4,4,10,10,9,7,13,13,5,9,8,12,12~12,12,8,9,5,13,13,7,9,10,10,4,4,4,11,13,13,7,7,12,10,10,5,5,5,9,9,6,6,6,6,13,13,7,11,7,5,8,13,6,9,12,7,7,7,3,3,3,3,8,8,11,6,12,12,4,4,8,8,11,10,7,9,9,10,5,5,11,11,1,9,6,10,8,2,11,4,9,9,7,8,8,3,3,3,3&t=243&reel_set1=3,3,3,3,8,7,10,10,4,11,3,3,3,10,6,13,1,11,11,3,3,10,8,8,7,10,11,8,6,11,11,11,10,4,13,13,7,7,7,13,13,6,10,3,3,3,10,4,4,13,1,11,11,3,8,8,8,10,7,7,7,13,13,6,6,6,10,8,7,7,13,13,11,4,4,4,10,10,10,3,3,3,11,6,8,8,8~12,12,7,9,5,13,13,7,9,12,3,3,3,3,13,13,13,7,7,12,10,10,5,5,5,9,9,7,10,10,12,12,9,9,9,13,13,7,12,7,5,10,13,9,9,7,7,7,12,3,3,10,9,9,13,13,7,12,12,5,5,10,10,10,12,7,9,9,10,5,5,12,12,1,10,7,3,3,3,13,5,9,9,7,10,10,3,3,3,3~5,5,5,8,8,6,6,9,9,11,11,8,8,12,6,9,1,11,11,5,5,9,9,11,12,12,5,8,6,12,12,12,11,4,9,9,6,6,6,12,12,4,4,4,11,11,5,12,8,8,1,9,9,5,8,11,11,12,6,6,9,9,5,5,5,8,8,12,5,5,11,11,11,4,4,4,9,9,9,4,11,11,11,9,8,12,12~12,12,8,9,5,13,13,7,9,10,10,4,4,4,11,13,13,7,7,12,10,10,5,5,5,9,9,6,11,3,3,10,6,6,6,13,13,7,11,7,5,8,13,6,9,12,3,3,3,3,7,7,7,8,8,11,6,12,12,4,4,8,8,11,10,7,9,9,10,5,5,11,11,1,9,6,10,8,2,11,4,9,9,7,8,8,3,3,3,3~3,3,3,3,8,8,7,9,9,4,11,2,8,10,6,9,1,11,11,5,5,6,6,6,10,9,9,7,10,11,8,6,10,3,3,11,4,13,13,7,7,7,12,10,6,6,4,11,11,10,12,5,13,1,12,12,3,3,3,3,8,6,6,9,9,5,5,5,10,10,12,7,7,13,13,11,4,4,4,10,10,9,7,13,13,5,9,8,12,12~12,12,8,9,5,13,13,7,9,10,10,4,4,4,11,13,13,7,7,12,10,10,5,5,5,9,9,6,11,3,3,10,6,6,6,13,13,7,11,7,5,8,13,6,9,12,3,3,3,3,8,8,7,7,7,11,6,12,12,4,4,8,8,11,10,7,9,9,10,5,5,11,11,1,9,6,10,8,2,11,4,9,9,7,8,8,3,3,3,3&reel_set4=3,3,3,3,10,10,12,6,6,11,11,5,8,8,3,10,10,5,5,5,12,12,1,8,11,6,6,6,11,10,1,8,11,5,12,12,3,3,3,11,11,10,10,10,5,5,8,8,8,11,11,6,6,6,10,12,12~9,9,7,7,7,13,13,4,10,10,9,4,4,4,10,10,12,7,13,13,3,12,12,4,9,9,4,9,13,13,7,7,7,13,13,1,12,12,3,10,10,10,13,12,4,9,9,3,12,12,13,13,3,3,3,3~6,6,6,13,13,5,8,6,6,11,4,4,9,7,7,7,8,6,9,9,5,13,13,1,8,7,9,4,4,4,11,9,1,9,8,7,7,11,4,13,13,7,7,8,8,5,5,5,9,8,8,4,11,11,7,7~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,13,13,3,3,12,12,12,7,8,9,9,4,13,13,6,6,6,11,4,4,4,4,8,1,12,12,5,10,10,3,3,3,11,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,11,3,3,3,10,10,5,12,12,1,8,11,6,6,6,4,4,4,4,10,1,9,8,7,12,12,12,4,3,3,13,13,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,13,13,3,3,12,12,12,7,8,9,9,4,13,13,6,6,6,11,8,1,4,4,4,4,12,12,5,10,10,3,3,3,11,11,11,6,6,12,13,13,3,3,3,3&purInit=[{type:\"fs\",bet:3000}]&reel_set3=3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,1,8,11,4,4,4,6,6,6,13,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,11,11,7,7,7,9,9,13~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,6,6,6,13,13,3,12,12,4,4,4,7,8,9,1,6,11,8,1,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,1,8,11,6,6,6,4,4,4,13,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,6,6,6,13,13,3,4,4,4,12,12,7,8,9,1,6,11,8,1,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,1,8,11,6,6,6,13,7,4,4,4,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,6,6,6,13,13,3,12,12,7,4,4,4,8,9,1,6,11,8,1,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3&reel_set6=3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,1,10,4,4,4,6,6,6,11,10,1,9,8,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,11,11,7,7,7,9,9,13~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,3,8,2,10,10,9,4,4,4,13,13,6,6,6,11,8,7,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,2,5,10,6,6,6,4,4,4,11,10,7,9,8,7,12,12,6,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,3,8,2,10,10,9,4,4,4,13,13,6,6,6,11,8,2,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,2,6,6,6,5,10,4,4,4,11,10,7,6,9,8,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,3,8,2,10,10,9,4,4,4,13,13,6,6,6,11,8,2,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3&reel_set5=3,3,3,3,10,10,12,6,6,11,11,5,8,8,3,10,10,5,12,12,1,8,11,6,6,5,5,11,10,1,8,11,5,12,12,3,3,3,11,11,10,10,10,5,5,5,8,8,8,11,11,6,6,6,10,12,12~6,6,6,13,13,5,8,6,6,11,4,4,9,7,7,7,8,6,9,9,5,13,13,1,8,11,5,9,4,4,4,11,9,1,9,8,7,7,11,4,13,13,7,7,8,8,5,5,5,9,8,8,4,11,11,7,7~9,9,7,7,7,13,13,3,3,10,10,9,4,4,10,10,12,7,13,13,3,12,12,7,9,10,4,4,4,9,13,13,7,7,7,13,13,1,12,12,3,10,10,10,13,12,4,9,9,7,12,12,13,13,3,3,3,3~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,13,13,3,3,12,12,12,7,8,10,10,9,4,13,13,4,4,4,4,6,6,6,11,8,1,12,12,5,10,10,3,3,3,11,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,11,3,3,3,10,10,5,12,12,1,8,11,6,6,6,4,4,4,4,10,1,9,8,7,12,12,12,4,3,3,13,13,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,13,13,3,3,12,12,12,7,8,10,10,9,4,13,13,6,6,6,11,8,1,4,4,4,4,12,12,5,10,10,3,3,3,11,11,11,6,6,12,13,13,3,3,3,3&reel_set8=3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,7,8,4,4,4,11,10,6,9,8,7,12,12,3,6,6,6,13,13,7,12,10,10,5,5,5,9,8,8,11,11,7,7,7,9,9,13~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,3,12,2,10,10,9,4,4,4,13,13,6,6,6,11,8,2,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,2,8,10,4,4,4,11,6,6,6,10,7,9,8,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,7,12,2,10,10,9,4,4,4,13,13,6,6,6,11,8,1,12,12,4,10,10,5,8,9,2,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,2,8,10,4,4,4,11,6,6,6,10,7,9,8,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,3,12,2,10,10,9,4,4,4,13,13,6,6,6,11,8,2,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3&reel_set7=3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,7,8,11,6,6,6,4,4,4,11,10,6,9,8,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,11,11,7,7,7,9,9,13~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,7,12,12,3,3,9,10,10,9,4,4,4,13,13,6,6,6,11,8,1,12,12,4,10,10,5,8,9,2,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,2,8,11,6,6,6,4,4,4,11,10,7,9,8,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,3,12,12,7,8,9,10,10,9,4,4,4,13,13,6,6,6,11,8,2,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3~3,3,3,3,13,13,12,6,6,11,11,4,9,8,3,10,10,5,12,12,2,8,11,6,6,6,4,4,4,11,10,7,9,8,7,12,12,3,13,13,7,12,10,10,5,5,5,9,8,8,2,11,11,7,7,7,9,9~9,9,7,7,7,11,11,2,8,8,9,5,5,5,10,10,12,7,13,13,3,12,12,7,8,9,10,10,9,4,4,4,13,13,6,6,6,11,8,2,12,12,5,10,10,3,8,9,4,11,11,6,6,12,13,13,3,3,3,3&total_bet_min=200.00";
            }
        }
        protected override bool SupportPurchaseFree
        {
            get { return true; }
        }
        protected override double PurchaseFreeMultiple
        {
            get { return 75.0; }
        }
        #endregion
        public BuffaloKingGameLogic()
        {
            _gameID = GAMEID.BuffaloKing;
            GameName = "BuffaloKing";
        }
        protected override void readBetInfoFromMessage(GITMessage message, string strGlobalUserID, Currencies currency)
        {
            try
            {
                string strInitString = ChipsetManager.Instance.convertTo(currency, this.InitDataString, this.SymbolName);
                var dicParams = splitResponseToParams(strInitString);

                double minChip = 0.0, maxChip = 0.0;
                getMinMaxChip(dicParams["sc"], ref minChip, ref maxChip);


                BuffaloKingBetInfo betInfo  = new BuffaloKingBetInfo();
                betInfo.BetPerLine          = (float)message.Pop();
                betInfo.LineCount           = (int)message.Pop();

                if (message.DataNum >= 3)
                    betInfo.PurchaseFree = true;
                else
                    betInfo.PurchaseFree = false;

                if (betInfo.BetPerLine <= 0.0f)
                {
                    _logger.Error("{0} betInfo.BetPerLine <= 0 in BuffaloKingGameLogic::readBetInfoFromMessage {1}", strGlobalUserID, betInfo.BetPerLine);
                    return;
                }
                if (!isNotIntergerMultipleBetPerLine(betInfo.BetPerLine, minChip))
                {
                    _logger.Error("{0} betInfo.BetPerLine is illegual: {1} != {2} * integer", strGlobalUserID, betInfo.BetPerLine, minChip);
                    return;
                }

                if (betInfo.LineCount != this.ClientReqLineCount)
                {
                    _logger.Error("{0} betInfo.LineCount is not matched {1} != {2}", strGlobalUserID, betInfo.LineCount, this.ClientReqLineCount);
                    return;
                }
                BasePPSlotBetInfo oldBetInfo = null;
                if (_dicUserBetInfos.TryGetValue(strGlobalUserID, out oldBetInfo))
                {
                    //만일 유저에게 남은 응답이 존재하는 경우
                    if (oldBetInfo.HasRemainResponse)
                        return;

                    oldBetInfo.BetPerLine   = betInfo.BetPerLine;
                    oldBetInfo.LineCount    = betInfo.LineCount;
                    oldBetInfo.PurchaseFree = betInfo.PurchaseFree;
                }
                else
                {
                    _dicUserBetInfos.Add(strGlobalUserID, betInfo);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in BuffaloKingGameLogic::readBetInfoFromMessage {0}", ex);
            }
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
            dicParams["reel_set"] = "0";
        }
        protected override BasePPSlotBetInfo restoreBetInfo(string strUserID, BinaryReader reader)
        {
            BuffaloKingBetInfo betInfo = new BuffaloKingBetInfo();
            betInfo.SerializeFrom(reader);
            return betInfo;
        }
        protected override BasePPSlotBetInfo newBetInfo()
        {
            return new BuffaloKingBetInfo();
        }
    }
}
