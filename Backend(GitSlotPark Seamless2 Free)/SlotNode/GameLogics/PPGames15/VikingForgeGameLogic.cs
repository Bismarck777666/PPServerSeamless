using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class VikingForgeGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs20sugarcoins";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return true;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 20; }
        }
        protected override int ServerResLineCount
        {
            get { return 20; }
        }
        protected override int ROWS
        {
            get
            {
                return 5;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=5,4,7,8,6,10,7,6,5,11,3,4,3,10,5,6,7,8,11,3,4,5,6,8,9,10,3,10,9,8&cfgs=10333&ver=3&mo_s=13;14&mo_v=2,5,10,20,40,60,100,160,200,240,300,400;2,3,5,10&def_sb=7,8,4,6,10,5&reel_set_size=5&def_sa=3,6,9,10,5,11&scatters=1~100,5,3,0,0,0~0,0,0,0,0,0~1,1,1,1,1,1&rt=d&gameInfo={rtps:{ante:\"94.00\",purchase:\"94.04\",regular:\"94.00\"},props:{max_rnd_sim:\"1\",max_rnd_hr:\"4000000\",max_rnd_win:\"10000\",max_rnd_win_a:\"8000\",max_rnd_hr_a:\"2000000\"}}&wl_i=tbm~10000;tbm_a~8000&sc=10.00,20.00,30.00,40.00,50.00,100.00,150.00,200.00,250.00,375.00,500.00,750.00,1250.00,2500.00,3750.00,5000.00&defc=50.00&purInit_e=1&wilds=2~0~1&bonuses=0&bls=20,25&paytable=0;0,0,0,0,0,0;0;2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,500,500,200,200,0,0,0,0,0,0,0;400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,200,200,40,40,0,0,0,0,0,0,0;300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,300,100,100,30,30,0,0,0,0,0,0,0;200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,200,40,40,25,25,0,0,0,0,0,0,0;160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,160,40,40,15,15,0,0,0,0,0,0,0;120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,120,30,30,12,12,0,0,0,0,0,0,0;100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,100,25,25,10,10,0,0,0,0,0,0,0;80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,20,20,8,8,0,0,0,0,0,0,0;60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,15,15,6,6,0,0,0,0,0,0,0;0;0;0&total_bet_max=10,000,000.00&reel_set0=5,5,11,8,10,6,9,11,5,7,9,3,3,6,6,6,10,6,10,4,11,10,10,7,10,7,7,11,11,8,8,8,11,10,8,9,8,3,11,4,4,7,9,11,8,8,9,9,9,10,6,9,8,4,5,8,7,11,6,4,10,11,6,3,3,3,10,4,10,6,7,7,10,11,9,5,10,8,5,3,4,10,10,10,11,8,11,10,9,7,7,3,5,10,1,11,10,11,7,7,7,1,6,8,9,11,11,6,10,9,10,5,9,10,6,5,5,5,8,4,10,7,11,7,3,8,11,4,11,8,7,8,11,11,11,11,10,7,7,10,6,8,7,5,8,5,6,9,11,4,4,4,5,6,10,8,6,5,4,4,7,7,8,4,10,9,11,11~5,5,11,8,10,6,9,11,5,7,9,3,3,6,6,6,10,6,10,4,11,10,10,7,10,7,7,11,11,8,8,8,11,10,8,9,8,3,11,4,4,7,9,11,8,8,9,9,9,10,6,9,8,4,5,8,7,11,6,4,10,11,6,3,3,3,10,4,10,6,7,7,10,11,9,5,10,8,5,3,4,10,10,10,11,8,11,10,9,7,7,3,5,10,1,11,10,11,7,7,7,1,6,8,9,11,11,6,10,9,10,5,9,10,6,5,5,5,8,4,10,7,11,7,3,8,11,4,11,8,7,8,11,11,11,11,10,7,7,10,6,8,7,5,8,5,6,9,11,4,4,4,5,6,10,8,6,5,4,4,7,7,8,4,10,9,11,11~5,5,11,8,10,6,9,11,5,7,9,3,3,6,6,6,10,6,10,4,11,10,10,7,10,7,7,11,11,8,8,8,11,10,8,9,8,3,11,4,4,7,9,11,8,8,9,9,9,10,6,9,8,4,5,8,7,11,6,4,10,11,6,3,3,3,10,4,10,6,7,7,10,11,9,5,10,8,5,3,4,10,10,10,11,8,11,10,9,7,7,3,5,10,1,11,10,11,7,7,7,1,6,8,9,11,11,6,10,9,10,5,9,10,6,5,5,5,8,4,10,7,11,7,3,8,11,4,11,8,7,8,11,11,11,11,10,7,7,10,6,8,7,5,8,5,6,9,11,4,4,4,5,6,10,8,6,5,4,4,7,7,8,4,10,9,11,11~5,5,11,8,10,6,9,11,5,7,9,3,3,6,6,6,10,6,10,4,11,10,10,7,10,7,7,11,11,8,8,8,11,10,8,9,8,3,11,4,4,7,9,11,8,8,9,9,9,10,6,9,8,4,5,8,7,11,6,4,10,11,6,3,3,3,10,4,10,6,7,7,10,11,9,5,10,8,5,3,4,10,10,10,11,8,11,10,9,7,7,3,5,10,1,11,10,11,7,7,7,1,6,8,9,11,11,6,10,9,10,5,9,10,6,5,5,5,8,4,10,7,11,7,3,8,11,4,11,8,7,8,11,11,11,11,10,7,7,10,6,8,7,5,8,5,6,9,11,4,4,4,5,6,10,8,6,5,4,4,7,7,8,4,10,9,11,11~5,5,11,8,10,6,9,11,5,7,9,3,3,6,6,6,10,6,10,4,11,10,10,7,10,7,7,11,11,8,8,8,11,10,8,9,8,3,11,4,4,7,9,11,8,8,9,9,9,10,6,9,8,4,5,8,7,11,6,4,10,11,6,3,3,3,10,4,10,6,7,7,10,11,9,5,10,8,5,3,4,10,10,10,11,8,11,10,9,7,7,3,5,10,1,11,10,11,7,7,7,1,6,8,9,11,11,6,10,9,10,5,9,10,6,5,5,5,8,4,10,7,11,7,3,8,11,4,11,8,7,8,11,11,11,11,10,7,7,10,6,8,7,5,8,5,6,9,11,4,4,4,5,6,10,8,6,5,4,4,7,7,8,4,10,9,11,11~5,5,11,8,10,6,9,11,5,7,9,3,3,6,6,6,10,6,10,4,11,10,10,7,10,7,7,11,11,8,8,8,11,10,8,9,8,3,11,4,4,7,9,11,8,8,9,9,9,10,6,9,8,4,5,8,7,11,6,4,10,11,6,3,3,3,10,4,10,6,7,7,10,11,9,5,10,8,5,3,4,10,10,10,11,8,11,10,9,7,7,3,5,10,1,11,10,11,7,7,7,1,6,8,9,11,11,6,10,9,10,5,9,10,6,5,5,5,8,4,10,7,11,7,3,8,11,4,11,8,7,8,11,11,11,11,10,7,7,10,6,8,7,5,8,5,6,9,11,4,4,4,5,6,10,8,6,5,4,4,7,7,8,4,10,9,11,11&accInit=[{id:0,mask:\"coins\"}]&reel_set2=5,8,6,8,4,8,8,7,10,11,8,11,11,11,4,10,7,9,5,7,5,3,5,11,8,3,11,3,3,3,7,5,9,5,11,10,11,10,6,10,11,10,11,10,10,10,4,4,8,10,11,9,5,11,5,9,11,11,9,9,9,8,4,10,11,9,8,7,3,6,9,10,9,3,8,8,8,4,5,3,5,9,11,6,10,11,9,10,9,7,7,7,4,8,6,8,6,7,8,10,4,6,11,8,4,5,5,5,6,3,5,6,11,8,10,9,10,11,6,7,4,4,4,1,8,4,11,1,5,10,11,8,10,8,10,6,6,6,8,11,6,11,6,7,11,6,6,10,5,3,10,6~5,8,6,8,4,8,8,7,10,11,8,11,11,11,4,10,7,9,5,7,5,3,5,11,8,3,11,3,3,3,7,5,9,5,11,10,11,10,6,10,11,10,11,10,10,10,4,4,8,10,11,9,5,11,5,9,11,11,9,9,9,8,4,10,11,9,8,7,3,6,9,10,9,3,8,8,8,4,5,3,5,9,11,6,10,11,9,10,9,7,7,7,4,8,6,8,6,7,8,10,4,6,11,8,4,5,5,5,6,3,5,6,11,8,10,9,10,11,6,7,4,4,4,1,8,4,11,1,5,10,11,8,10,8,10,6,6,6,8,11,6,11,6,7,11,6,6,10,5,3,10,6~5,8,6,8,4,8,8,7,10,11,8,11,11,11,4,10,7,9,5,7,5,3,5,11,8,3,11,3,3,3,7,5,9,5,11,10,11,10,6,10,11,10,11,10,10,10,4,4,8,10,11,9,5,11,5,9,11,11,9,9,9,8,4,10,11,9,8,7,3,6,9,10,9,3,8,8,8,4,5,3,5,9,11,6,10,11,9,10,9,7,7,7,4,8,6,8,6,7,8,10,4,6,11,8,4,5,5,5,6,3,5,6,11,8,10,9,10,11,6,7,4,4,4,1,8,4,11,1,5,10,11,8,10,8,10,6,6,6,8,11,6,11,6,7,11,6,6,10,5,3,10,6~5,8,6,8,4,8,8,7,10,11,8,11,11,11,4,10,7,9,5,7,5,3,5,11,8,3,11,3,3,3,7,5,9,5,11,10,11,10,6,10,11,10,11,10,10,10,4,4,8,10,11,9,5,11,5,9,11,11,9,9,9,8,4,10,11,9,8,7,3,6,9,10,9,3,8,8,8,4,5,3,5,9,11,6,10,11,9,10,9,7,7,7,4,8,6,8,6,7,8,10,4,6,11,8,4,5,5,5,6,3,5,6,11,8,10,9,10,11,6,7,4,4,4,1,8,4,11,1,5,10,11,8,10,8,10,6,6,6,8,11,6,11,6,7,11,6,6,10,5,3,10,6~5,8,6,8,4,8,8,7,10,11,8,11,11,11,4,10,7,9,5,7,5,3,5,11,8,3,11,3,3,3,7,5,9,5,11,10,11,10,6,10,11,10,11,10,10,10,4,4,8,10,11,9,5,11,5,9,11,11,9,9,9,8,4,10,11,9,8,7,3,6,9,10,9,3,8,8,8,4,5,3,5,9,11,6,10,11,9,10,9,7,7,7,4,8,6,8,6,7,8,10,4,6,11,8,4,5,5,5,6,3,5,6,11,8,10,9,10,11,6,7,4,4,4,1,8,4,11,1,5,10,11,8,10,8,10,6,6,6,8,11,6,11,6,7,11,6,6,10,5,3,10,6~5,8,6,8,4,8,8,7,10,11,8,11,11,11,4,10,7,9,5,7,5,3,5,11,8,3,11,3,3,3,7,5,9,5,11,10,11,10,6,10,11,10,11,10,10,10,4,4,8,10,11,9,5,11,5,9,11,11,9,9,9,8,4,10,11,9,8,7,3,6,9,10,9,3,8,8,8,4,5,3,5,9,11,6,10,11,9,10,9,7,7,7,4,8,6,8,6,7,8,10,4,6,11,8,4,5,5,5,6,3,5,6,11,8,10,9,10,11,6,7,4,4,4,1,8,4,11,1,5,10,11,8,10,8,10,6,6,6,8,11,6,11,6,7,11,6,6,10,5,3,10,6&reel_set1=10,7,9,3,9,11,6,9,8,10,11,11,11,9,7,6,7,11,8,4,1,4,9,6,6,11,10,10,10,11,3,8,7,10,8,9,11,10,9,9,8,6,6,6,11,10,5,3,9,8,5,9,6,4,6,7,7,8,8,8,5,7,4,6,7,11,4,9,11,5,11,7,7,9,9,9,11,4,6,3,10,9,4,7,7,11,10,11,4,4,4,11,10,5,4,10,7,9,8,5,9,3,10,5,3,3,3,8,8,7,1,5,8,9,5,7,6,6,8,5,5,5,8,6,9,11,8,5,6,4,11,10,10,8,11,7,7,7,8,10,8,9,8,11,11,10,10,5,3,11,10,11~10,7,9,3,9,11,6,9,8,10,11,11,11,9,7,6,7,11,8,4,1,4,9,6,6,11,10,10,10,11,3,8,7,10,8,9,11,10,9,9,8,6,6,6,11,10,5,3,9,8,5,9,6,4,6,7,7,8,8,8,5,7,4,6,7,11,4,9,11,5,11,7,7,9,9,9,11,4,6,3,10,9,4,7,7,11,10,11,4,4,4,11,10,5,4,10,7,9,8,5,9,3,10,5,3,3,3,8,8,7,1,5,8,9,5,7,6,6,8,5,5,5,8,6,9,11,8,5,6,4,11,10,10,8,11,7,7,7,8,10,8,9,8,11,11,10,10,5,3,11,10,11~10,7,9,3,9,11,6,9,8,10,11,11,11,9,7,6,7,11,8,4,1,4,9,6,6,11,10,10,10,11,3,8,7,10,8,9,11,10,9,9,8,6,6,6,11,10,5,3,9,8,5,9,6,4,6,7,7,8,8,8,5,7,4,6,7,11,4,9,11,5,11,7,7,9,9,9,11,4,6,3,10,9,4,7,7,11,10,11,4,4,4,11,10,5,4,10,7,9,8,5,9,3,10,5,3,3,3,8,8,7,1,5,8,9,5,7,6,6,8,5,5,5,8,6,9,11,8,5,6,4,11,10,10,8,11,7,7,7,8,10,8,9,8,11,11,10,10,5,3,11,10,11~10,7,9,3,9,11,6,9,8,10,11,11,11,9,7,6,7,11,8,4,1,4,9,6,6,11,10,10,10,11,3,8,7,10,8,9,11,10,9,9,8,6,6,6,11,10,5,3,9,8,5,9,6,4,6,7,7,8,8,8,5,7,4,6,7,11,4,9,11,5,11,7,7,9,9,9,11,4,6,3,10,9,4,7,7,11,10,11,4,4,4,11,10,5,4,10,7,9,8,5,9,3,10,5,3,3,3,8,8,7,1,5,8,9,5,7,6,6,8,5,5,5,8,6,9,11,8,5,6,4,11,10,10,8,11,7,7,7,8,10,8,9,8,11,11,10,10,5,3,11,10,11~10,7,9,3,9,11,6,9,8,10,11,11,11,9,7,6,7,11,8,4,1,4,9,6,6,11,10,10,10,11,3,8,7,10,8,9,11,10,9,9,8,6,6,6,11,10,5,3,9,8,5,9,6,4,6,7,7,8,8,8,5,7,4,6,7,11,4,9,11,5,11,7,7,9,9,9,11,4,6,3,10,9,4,7,7,11,10,11,4,4,4,11,10,5,4,10,7,9,8,5,9,3,10,5,3,3,3,8,8,7,1,5,8,9,5,7,6,6,8,5,5,5,8,6,9,11,8,5,6,4,11,10,10,8,11,7,7,7,8,10,8,9,8,11,11,10,10,5,3,11,10,11~10,7,9,3,9,11,6,9,8,10,11,11,11,9,7,6,7,11,8,4,1,4,9,6,6,11,10,10,10,11,3,8,7,10,8,9,11,10,9,9,8,6,6,6,11,10,5,3,9,8,5,9,6,4,6,7,7,8,8,8,5,7,4,6,7,11,4,9,11,5,11,7,7,9,9,9,11,4,6,3,10,9,4,7,7,11,10,11,4,4,4,11,10,5,4,10,7,9,8,5,9,3,10,5,3,3,3,8,8,7,1,5,8,9,5,7,6,6,8,5,5,5,8,6,9,11,8,5,6,4,11,10,10,8,11,7,7,7,8,10,8,9,8,11,11,10,10,5,3,11,10,11&reel_set4=5,9,5,7,9,3,3,7,7,5,9,9,7,3,3,5~8,6,6,8,10,4,8,10,10,4~5,9,5,7,9,3,3,7,7,5,9,9,7,3,3,5~8,6,6,8,10,4,8,10,10,4~5,9,5,7,9,3,3,7,7,5,9,9,7,3,3,5~8,6,6,8,10,4,8,10,10,4&purInit=[{bet:2000,type:\"default\"}]&reel_set3=11,7,10,4,4,7,8,8,9,5,8,9,9,9,9,7,11,11,5,9,6,1,6,5,7,6,7,5,6,3,3,3,7,10,9,8,9,3,10,8,6,9,9,5,9,8,8,8,7,9,11,10,3,9,6,6,7,9,11,10,6,9,10,10,10,6,6,10,8,11,11,7,5,11,7,3,7,7,4,7,7,7,10,8,9,10,5,8,6,9,10,4,4,5,10,4,4,4,9,5,4,5,5,9,8,4,9,10,4,7,8,3,11,11,11,4,6,7,3,10,8,11,3,7,5,11,6,10,6,6,6,10,11,11,3,10,5,7,4,10,4,9,11,9,8,5,5,5,6,10,1,9,9,8,11,6,10,7,5,10,6,11,6~11,7,10,4,4,7,8,8,9,5,8,9,9,9,9,7,11,11,5,9,6,1,6,5,7,6,7,5,6,3,3,3,7,10,9,8,9,3,10,8,6,9,9,5,9,8,8,8,7,9,11,10,3,9,6,6,7,9,11,10,6,9,10,10,10,6,6,10,8,11,11,7,5,11,7,3,7,7,4,7,7,7,10,8,9,10,5,8,6,9,10,4,4,5,10,4,4,4,9,5,4,5,5,9,8,4,9,10,4,7,8,3,11,11,11,4,6,7,3,10,8,11,3,7,5,11,6,10,6,6,6,10,11,11,3,10,5,7,4,10,4,9,11,9,8,5,5,5,6,10,1,9,9,8,11,6,10,7,5,10,6,11,6~11,7,10,4,4,7,8,8,9,5,8,9,9,9,9,7,11,11,5,9,6,1,6,5,7,6,7,5,6,3,3,3,7,10,9,8,9,3,10,8,6,9,9,5,9,8,8,8,7,9,11,10,3,9,6,6,7,9,11,10,6,9,10,10,10,6,6,10,8,11,11,7,5,11,7,3,7,7,4,7,7,7,10,8,9,10,5,8,6,9,10,4,4,5,10,4,4,4,9,5,4,5,5,9,8,4,9,10,4,7,8,3,11,11,11,4,6,7,3,10,8,11,3,7,5,11,6,10,6,6,6,10,11,11,3,10,5,7,4,10,4,9,11,9,8,5,5,5,6,10,1,9,9,8,11,6,10,7,5,10,6,11,6~11,7,10,4,4,7,8,8,9,5,8,9,9,9,9,7,11,11,5,9,6,1,6,5,7,6,7,5,6,3,3,3,7,10,9,8,9,3,10,8,6,9,9,5,9,8,8,8,7,9,11,10,3,9,6,6,7,9,11,10,6,9,10,10,10,6,6,10,8,11,11,7,5,11,7,3,7,7,4,7,7,7,10,8,9,10,5,8,6,9,10,4,4,5,10,4,4,4,9,5,4,5,5,9,8,4,9,10,4,7,8,3,11,11,11,4,6,7,3,10,8,11,3,7,5,11,6,10,6,6,6,10,11,11,3,10,5,7,4,10,4,9,11,9,8,5,5,5,6,10,1,9,9,8,11,6,10,7,5,10,6,11,6~11,7,10,4,4,7,8,8,9,5,8,9,9,9,9,7,11,11,5,9,6,1,6,5,7,6,7,5,6,3,3,3,7,10,9,8,9,3,10,8,6,9,9,5,9,8,8,8,7,9,11,10,3,9,6,6,7,9,11,10,6,9,10,10,10,6,6,10,8,11,11,7,5,11,7,3,7,7,4,7,7,7,10,8,9,10,5,8,6,9,10,4,4,5,10,4,4,4,9,5,4,5,5,9,8,4,9,10,4,7,8,3,11,11,11,4,6,7,3,10,8,11,3,7,5,11,6,10,6,6,6,10,11,11,3,10,5,7,4,10,4,9,11,9,8,5,5,5,6,10,1,9,9,8,11,6,10,7,5,10,6,11,6~11,7,10,4,4,7,8,8,9,5,8,9,9,9,9,7,11,11,5,9,6,1,6,5,7,6,7,5,6,3,3,3,7,10,9,8,9,3,10,8,6,9,9,5,9,8,8,8,7,9,11,10,3,9,6,6,7,9,11,10,6,9,10,10,10,6,6,10,8,11,11,7,5,11,7,3,7,7,4,7,7,7,10,8,9,10,5,8,6,9,10,4,4,5,10,4,4,4,9,5,4,5,5,9,8,4,9,10,4,7,8,3,11,11,11,4,6,7,3,10,8,11,3,7,5,11,6,10,6,6,6,10,11,11,3,10,5,7,4,10,4,9,11,9,8,5,5,5,6,10,1,9,9,8,11,6,10,7,5,10,6,11,6&total_bet_min=10.00";
            }
        }
	
        protected override double PurchaseFreeMultiple
        {
            get { return 100; }
        }
        protected override bool SupportPurchaseFree
        {
            get { return true; }
        }
        protected override bool HasPurEnableOption
        {
            get { return true; }
        }
	
	
        protected override double MoreBetMultiple
        {
            get { return 1.25; }
        }
        protected override bool SupportMoreBet
        {
            get { return true; }
        }
	
        #endregion
        public VikingForgeGameLogic()
        {
            _gameID = GAMEID.VikingForge;
            GameName = "VikingForge";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["reel_set"] = "0";
	        dicParams["st"] = "rect";
	        dicParams["sw"] = "6";
	        dicParams["bl"] = "0";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);

            if (dicParams.ContainsKey("rs_iw"))
                dicParams["rs_iw"] = convertWinByBet(dicParams["rs_iw"], currentBet);

            if (dicParams.ContainsKey("rs_win"))
                dicParams["rs_win"] = convertWinByBet(dicParams["rs_win"], currentBet);

            if (dicParams.ContainsKey("mo_tw"))
                dicParams["mo_tw"] = convertWinByBet(dicParams["mo_tw"], currentBet);

            if (dicParams.ContainsKey("pw"))
                dicParams["pw"] = convertWinByBet(dicParams["pw"], currentBet);
        }
	
        protected override void readBetInfoFromMessage(GITMessage message, string strGlobalUserID, Currencies currency)
        {
            try
            {
                string strInitString = ChipsetManager.Instance.convertTo(currency, this.InitDataString, this.SymbolName);
                var dicParams = splitResponseToParams(strInitString);

                double minChip = 0.0, maxChip = 0.0;
                getMinMaxChip(dicParams["sc"], ref minChip, ref maxChip);


                BasePPSlotBetInfo betInfo = new BasePPSlotBetInfo();
                betInfo.BetPerLine = (float)message.Pop();
                betInfo.LineCount = (int)message.Pop();
		
                int bl = (int)message.Pop();
                if (bl == 0)
                    betInfo.MoreBet = false;
                else
                    betInfo.MoreBet = true;
		
		
                if (message.DataNum >= 3)
                    betInfo.PurchaseFree = true;
                else
                    betInfo.PurchaseFree = false;
		
                if (betInfo.BetPerLine <= 0.0f)
                {
                    _logger.Error("{0} betInfo.BetPerLine <= 0 in VikingForgeGameLogic::readBetInfoFromMessage {1}", strGlobalUserID, betInfo.BetPerLine);
                    return;
                }
		
                if (betInfo.MoreBet && betInfo.PurchaseFree)
                {
                    _logger.Error("{0} betInfo.MoreBet and  PurchasedFreeSpin is same time true in VikingForgeGameLogic::readBetInfoFromMessage", strGlobalUserID);
                    return;
                }
		
                if (!isNotIntergerMultipleBetPerLine(betInfo.BetPerLine, minChip))
                {
                    _logger.Error("{0} betInfo.BetPerLine is illegual: {1} != {2} * integer", strGlobalUserID, betInfo.BetPerLine, minChip);
                    return;
                }

                if (betInfo.LineCount != this.ClientReqLineCount)
                {
                    _logger.Error("{0} betInfo.LineCount is not matched {1} != {2}", strGlobalUserID, betInfo.LineCount, this.ClientReqLineCount);
                    return;
                }
                BasePPSlotBetInfo oldBetInfo = null;
                if (_dicUserBetInfos.TryGetValue(strGlobalUserID, out oldBetInfo))
                {
                    if (oldBetInfo.HasRemainResponse)
                        return;

                    oldBetInfo.BetPerLine   = betInfo.BetPerLine;
                    oldBetInfo.LineCount    = betInfo.LineCount;
                    oldBetInfo.MoreBet      = betInfo.MoreBet;
                    oldBetInfo.PurchaseFree = betInfo.PurchaseFree;
                }
                else
                {
                    _dicUserBetInfos.Add(strGlobalUserID, betInfo);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in VikingForgeGameLogic::readBetInfoFromMessage {0}", ex);
            }
        }
	
    }
}
