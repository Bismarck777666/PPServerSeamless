using Akka.Actor;
using GITProtocol;
using MongoDB.Bson;
using PCGSharp;
using SlotGamesNode.Database;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class WildWildPearlsBetInfo : BasePPSlotBetInfo
    {
        public override float TotalBet
        {
            get
            {
                return BetPerLine * 20;
            }
        }
        public int PurchaseType { get; set; }
        public override void SerializeFrom(BinaryReader reader)
        {
            base.SerializeFrom(reader);
            this.PurchaseType = reader.ReadInt32();
        }
        public override void SerializeTo(BinaryWriter writer)
        {
            base.SerializeTo(writer);
            writer.Write(PurchaseType);
        }
    }

    class WildWildPearlsGameLogic : BasePPSlotGame
    {
        protected double[] _multiTotalFreeSpinWinRates;
        protected double[] _multiMinFreeSpinWinRates;

        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vswayspearls";
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 30; }
        }
        protected override int ServerResLineCount
        {
            get { return 20; }
        }
        protected override int ROWS
        {
            get
            {
                return 4;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=8,12,10,8,7,9,5,11,13,11,6,13,7,10,10,9,8,12,14,14,11,11,6,13&cfgs=1&ver=3&mo_s=4&mo_v=10,20,40,60,80,100,120,160,160,200,500,1000,1500,2000&def_sb=8,9,8,7,7,10&reel_set_size=13&def_sa=8,13,12,8,8,10&scatters=1~0,0,0,0,0,0~0,0,0,0,0,0~1,1,1,1,1,1;3~0,0,0,0,0,0~0,0,0,0,0,0~1,1,1,1,1,1&rt=d&gameInfo={rtps:{ante:\"96.49\",purchase_1:\"96.50\",purchase_0:\"96.52\",regular:\"96.46\"},props:{max_rnd_sim:\"1\",max_rnd_hr:\"45454500\",max_rnd_win:\"5000\",max_rnd_sim_a:\"1\",max_rnd_win_a:\"3334\",max_rnd_hr_a:\"37037000\"}}&wl_i=tbm~5000;tbm_a~3334&reel_set10=13,2,10~11,12,2~11,1,9,10~12,13,4,7,5,4,4,5,11,12,10,4,9,5,11,11,11,10,4,13,9,4,4,12,8,12,6,11,12,4,11,13,12,12,12,8,5,13,6,8,4,6,13,4,13,9,4,11,13,13,9,13,13,13,12,12,4,4,13,10,4,8,8,12,9,6,12,7,11,4,4,4,4,4,12,12,7,11,7,4,10,8,13,11,5,12,13,4,8,5,5,5,5,13,5,10,4,12,8,4,10,10,7,13,11,4,13,4,4,6,6,6,7,12,4,4,9,4,4,11,12,11,13,10,4,13,13,4,7,7,7,7,6,7,11,10,13,7,4,10,12,10,11,4,4,12,5,13,10,10,10,4,13,9,12,7,11,4,6,4,5,4,9,12,10,12,13,4~11,10,13,7,10,4,11,4,8,4,13,4,7,8,12,5,12,4,12,13,5,4,12,12,12,12,4,12,4,10,13,11,10,9,7,12,11,13,4,4,10,11,11,12,10,7,10,4,10,7,4,4,4,4,4,13,10,13,6,4,4,6,8,4,9,4,13,4,13,4,13,12,8,4,6,11,4,7,4,7,7,7,7,4,12,4,13,4,5,4,12,4,4,10,10,12,12,4,4,8,7,11,12,6,5,9,10,10,10,10,4,13,13,12,4,5,13,4,4,12,9,12,10,4,13,10,6,4,10,11,12,10,4,11,4~4,10,4,8,11,9,4,13,8,12,4,10,10,4,4,11,4,13,12,4,4,12,4,6,12,12,12,12,11,11,4,4,9,4,4,11,13,4,12,7,13,10,4,13,4,11,10,8,5,11,11,4,4,13,13,13,11,12,4,7,12,10,6,4,7,4,10,9,10,13,13,8,4,6,4,7,4,4,13,13,6,4,4,4,4,4,4,6,4,13,13,12,4,4,12,4,13,12,13,11,4,5,12,10,10,4,5,4,12,7,12,7,7,7,7,12,6,7,4,9,13,12,11,10,13,10,12,10,8,10,12,4,4,13,4,4,10,11,4,10,10,10,7,4,10,12,11,10,4,4,5,4,4,10,13,4,13,6,9,4,13,13,12,12,4,4,13,13,11&sc=5.00,10.00,20.00,30.00,40.00,50.00,100.00,150.00,200.00,250.00,375.00,500.00,750.00,1250.00,2500.00,3750.00,5000.00&defc=50.00&reel_set11=13,2,10~11,12,2~11,3,9,10~10,4,8,13,9,4,7,7,13,11,5,4,9,4,4,6,4,13,11,10,11,11,11,12,12,8,11,4,10,10,9,11,13,4,4,12,11,13,4,13,11,10,9,12,12,12,6,12,4,4,11,5,4,12,8,4,8,4,12,4,4,6,12,12,4,11,4,13,13,13,4,13,5,4,13,10,12,13,4,6,13,4,9,8,5,4,7,10,12,11,12,4,4,4,4,4,11,12,4,4,12,13,13,12,11,6,8,8,13,11,11,4,8,13,4,4,5,5,5,5,7,4,12,11,11,4,13,5,10,7,4,4,8,4,4,5,13,9,7,13,12,6,6,6,9,4,10,4,12,10,13,4,13,12,13,12,10,10,11,5,11,4,12,9,7,7,7,7,12,13,5,4,7,13,12,10,7,4,12,10,7,9,12,6,13,8,7,10,4,10,10,10,4,9,13,4,12,11,4,7,5,4,12,13,6,13,10,4,13,13,12,4,5,4,6~10,4,11,10,4,8,4,10,4,4,11,9,6,10,9,4,12,12,13,5,4,11,5,4,4,12,4,11,6,10,13,12,12,12,12,6,12,7,5,4,4,13,10,4,7,4,4,13,11,4,10,4,5,8,5,13,6,6,4,10,4,11,4,13,4,12,13,4,4,4,4,4,10,10,7,13,7,6,11,13,4,11,10,4,7,12,11,13,4,12,8,4,7,7,4,4,13,4,7,12,4,13,6,7,7,7,7,10,4,4,5,12,11,12,10,4,9,4,12,4,10,9,12,4,11,13,13,4,7,4,12,12,11,12,8,4,4,10,4,10,10,10,10,4,12,13,5,10,4,12,13,12,9,12,10,4,10,8,13,4,13,4,7,13,8,4,10,4,11,12,11,8,13,12,12,10~6,10,12,10,4,6,11,4,13,13,10,12,4,10,8,7,6,4,12,12,12,12,4,11,13,12,12,4,13,12,13,10,4,11,10,7,4,13,4,4,12,10,13,13,13,4,10,4,13,4,4,12,13,11,8,13,11,4,10,4,4,9,11,11,4,4,4,4,4,4,9,4,6,4,4,8,4,4,13,10,10,4,12,5,12,4,10,4,11,7,7,7,7,13,4,4,12,9,10,4,4,10,13,12,12,13,9,10,4,5,11,7,13,10,10,10,11,13,6,4,4,12,4,7,4,7,4,4,5,4,12,4,8,13,5,11,12&reel_set12=13,2,10~11,12,2~7,13,10,11,9,13,4,4,4,4,12,13,12,4,13,6,11,4,4,4,4,4,13,4,4,11,4,4,4,4,4,5,4,6,13,11,4,9,4,11,4,12,11,4,4,4,4,4,12,4,4,4,8,10,4,10,5~4,12,5,4,7,13,4,7,9,11,11,11,4,4,10,4,12,11,4,10,4,11,12,12,12,12,4,4,7,4,4,7,12,4,12,4,4,4,4,4,4,4,4,4,11,10,10,4,4,11,4,11,13,4~4,4,4,4,4,4,4,4,12,13,10,4,8,4,13,4,12,12,4,4,4,4,4,4,10,4,12,12,12,4,5,4,8,12,4,13,7,4,4,13,4,4,4,4,10,12,13,4,4,10,13,12,4,10,4,4,11,13,13,13,13,13,12,4,5,13,4,9,13,5,4,4,13,9,10,4,4,4,11,4,4,4,4,13,4,4,13,4,4,13,4,4,4,4,4,4,4,4,4,4,4,4,6,13,5,4,4,4,9,4,13,10,4,4,4,10,4,4,11,11,4,4,4,13,11,4,4,6,6,6,12,4,13,13,12,4,10,4,4,10,10,6,10,13,4,12,12,4,13,4,4,11,11,4,4,13,6,4,10,10,10,10,13,12,4,4,13,4,4,4,10,4,4,13,7,13,4,4,4,9,13,4,4,4,7,13,4,7,6,10,4~9,4,11,4,12,12,9,4,11,4,4,7,12,4,7,10,12,12,12,4,11,13,10,13,13,12,13,11,10,10,4,12,13,6,4,4,13,13,13,13,13,10,13,4,4,4,4,13,13,13,4,4,13,4,10,4,4,4,10,4,4,4,4,4,4,4,4,4,4,8,4,4,10,4,4,9,13,13,4,4,10,4,12,4,6,13,6,6,6,10,9,12,4,4,4,4,4,11,11,7,13,4,12,7,4,4,8,7,7,7,7,10,4,4,7,4,4,13,13,10,6,4,13,13,5,4,6,4,10,10,10,10,4,13,4,4,4,9,12,4,10,4,5,4,4,11,4,4,4,4,4&purInit_e=1,1&wilds=2~0,0,0,0,0,0~1,1,1,1,1,1&bonuses=0&bls=20,30&ntp=0.00&paytable=0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;0,0,0,0,0,0;100,80,40,20,0,0;60,40,20,10,0,0;40,20,10,8,0,0;30,10,8,6,0,0;25,9,7,5,0,0;20,8,6,4,0,0;20,8,6,4,0,0;10,6,4,2,0,0;10,6,4,2,0,0;0,0,0,0,0&total_bet_max=15,000,000.00&reel_set0=13,11,13,12,2,11,12,8,12,9,10,13,10,11,13,10,9,6,5,13,12,5,7,8,11,11,12,7,5,13,8,11,13,12,12,13,10,12,13,10,11,8,12,12,8,8,11,13,13,5,2,11,13,13,13,11,11,9,13,8,10,13,11,13,9,13,8,13,12,7,7,9,6,12,13,12,13,7,2,12,11,9,5,11,8,12,12,7,12,13,13,10,11,5,13,11,10,7,11,8,13,11,5,5,10,8,5~12,11,12,12,10,6,12,8,12,10,7,12,10,12,12,7,10,6,10,5,7,10,11,9,12,12,8,6,10,12,11,10,9,9,12,11,12,12,12,12,2,12,8,10,12,12,11,12,6,11,8,10,11,10,2,7,7,12,6,8,12,10,10,13,8,12,12,9,2,5,10,10,13,8,10,12,10,10,5,6,10,10,10,12,11,10,12,2,10,9,6,2,13,8,9,12,8,7,13,12,13,7,7,6,10,12,11,8,5,12,9,9,12,6,8,5,10,5,8,10,2,12,10,11~10,9,11,4,4,13,7,11,1,13,6,11,11,7,4,12,4,13,4,4,9,13,4,4,5,4,9,8,10,10,13,1,7,6,10,1,6,4,4,4,4,4,4,4,11,6,12,1,4,10,10,12,8,10,12,4,1,13,4,13,4,4,5,13,4,8,12,12,11,4,13,13,7,13,1,11,13,1,4,8,4,10,10,10,4,12,11,13,4,13,4,13,4,11,11,5,4,1,11,6,1,13,10,5,12,4,10,11,4,6,4,4,13,4,10,4,4,6,6,5,13,5,13,4~4,4,7,7,4,5,10,5,11,11,4,13,7,4,4,12,12,12,8,10,4,4,5,13,13,4,10,13,4,9,13,4,11,4,13,13,13,7,10,6,5,11,4,9,13,12,11,12,4,4,12,4,4,4,4,4,4,4,12,9,4,10,4,6,10,13,5,12,4,12,4,8,6,4,5,5,5,5,4,11,10,12,5,11,13,4,10,7,10,7,13,13,4,12,6,6,6,4,5,9,5,8,13,6,8,13,4,4,12,13,4,4,10,9,9,9,4,4,11,4,13,11,13,9,12,13,11,4,7,12,4,12,10,10,10,6,7,10,4,11,4,10,8,8,9,4,13,12,12,6,4,4,6~13,11,13,4,12,8,9,5,4,11,4,12,7,4,4,13,4,13,13,12,4,13,4,10,11,13,6,7,5,12,9,10,10,4,6,4,13,13,9,9,4,12,10,12,9,5,11,4,9,10,10,4,8,10,13,9,13,13,13,13,12,9,4,6,8,4,13,13,4,13,4,12,4,10,7,6,11,9,10,11,13,6,4,4,7,6,5,12,4,12,6,11,4,11,10,4,4,13,4,12,4,11,12,4,11,4,10,10,4,12,9,11,6,13,10,5,11,4,4,4,4,4,11,12,13,4,12,10,13,13,5,12,5,11,13,12,6,4,9,4,10,4,11,13,4,11,11,4,4,13,8,13,4,11,5,4,10,4,11,13,12,4,13,10,4,4,10,4,6,4,9,4,6,9,4,10,10,11,4,4~10,8,12,11,13,11,4,6,4,4,10,4,4,10,12,9,11,13,12,5,4,10,10,4,4,13,13,5,4,13,7,4,4,12,7,11,12,12,12,5,13,6,4,12,13,4,10,4,11,9,11,13,13,4,13,4,13,12,11,12,11,6,13,12,6,4,13,10,9,10,9,10,7,4,10,9,13,13,13,13,11,5,7,6,4,6,13,9,6,13,4,5,4,4,13,12,8,13,4,4,9,4,4,10,13,4,13,12,9,4,5,4,5,11,9,4,4,4,4,4,9,4,11,6,11,10,10,4,12,10,12,11,4,10,12,4,4,6,11,4,5,11,4,5,13,4,11,11,10,13,13,7,7,12,9,4,12,10,10,10,10,4,12,5,6,4,12,10,11,10,4,10,4,13,13,12,4,12,10,11,4,4,9,4,4,10,11,10,6,10,4,4,11,4,4,6,12,13,4&reel_set2=11,12,2~2,13,10~11,4,10,12,4,13,4,6,4,12,4,12,4,10,4,4,11,13,4,4,11,4,10,4,13,4,4,8,4,4,4,4,11,4,13,4,12,4,11,6,9,4,4,12,4,4,13,11,4,4,8,4,13,4,5,13,4,13,4,7,4,13,5,4~7,6,4,4,7,8,13,10,7,12,10,12,4,9,11,11,11,12,11,12,9,5,7,10,11,4,11,8,9,11,6,13,4,4,4,4,9,4,8,10,11,13,10,12,8,13,9,12,4,12,4,13~4,8,13,13,4,10,11,9,13,4,7,13,12,9,4,12,9,12,6,11,10,5,11,11,11,9,13,13,9,13,8,7,10,11,4,11,10,4,13,4,4,10,13,11,12,11,13,9,4,12,12,12,12,13,11,6,4,13,4,13,5,4,11,11,13,10,7,4,4,11,10,13,6,4,12,4,11,13,13,13,13,13,8,8,10,4,13,4,5,10,12,12,13,10,12,10,7,5,13,10,12,6,4,11,6,9,4,4,4,13,7,4,13,5,10,13,7,10,9,13,11,7,13,4,12,10,13,4,12,12,4,8,4,7,7,7,7,13,12,8,6,7,11,4,5,12,12,7,13,4,4,7,12,4,12,13,4,4,12,12,13,10,10,10,13,12,13,10,13,4,13,9,5,7,11,13,12,13,7,10,7,12,10,13,4,11,12,4,6~11,12,10,13,13,4,10,5,8,12,10,10,11,13,13,6,4,13,6,6,4,4,13,11,6,12,12,13,7,4,12,12,12,12,4,10,13,10,12,13,12,13,12,9,13,7,4,13,4,4,13,9,4,12,5,4,10,13,12,11,10,4,4,11,4,13,13,13,13,13,11,11,13,10,4,10,8,13,5,13,7,13,10,13,4,4,12,11,13,13,8,4,4,10,10,5,11,10,10,12,7,4,4,4,4,8,6,4,10,10,4,7,7,13,10,12,11,9,4,13,10,13,4,7,12,13,4,13,10,7,6,4,9,12,12,13,7,7,7,7,11,12,9,13,4,4,9,12,11,6,10,7,8,4,4,13,7,4,13,8,13,13,9,4,5,12,13,11,13,12,8,10,10,10,10,12,12,4,13,13,4,7,9,4,12,5,7,13,10,12,10,4,10,8,4,11,13,13,11,6,13,4,13,12,4,12,10&reel_set1=11,10,5,2,11,13,6,13,13,8,13,8,7,12,12,6,11,5,10,13,13,7,11,13,8,6,2,13,13,2,7,7,12,12,2,13,6,2,12,9,10,8,5,13,13,11,12,2,5,11,13,2,10,12,11,11,12,2,7,2,8,12,11,11,11,11,12,6,12,13,12,13,6,2,6,11,7,2,7,12,7,12,10,9,2,13,10,13,10,2,13,11,8,13,12,11,11,10,11,2,7,12,2,12,8,11,8,11,2,11,13,11,7,10,13,2,13,13,2,11,13,13,11,12,8,11,13,10,11,13,13,13,11,13,11,2,12,9,13,12,2,5,6,10,11,9,8,11,2,13,6,7,10,11,11,2,8,11,6,11,13,2,13,13,10,13,11,2,11,13,2,13,13,9,12,12,13,11,9,5,7,9,2,13,11,5,5,11,13,12,6,12,8,10,9,6~10,11,8,2,11,12,9,7,13,10,13,11,13,9,12,12,2,8,10,2,11,6,11,10,8,2,6,12,5,12,12,12,10,11,8,12,13,2,10,12,12,5,7,9,9,2,8,10,12,11,10,12,2,12,10,12,7,8,10,12,12,7,10,13,13,13,12,2,10,2,10,8,12,12,7,6,2,12,7,10,7,10,12,8,9,5,6,10,12,13,5,7,6,10,12,11,12,13~7,4,9,4,4,10,4,12,13,4,4,8,13,1,13,4,12,4,10,1,4,4,4,4,4,4,7,13,4,4,6,7,4,4,12,4,13,6,13,9,4,4,5,4,13,4,12,4,8,8,8,4,7,10,4,4,5,8,7,4,7,4,4,11,10,6,4,11,4,13,4,4,11,6~6,13,13,12,9,8,4,6,12,10,12,7,6,13,12,4,13,11,11,11,8,12,11,7,4,4,10,4,8,4,4,13,11,7,11,4,4,13,12,12,12,5,4,10,4,4,10,7,9,9,4,12,4,12,8,11,4,4,9,13,13,13,4,13,9,5,4,12,11,11,4,12,10,12,7,13,11,13,12,10,4,4,4,4,4,5,12,10,12,7,11,4,13,4,7,13,9,12,4,4,13,13,12,4,5,5,5,5,12,13,4,10,4,12,5,7,12,4,6,11,8,11,10,4,11,6,11,6,6,6,4,7,4,6,5,5,4,5,4,4,12,4,8,10,10,4,5,4,9,7,7,7,7,13,8,4,13,6,6,12,13,4,13,4,13,10,4,4,5,7,10,4,10,10,10,11,7,11,11,4,13,9,12,4,8,4,8,12,11,4,4,13,10,13~5,4,4,5,13,13,4,13,12,10,8,9,12,4,11,10,6,7,4,13,5,7,4,4,13,7,12,4,11,5,12,12,12,12,10,7,7,12,12,10,10,4,11,4,8,4,8,10,4,13,10,12,4,12,11,11,12,11,4,13,11,13,10,8,13,4,4,4,4,4,6,10,7,4,6,4,13,9,11,4,9,11,8,4,8,6,12,12,4,13,4,10,4,12,6,12,4,12,4,8,10,12,7,7,7,7,4,10,4,4,6,13,10,12,4,7,13,4,11,4,13,7,4,4,13,13,10,12,4,4,13,4,4,10,5,4,13,10,10,10,10,4,10,4,5,4,13,10,4,7,11,12,13,6,12,4,11,4,7,4,4,11,10,12,12,4,9,10,4,10,12,4,9~13,11,7,4,13,10,6,4,4,7,10,4,10,5,4,11,4,12,4,4,5,10,4,13,4,12,12,12,12,13,4,4,10,4,11,7,4,6,8,4,4,13,11,11,4,5,9,6,13,4,12,4,13,12,4,4,13,13,13,10,8,10,13,9,12,8,12,8,4,8,6,12,4,4,10,4,11,13,11,7,12,4,10,10,11,13,4,4,4,4,4,4,11,4,12,12,10,13,4,12,4,13,11,13,5,10,9,10,13,13,4,6,4,13,4,7,4,7,7,7,7,4,4,11,12,4,4,9,11,4,12,4,13,10,12,10,12,12,4,4,10,13,12,4,4,11,10,4,10,10,10,13,7,6,12,4,10,4,13,4,13,11,5,4,4,9,4,4,13,12,13,10,10,13,11,6,12,12,4&reel_set4=6,13,8,13,12,13,6,13,13,13,12,8,11,11,8,6,11,13,13,8~5,13,10,12,5,13,12,13,12,7,7,5,7,13,5,12,10,13,7~1,4,1,7,7,10,5,8,11,11,7,12,13,4,4,6,12,11,11,11,6,13,13,11,4,11,13,4,1,11,13,11,5,13,12,13,4,11,4,4,4,4,12,8,12,4,1,6,10,1,13,4,8,4,4,10,11,13,4,7,8,8,8,8,11,10,13,4,12,13,1,4,7,4,13,13,8,12,7,4,13,4,10,10,10,13,10,4,7,13,11,4,13,4,11,1,8,4,10,13,1,4,8,1~5,10,7,13,12,12,4,8,13,4,10,10,11,7,11,11,11,4,7,5,4,10,4,7,4,10,13,10,13,5,4,12,4,13,12,12,12,12,4,4,10,8,5,8,4,6,12,13,11,13,4,10,4,5,13,13,13,4,12,4,4,13,12,4,13,4,10,12,4,4,13,10,10,7,4,4,4,4,4,7,11,7,11,11,13,12,12,11,4,4,12,12,4,13,5,5,5,5,4,13,4,12,7,7,12,4,6,13,8,4,6,4,4,11,4,6,6,6,6,4,9,12,12,13,7,4,8,13,13,11,4,11,6,4,7,13,7,7,7,7,10,11,12,12,4,12,5,13,8,4,12,13,12,13,12,13,11,10,10,10,10,5,6,4,11,10,4,10,6,4,7,6,9,13,8,6,8,7,4~10,12,13,4,4,4,10,4,4,10,4,4,10,4,13,4,11,4,4,4,4,10,4,13,13,4,4,10,4,4,12,12,12,12,13,5,13,4,11,12,13,13,12,13,13,4,12,4,4,13,13,11,11,12,10,10,11,11,6,12,13,11,11,4,4,7,13,13,13,13,4,4,6,4,4,10,4,10,4,4,4,4,4,13,13,10,13,13,10,4,4,12,7,4,4,13,12,10,4,4,13,4,4,4,4,4,4,4,5,13,13,6,12,13,5,4,7,11,13,6,4,4,13,13,10,12,4,7,10,4,4,12,12,13,4,4,12,4,7,7,7,7,6,8,4,4,4,11,7,4,11,8,12,7,4,10,12,12,13,4,6,10,4,4,5,4,13,12,4,4,4,8,10,13,10,10,10,10,5,10,13,4,4,4,12,4,4,7,12,12,4,10,12,11,11,12,4,5,6,6,12,7,8,4,4,4,11,4,4,10,10~4,4,12,12,10,10,4,8,4,4,6,4,12,4,4,10,4,4,4,7,11,11,6,4,4,4,12,12,12,12,10,4,11,4,7,13,4,12,4,13,13,13,4,4,12,4,4,6,13,13,10,5,13,7,4,4,7,13,13,13,13,4,10,4,4,5,4,13,10,4,11,4,7,10,11,13,4,4,5,8,11,12,4,11,7,12,4,4,4,4,4,4,4,13,4,12,12,4,11,4,4,4,13,10,13,4,4,5,13,11,4,4,12,13,12,10,13,4,12,4,7,7,7,7,11,8,4,13,10,12,10,13,4,6,10,12,12,6,13,4,12,4,12,4,12,4,10,13,4,4,6,10,10,10,10,4,5,10,8,4,4,12,11,7,4,12,4,10,4,4,13,13,13,10,13,13,11,6,4,4,4,10&purInit=[{bet:1500,type:\"fs\"},{bet:3000,type:\"fs\"}]&reel_set3=13,2,10~11,12,2~4,13,13,10,13,10,1,7,9,13,4,6,10,13,13,13,7,13,13,5,7,4,6,13,4,9,11,4,8,4,9,4,4,4,4,4,4,12,4,13,4,10,4,4,12,13,4,11,4,4,10,10~10,7,12,10,7,4,4,6,8,9,4,12,8,11,11,11,12,8,13,12,5,9,13,13,11,10,10,12,9,11,13,13,13,9,4,4,11,6,13,9,11,10,9,11,13,12,13~11,4,13,11,13,4,6,12,4,13,4,4,13,4,13,12,12,12,12,4,4,9,4,10,12,7,13,4,7,10,13,4,11,6,13,4,4,13,13,13,13,13,6,9,11,13,13,12,10,6,12,6,10,9,4,10,4,13,4,4,4,4,4,4,11,12,13,10,12,10,13,13,12,9,13,4,4,9,4,10,11,4,6,6,6,13,9,4,13,13,12,13,5,7,12,8,9,4,13,7,4,13,7,7,7,7,9,12,8,8,12,12,13,10,5,4,12,13,12,11,7,7,13,7,9,9,9,11,9,10,10,13,4,13,12,10,13,11,6,11,9,4,10,13,11,10,10,10,9,13,4,4,5,12,10,13,4,11,7,5,4,4,10,12,13,12,7~9,4,10,4,4,13,13,12,13,13,12,11,11,11,5,9,9,4,9,13,4,12,10,10,4,13,6,12,12,12,12,6,4,7,5,4,4,13,11,10,13,4,13,7,13,13,13,13,13,7,8,4,4,12,4,12,13,11,13,4,4,4,4,4,4,12,12,6,10,11,5,12,4,10,7,12,12,13,6,6,6,13,10,4,13,10,9,9,7,4,9,10,4,11,7,7,7,7,12,4,13,10,10,7,13,12,13,4,9,9,9,8,11,13,11,13,5,6,9,12,6,13,4,12,10,10,10,11,4,13,8,11,11,13,4,11,4,13,4,12&reel_set6=2,13,7,13,5,10,9,2,13,7,13,13,8,2,11,9,10,11,13,13,11,13,11,2,12,13,9,7,2,10,12,6,2,12,5,5,6,5,11,13,12,13,2,9,11,11,12,13,7,6,11,13,11,11,11,11,11,12,11,8,13,13,11,2,6,10,7,9,12,11,6,13,11,12,11,11,7,2,6,11,12,11,11,10,2,11,13,8,2,10,9,7,10,11,8,13,2,9,13,8,11,12,11,13,5,7,13,11,13,2,6,12,13,13,13,2,11,10,8,8,9,13,2,12,5,2,10,9,11,11,9,11,12,7,11,8,2,13,13,2,9,8,10,11,5,13,12,11,2,13,12,6,2,11,12,2,7,6,8,12,12,2,13,7,8,13,13,2,9,13,12,10,13~2,5,12,11,2,11,10,12,6,12,8,2,10,7,10,10,7,8,12,13,12,9,2,12,10,2,10,2,10,12,5,12,11,7,10,11,13,10,9,2,12,10,10,11,8,2,12,7,12,8,12,6,12,12,12,12,5,9,10,12,10,9,11,5,8,10,7,13,12,9,13,6,5,13,6,12,2,7,10,10,2,12,2,13,2,12,7,12,11,2,8,2,10,2,9,10,12,8,11,8,10,12,12,2,12,12,8,12,10,6,2,7~11,1,12,12,13,7,8~10,7,11,12,11,12,13,8,6,13,6,13,7,13,13,11,11,11,8,11,4,13,10,4,12,10,12,11,13,12,4,13,10,4,11,12,12,12,12,5,5,11,13,12,7,11,4,13,13,10,12,4,13,4,8,13,13,13,12,4,5,12,10,4,6,10,8,12,4,13,13,5,5,11,4,4,4,4,4,7,4,6,4,4,10,6,13,11,13,7,4,13,11,12,8,12,5,5,5,5,4,13,4,13,4,6,8,8,4,10,5,13,4,7,4,10,4,6,6,6,12,13,12,12,4,8,11,7,4,6,10,12,4,11,4,6,7,7,7,7,11,12,4,11,12,4,11,4,13,10,10,12,7,7,4,8,10,10,10,10,12,4,12,4,12,13,4,7,4,11,7,5,13,4,8,4,8,13~11,4,12,11,6,12,11,4,8,4,13,4,4,7,4,6,11,4,10,12,12,12,12,13,13,4,11,4,4,12,13,4,13,4,7,4,5,4,12,4,4,12,4,13,13,13,13,4,13,4,13,4,4,10,4,13,12,13,10,12,4,10,10,4,13,12,12,4,4,4,4,4,4,4,13,5,4,11,10,4,4,12,4,4,13,13,10,10,4,4,10,4,4,7,7,7,7,12,11,10,4,4,10,6,4,4,11,13,4,13,4,8,13,4,7,4,12,10,10,10,10,4,13,4,11,4,4,11,6,8,7,13,12,10,5,7,12,12,13,10,10,6~8,11,13,10,10,4,4,13,13,4,4,10,4,5,4,6,10,13,10,4,11,5,12,12,12,12,4,6,4,10,4,4,12,11,4,4,6,4,7,7,12,4,4,6,4,8,10,4,10,7,13,13,13,13,12,12,13,4,11,11,13,4,13,4,4,12,4,13,4,12,10,12,13,4,13,11,13,12,4,4,4,4,4,4,4,12,10,12,13,4,4,13,13,12,8,4,7,13,12,5,4,10,4,4,10,13,12,5,7,7,7,7,12,12,4,13,12,11,4,4,7,10,4,4,6,12,4,4,12,4,4,11,4,13,10,13,10,10,10,10,4,13,4,4,10,4,5,10,4,11,4,4,11,4,13,11,4,4,13,4,11,10,6,7,4&reel_set5=11,13,8,6,13,8,13,13,13,8,6,13,11,13,11,6,13,8,13~5,7,7,5,10,10,10,12,5,12,10,12,10,12,7~4,4,4,4,4,12,13,13,8,7,1,4,12,4,4,7,4,10,9,10,4,4,4,5,4,4,8,5,8,4,12,11,6,4,4,4,10,4,4,4,4,4,5,7,10,7,13,11,13,1,9,11,4,7,4,5,6,12,13,4,4,6,10,4,9,4,11,7,7,4,13,4,13,11,7,10,9,4,12,4,7,4,4,5,8,8,8,6,13,10,8,4,4,4,1,4,7,4,13,4,6,6,4,4,4,4,13,4,4,4,4,13,10,13,4,4,13,13,7,4,4,4,12,11,4,13,6,5,4,4~9,12,11,11,4,4,13,4,12,13,4,11,11,11,13,4,12,7,7,10,4,11,4,12,4,10,5,12,12,12,4,4,7,4,9,12,12,4,8,4,13,12,9,13,13,13,8,7,6,13,4,11,5,12,4,4,12,10,11,4,4,4,4,4,13,9,4,13,10,13,12,10,4,12,13,5,5,5,5,4,11,8,10,5,9,6,12,13,4,8,6,5,6,6,6,10,4,12,10,11,7,13,10,13,12,11,13,6,7,7,7,7,4,4,13,4,4,11,5,4,11,9,12,13,4,10,10,10,12,8,4,7,4,8,4,6,10,13,7,12,13,11~13,8,6,13,12,4,10,8,9,8,4,4,7,10,13,5,8,4,6,4,13,10,13,12,12,12,12,4,12,4,13,8,8,4,11,4,11,10,5,7,10,4,4,10,13,7,12,4,12,13,12,9,4,4,4,4,4,11,4,6,12,4,11,10,12,4,5,4,12,9,10,11,4,7,5,10,5,4,11,6,4,6,7,7,7,7,12,4,13,13,4,10,4,9,7,10,13,4,4,11,4,10,10,4,10,7,4,4,13,12,12,6,10,10,10,10,4,13,4,4,12,5,12,4,13,4,7,10,12,13,11,4,11,13,7,4,12,11,4,11,10,12,4~13,12,4,4,11,12,4,7,11,4,12,8,7,6,12,13,4,4,13,4,12,9,4,4,7,4,10,8,13,12,12,12,12,4,4,10,12,5,9,12,4,4,6,4,4,10,11,4,10,7,12,4,4,10,13,13,4,13,9,4,10,11,11,12,13,13,13,12,4,13,10,13,12,4,5,4,13,10,4,13,4,10,4,13,6,10,4,4,12,4,9,13,8,12,13,7,4,4,4,4,4,4,5,4,10,6,11,12,11,4,4,8,7,11,10,4,12,12,13,4,4,10,13,4,11,4,4,10,8,4,12,7,7,7,7,4,4,10,4,10,4,11,10,10,7,4,11,5,13,6,13,6,4,13,4,11,4,13,5,4,10,13,10,11,10,4,10,10,10,4,7,12,4,6,9,10,5,11,4,12,4,8,11,4,4,9,13,11,13,4,6,13,12,4,10,4,12,12,13,11,12&reel_set8=6,5,13,2,13,11,12,6,11,13,9,11,5,12,7,7,13,10,5,7,7,11,2,8,5,10,6,10,12,13,10,6,11,12,2,6,12,13,8,11,7,2,11,11,12,7,8,13,10,13,13,5,5,12,12,11,12,5,13,5,12,13,13,10,13,13,13,8,9,6,11,10,11,13,10,2,11,13,10,13,8,5,5,2,9,13,6,6,8,9,11,8,11,11,6,9,13,7,11,8,12,11,12,6,13,5,6,11,10,6,5,5,13,12,6,8,13,12,10,8,13,9,12,7,6,10,12,6,9,5,9,13,13~2,9,7,10,6,12,6,12,6,13,12,6,9,8,8,6,12,12,10,8,8,5,8,6,5,9,10,10,13,12,11,10,12,12,12,12,10,12,11,13,12,10,12,8,10,11,7,12,10,2,10,2,10,9,2,11,12,5,12,2,8,10,10,13,5,12,7,11,9,12,8,8,8,12,7,12,6,12,7,8,12,10,8,6,12,8,12,10,12,11,10,8,10,5,9,13,5,2,7,7,11,5,11,12,12,10,9,6,10~13,8,9,12,11,12,6,13,5,13,7,5,13,9,6,11,13,6,10,10,13,7,7,7,9,13,7,8,13,7,8,11,5,10,10,8,10,11,8,13,13,6,11,10,7,11,11,10,10,10,5,9,13,5,9,12,13,13,6,8,13,7,11,6,6,11,12,10,6,10,7,5,11,12~4,13,10,5,11,5,13,4,4,7,7,13,4,10,13,13,7,4,4,9,4,10,7,11,12,12,12,4,4,10,8,4,4,13,4,7,12,10,12,10,10,4,12,13,12,6,6,4,13,5,4,5,13,13,13,11,4,12,6,11,9,4,6,10,13,6,12,13,6,11,11,6,12,13,12,4,13,4,4,12,4,4,4,4,4,4,4,7,4,10,12,6,12,12,10,13,5,4,12,12,6,12,4,10,7,8,6,7,4,8,13,4,5,5,5,5,10,13,8,4,4,10,4,11,5,13,9,13,7,12,12,4,5,11,4,5,5,10,10,8,5,6,6,6,13,5,5,9,7,4,4,13,12,11,6,11,10,11,5,5,4,4,10,4,4,13,12,4,12,10,10,10,4,7,7,13,12,11,4,12,6,10,10,13,11,6,10,13,13,8,11,11,4,4,13,4,5,4,7~4,6,4,4,13,10,4,6,6,4,4,7,12,11,12,4,13,4,8,4,4,10,12,12,12,12,4,13,10,10,4,11,5,8,10,10,4,4,13,13,4,11,5,12,4,12,12,13,11,13,13,13,13,10,11,10,12,10,11,4,13,12,12,10,12,11,12,13,9,13,4,12,11,13,4,9,4,4,4,4,4,4,8,12,13,4,5,8,7,5,13,4,4,10,4,10,11,4,4,10,4,4,12,10,10,10,10,4,10,4,13,13,5,10,13,11,11,6,4,11,9,13,7,4,13,4,11,12,5,10,4,13~12,9,12,4,13,11,7,5,6,6,8,4,11,13,4,10,10,13,10,4,12,10,4,4,9,4,13,12,12,12,12,10,4,4,13,10,10,5,12,11,4,4,9,4,10,13,12,13,11,13,4,4,12,4,5,12,5,10,13,13,13,13,10,4,6,4,4,11,8,11,4,4,12,4,11,10,8,4,4,13,13,4,11,11,4,13,5,4,11,12,4,4,4,4,4,4,10,11,5,11,13,4,12,13,12,13,13,10,4,12,4,10,4,11,4,12,4,4,11,5,11,13,4,10,10,10,10,13,6,4,13,4,7,4,11,6,5,10,4,13,12,10,6,13,10,13,12,12,7,4,4,13,10,4,10,12,4&reel_set7=5,6,11,13,13,11,12,13,8,12,13,11,8,11,8,13,10,9,13,13,10,10,11,13,12,11,13,13,6,9,5,13,13,11,10,13,12,13,10,13,7,13,10,12,13,5,11,5,13,6,5,7,12,9,13,6,5,13,11,12,8,13,6,11,11,12,13,11,8,13,10,2,7,9,5,12,13,13,11,13,12,10,6,10,13,13,12,11,11,6,12,9,13,13,13,6,8,8,5,6,13,8,11,7,9,5,12,10,11,6,13,9,11,7,2,12,11,5,12,6,7,8,6,10,7,11,11,12,12,9,6,9,13,5,6,10,6,12,11,10,13,10,8,5,7,7,6,6,11,13,10,13,5,6,11,13,11,10,13,5,13,12,11,10,9,6,13,13,12,11,7,2,12,7,12,9,8,8,12,11,11,7,2,13,5,9,12,10,5,11,6~6,6,10,11,8,10,10,13,13,10,11,10,10,11,10,12,10,11,11,12,7,12,7,10,9,8,12,8,6,12,12,12,12,8,12,6,12,10,6,12,11,6,10,12,13,12,8,2,12,10,10,12,10,7,8,9,5,12,10,12,12,2,8,10,10,10,10,13,2,12,12,10,5,12,5,12,9,10,10,5,5,12,10,11,12,10,12,10,10,8,6,12,7,11,9,7,9,12,10~4,1,4,8,4,8,4,6,13,6,8,11,12,13,13,6,1,10,11,7,11,6,6,4,8,4,4,5,10,4,11,13,13,1,3,10,4,12,4,9,7,4,4,4,4,4,4,4,13,4,11,13,13,4,5,7,5,13,13,7,11,12,4,5,1,13,4,10,13,13,10,4,11,4,4,6,10,4,7,4,4,1,13,8,4,7,10,12,6,1,4~4,7,4,7,13,4,4,7,12,6,12,8,4,12,10,9,13,11,11,11,4,4,11,5,12,8,12,10,12,7,11,8,11,8,4,12,4,4,12,12,12,7,8,11,12,12,4,10,5,9,13,7,10,4,10,4,8,11,10,13,13,13,6,12,10,10,13,4,5,6,12,11,13,8,4,10,13,6,12,5,4,4,4,4,4,4,4,13,12,13,4,8,7,7,4,5,12,6,4,13,4,11,13,5,5,5,5,13,4,10,5,13,6,12,13,12,11,5,6,4,4,13,6,4,10,6,6,6,10,13,13,4,5,4,13,4,10,13,13,7,12,4,11,4,5,4,10,10,10,12,11,4,6,5,6,7,13,11,4,4,11,7,5,4,6,4,10,4~9,10,4,7,4,10,10,4,13,7,13,4,4,10,13,10,10,12,11,13,8,6,11,11,4,4,12,6,12,12,4,13,13,4,10,5,10,6,10,12,12,12,12,10,4,12,4,5,4,4,6,6,7,4,10,8,12,11,11,7,10,4,11,12,4,9,4,12,13,10,4,8,13,4,5,13,13,4,4,8,12,6,4,4,13,13,13,13,12,10,4,13,13,10,13,11,10,8,13,5,5,11,4,13,5,13,12,13,10,11,12,13,13,4,10,12,10,11,11,4,11,4,11,13,4,4,11,11,4,4,4,4,4,4,11,4,10,4,4,7,4,12,6,4,12,13,5,4,5,11,4,12,4,11,11,6,12,12,10,4,13,4,10,11,5,10,13,4,7,12,4,9,4,4,10,10,10,10,13,4,11,10,4,12,5,4,12,4,4,11,4,13,13,12,13,12,4,4,10,13,6,12,4,10,13,6,4,7,11,6,4,4,13,13,5,4,10,4,4,12~12,12,4,12,13,13,4,13,10,4,12,4,11,4,4,7,10,4,12,4,11,12,13,5,4,7,8,11,11,4,4,11,13,12,12,12,12,4,6,13,13,4,4,5,4,4,10,9,5,5,4,11,10,5,13,4,7,11,4,13,13,10,12,10,7,4,12,10,8,10,13,13,13,13,4,4,12,13,11,4,10,10,5,4,7,12,4,13,10,13,6,4,10,10,13,11,5,11,7,4,4,12,4,5,12,4,12,6,4,4,4,4,4,4,6,11,12,11,5,6,10,13,10,12,4,13,10,11,10,6,4,12,10,6,4,13,8,4,4,6,10,13,10,13,4,4,11,10,10,10,10,4,13,12,11,13,12,4,9,4,12,4,10,11,4,10,8,12,4,13,11,12,4,6,4,13,13,11,4,11,4,4,10,4,13,4,4&reel_set9=13,2,10~11,12,2~4,13,7,4,11,13,4,4,8,12,4,4,13,4,5,9,4,4,6,4,4,4,4,4,9,11,12,4,12,4,4,5,4,4,11,13,11,6,4,10,4,13,4,4,10,4~13,7,12,7,4,10,4,4,7,11,11,11,12,4,12,12,9,12,4,10,5,12,10,12,12,12,12,13,8,7,4,13,9,7,13,11,6,4,4,4,4,11,12,11,11,10,12,12,6,11,4,10,9~4,13,13,4,12,13,10,4,6,12,4,13,13,5,4,7,7,11,11,11,13,7,4,13,4,5,10,4,10,5,13,4,12,11,10,13,12,4,11,12,12,12,4,6,6,7,4,6,10,7,11,12,7,13,11,7,13,13,5,13,12,13,13,13,13,13,11,4,4,6,10,9,10,10,9,6,4,12,13,9,4,5,13,4,4,4,4,4,13,4,12,10,6,10,13,4,4,5,10,12,7,11,4,10,11,4,6,6,6,12,11,13,12,12,4,7,4,4,12,11,13,4,12,13,12,11,10,4,7,7,7,7,4,9,10,13,4,4,11,11,5,12,12,8,13,4,13,9,12,12,10,10,10,10,9,13,7,13,13,10,13,10,9,13,13,12,11,9,7,10,11,4,8,10~11,9,13,11,12,10,12,10,13,12,4,13,13,12,13,13,11,13,7,7,12,12,12,10,6,8,4,13,6,13,4,12,4,9,13,4,13,11,11,4,7,13,7,13,7,13,13,13,13,13,9,12,10,13,13,12,4,13,4,8,10,4,13,10,4,12,11,10,13,4,12,10,4,4,4,4,4,11,12,10,4,13,4,6,5,4,4,7,4,10,13,9,13,9,13,10,12,6,6,6,4,13,10,12,6,13,8,13,13,4,10,4,5,13,11,13,13,12,12,9,4,4,7,7,7,7,10,6,4,7,4,11,12,4,11,12,11,13,4,7,10,4,7,4,11,6,10,4,10,10,10,10,13,13,10,4,9,8,5,7,13,4,10,5,9,13,12,10,12,4,10,10,5,11,13&total_bet_min=100.00";
            }
        }
        protected override double PurchaseFreeMultiple
        {
            get { return 75; }
        }
        protected override bool SupportPurchaseFree
        {
            get { return true; }
        }
        protected override bool HasPurEnableOption
        {
            get { return true; }
        }
        protected override double MoreBetMultiple
        {
            get { return 1.5; }
        }
        protected override bool SupportMoreBet
        {
            get { return true; }
        }
        protected int FreePurCount
        {
            get { return 2; }
        }
        public double[] PurchaseMultiples
        {
            get { return new double[] { 75, 150 }; }
        }
        #endregion
        public WildWildPearlsGameLogic()
        {
            _gameID     = GAMEID.WildWildPearls;
            GameName    = "WildWildPearls";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["reel_set"] = "0";
	        dicParams["st"] = "rect";
	        dicParams["sw"] = "6";
	        dicParams["bl"] = "0";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            if (dicParams.ContainsKey("wlc_v"))
            {
                string[] strParts = dicParams["wlc_v"].Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                for (int i = 0; i < strParts.Length; i++)
                {
                    string[] strValues = strParts[i].Split(new string[] { "~" }, StringSplitOptions.RemoveEmptyEntries);
                    strValues[1] = convertWinByBet(strValues[1], currentBet);
                    strParts[i] = string.Join("~", strValues);
                }
                dicParams["wlc_v"] = string.Join(";", strParts);

            }

            if (dicParams.ContainsKey("mo_tw"))
                dicParams["mo_tw"] = convertWinByBet(dicParams["mo_tw"], currentBet);

            base.convertWinsByBet(dicParams, currentBet);
        }
        protected override void readBetInfoFromMessage(GITMessage message, string strGlobalUserID, Currencies currency)
        {
            try
            {
                string strInitString = ChipsetManager.Instance.convertTo(currency, this.InitDataString, this.SymbolName);
                var dicParams = splitResponseToParams(strInitString);

                double minChip = 0.0, maxChip = 0.0;
                getMinMaxChip(dicParams["sc"], ref minChip, ref maxChip);


                WildWildPearlsBetInfo betInfo = new WildWildPearlsBetInfo();
                betInfo.BetPerLine  = (float)message.Pop();
                betInfo.LineCount   = (int)message.Pop();

                int bl = (int)message.Pop();
                if (bl == 0)
                    betInfo.MoreBet = false;
                else
                    betInfo.MoreBet = true;

                if (message.DataNum >= 3)
                {
                    betInfo.PurchaseFree = true;
                    betInfo.PurchaseType = (int)message.GetData(2);
                }
                else
                    betInfo.PurchaseFree = false;

                if (betInfo.BetPerLine <= 0.0f)
                {
                    _logger.Error("{0} betInfo.BetPerLine <= 0 in WildWildPearlsGameLogic::readBetInfoFromMessage {1}", strGlobalUserID, betInfo.BetPerLine);
                    return;
                }

                if (!isNotIntergerMultipleBetPerLine(betInfo.BetPerLine, minChip))
                {
                    _logger.Error("{0} betInfo.BetPerLine is illegual: {1} != {2} * integer", strGlobalUserID, betInfo.BetPerLine, minChip);
                    return;
                }

                if (betInfo.LineCount != this.ClientReqLineCount)
                {
                    _logger.Error("{0} betInfo.LineCount is not matched {1} != {2}", strGlobalUserID, betInfo.LineCount, this.ClientReqLineCount);
                    return;
                }
                BasePPSlotBetInfo oldBetInfo = null;
                if (_dicUserBetInfos.TryGetValue(strGlobalUserID, out oldBetInfo))
                {
                    if (oldBetInfo.HasRemainResponse)
                        return;

                    oldBetInfo.BetPerLine   = betInfo.BetPerLine;
                    oldBetInfo.LineCount    = betInfo.LineCount;
                    oldBetInfo.MoreBet      = betInfo.MoreBet;
                    oldBetInfo.PurchaseFree = betInfo.PurchaseFree;
                    (oldBetInfo as WildWildPearlsBetInfo).PurchaseType = betInfo.PurchaseType;
                }
                else
                {
                    _dicUserBetInfos.Add(strGlobalUserID, betInfo);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in WildWildPearlsGameLogic::readBetInfoFromMessage {0}", ex);
            }
        }
        protected override BasePPSlotBetInfo restoreBetInfo(string strGlobalUserID, BinaryReader reader)
        {
            WildWildPearlsBetInfo betInfo = new WildWildPearlsBetInfo();
            betInfo.SerializeFrom(reader);
            return betInfo;
        }
        protected override BasePPSlotBetInfo newBetInfo()
        {
            return new WildWildPearlsBetInfo();
        }
        protected override double getPurchaseMultiple(BasePPSlotBetInfo betInfo)
        {
            int purchaseType = (betInfo as WildWildPearlsBetInfo).PurchaseType;
            return this.PurchaseMultiples[purchaseType];
        }
        protected override async Task onLoadSpinData(BsonDocument infoDocument)
        {
            try
            {
                _spinDataDefaultBet = (double)infoDocument["defaultbet"];
                _normalMaxID        = (int)infoDocument["normalmaxid"];
                _emptySpinCount     = (int)infoDocument["emptycount"];
                _naturalSpinCount   = (int)infoDocument["normalselectcount"];

                _multiTotalFreeSpinWinRates = new double[FreePurCount];
                _multiMinFreeSpinWinRates   = new double[FreePurCount];

                if (SupportPurchaseFree)
                {
                    var purchaseOdds = infoDocument["purchaseodds"] as BsonArray;
                    for (int i = 0; i < FreePurCount; i++)
                    {
                        _multiMinFreeSpinWinRates[i] = (double)purchaseOdds[2 * i];
                        _multiTotalFreeSpinWinRates[i] = (double)purchaseOdds[2 * i + 1];

                        if (this.PurchaseMultiples[i] > _multiTotalFreeSpinWinRates[i])
                            _logger.Error("freespin win rate doesn't satisfy condition {0}", this.GameName);
                    }
                }

                if (this.SupportMoreBet)
                {
                    _anteBetMinusZeroCount = (int)((1.0 - 1.0 / MoreBetMultiple) * (double)_naturalSpinCount);
                    if (_anteBetMinusZeroCount > _emptySpinCount)
                        _logger.Error("More Bet Probabily calculation doesn't work in {0}", this.GameName);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occured in loading spin data of game {0} {1}", GameName, ex);
            }
        }
        protected override async Task<BasePPSlotSpinData> selectPurchaseFreeSpin(int agentID, BasePPSlotBetInfo betInfo, double baseBet, UserBonus userBonus, bool isAffiliate)
        {
            int purchaseType = (betInfo as WildWildPearlsBetInfo).PurchaseType;
            double payoutRate = getPayoutRate(agentID, isAffiliate);

            double targetC = PurchaseMultiples[purchaseType] * payoutRate / 100.0;
            if (targetC >= _multiTotalFreeSpinWinRates[purchaseType])
                targetC = _multiTotalFreeSpinWinRates[purchaseType];

            if (targetC < _multiMinFreeSpinWinRates[purchaseType])
                targetC = _multiMinFreeSpinWinRates[purchaseType];

            double x = (_multiTotalFreeSpinWinRates[purchaseType] - targetC) / (_multiTotalFreeSpinWinRates[purchaseType] - _multiMinFreeSpinWinRates[purchaseType]);
            double y = 1.0 - x;

            BasePPSlotSpinData spinData = null;
            if (Pcg.Default.NextDouble(0.0, 1.0) <= x)
                spinData = await selectMinStartFreeSpinData(betInfo);
            else
                spinData = await selectRandomStartFreeSpinData(betInfo);
            return spinData;
        }
        protected override async Task<BasePPSlotSpinData> selectMinStartFreeSpinData(BasePPSlotBetInfo betInfo)
        {
            try
            {
                BsonDocument spinDataDocument = null;
                int purchaseType = (betInfo as WildWildPearlsBetInfo).PurchaseType;
                spinDataDocument = await Context.System.ActorSelection("/user/spinDBReaders").Ask<BsonDocument>(
                        new SelectSpinTypeOddRangeRequest(GameName, -1, PurchaseMultiples[purchaseType] * 0.2, PurchaseMultiples[purchaseType] * 0.5, purchaseType), TimeSpan.FromSeconds(10.0));
                return convertBsonToSpinData(spinDataDocument);
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in WildWildPearlsGameLogic::selectMinStartFreeSpinData {0}", ex);
                return null;
            }
        }
        protected override async Task<BasePPSlotSpinData> selectRandomStartFreeSpinData(BasePPSlotBetInfo betInfo)
        {
            try
            {
                int purchaseType = (betInfo as WildWildPearlsBetInfo).PurchaseType;
                var spinDataDocument = await Context.System.ActorSelection("/user/spinDBReaders").Ask<BsonDocument>(
                        new SelectPurchaseSpinRequest(GameName, StartSpinSearchTypes.MULTISPECIFIC, purchaseType),
                        TimeSpan.FromSeconds(10.0));

                return convertBsonToSpinData(spinDataDocument);
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in WildWildPearlsGameLogic::selectRandomStartFreeSpinData {0}", ex);
                return null;
            }
        }
        protected override void overrideSomeParams(BasePPSlotBetInfo betInfo, Dictionary<string, string> dicParams)
        {
            if (SupportPurchaseFree && betInfo.PurchaseFree)
                dicParams["puri"] = (betInfo as WildWildPearlsBetInfo).PurchaseType.ToString();
        }
        protected override UserSpinItem createUserSpinItem(int agentID, string strUserID, BasePPSlotBetInfo betInfo, double betMoney)
        {
            WildWildPearlsBetInfo starBetInfo = betInfo as WildWildPearlsBetInfo;
            return new UserSpinItem(agentID, strUserID, this.SymbolName, betInfo.BetPerLine, betInfo.LineCount, -1, betInfo.PurchaseFree ? starBetInfo.PurchaseType : -1, betMoney);
        }
    }
}
