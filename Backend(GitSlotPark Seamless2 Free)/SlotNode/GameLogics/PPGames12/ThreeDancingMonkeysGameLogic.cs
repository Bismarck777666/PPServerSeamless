using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class ThreeDancingMonkeysBetInfo : BasePPSlotBetInfo
    {
        public override float TotalBet
        {
            get { return this.BetPerLine * 30.0f; }
        }
    }
    class ThreeDancingMonkeysGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vswaysmonkey";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return true;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 30; }
        }
        protected override int ServerResLineCount
        {
            get { return 30; }
        }
        protected override int ROWS
        {
            get
            {
                return 5;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=6,10,9,4,11,3,12,5,3,12,6,9,10,8,10,21,21,21,21,21,21,21,21,21,21&cfgs=7505&ver=3&mo_s=22;23&mo_v=30,35,40,45,50,60,70,80,100,200,250,1000,5000;1,2,3,4,5,6,7,8,9,10,12,15,20,25,30,42&def_sb=6,12,6,6,10&reel_set_size=9&def_sa=3,11,5,8,11&scatters=1~0,0,0,0,0~0,0,0,0,0~1,1,1,1,1&rt=d&gameInfo={props:{max_rnd_sim:\"1\",max_rnd_hr:\"156223251\",max_rnd_win:\"12077\"}}&wl_i=tbm~12077&sc=6.00,12.00,18.00,24.00,30.00,60.00,90.00,120.00,150.00,250.00,350.00,500.00,800.00,1600.00,2500.00,3600.00&defc=30.00&purInit_e=1&wilds=2~0,0,0,0,0~1,1,1,1,1;13~0,0,0,0,0~1,1,1,1,1;14~0,0,0,0,0~1,1,1,1,1;15~0,0,0,0,0~1,1,1,1,1&bonuses=0&paytable=0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;200,75,30,0,0;150,50,25,0,0;70,30,20,0,0;60,25,18,0,0;50,20,15,0,0;35,15,10,0,0;20,12,8,0,0;15,8,7,0,0;12,5,3,0,0;10,5,2,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;0,0,0,0,0&total_bet_max=10,800,000.00&reel_set0=4,8,3,10,7,11,9,11,6,16,8,10,7,8,10,8,6,5,9,8,11,17,4,12,8,10,12,9,8,12,8,7,4,11,6,8,9,7,5,9,7,8,6,10,11,12,9,3,10,3,10,7,5,3,4,8,4,9,18,6,9,7,12,10,9,6,11,9,10,8,4,8,9,10,7,9,10,11,7,11,5,8,5,12,8,3,8,6,12,7,12,9,4,18,11,16,9,4,5,9,11,12,6,9,12,10,8,9,11,17,4,9,12,4,10,11,8,9,11,6,5,10~2,9,7,11,12,6,12,11,9,10,3,17,8,10,11,16,4,9,8,6,3,8,9,8,2,6,12,9,18,7,10,8,9,10,7,11,10,6,11,8,11,9,18,9,11,7,11,5,11,6,9,10,8,12,10,4,8,10,8,4,11,12,16,8,10,12,5,9,10,9,8,7,8,9,11,8,11,12,9,8,9,17,3,5,6,12,8,12,7,10,8,11,12,6,8,9,4,8,5,9,8,5,9,12,8~7,4,3,10,12,8,7,12,9,4,10,12,7,9,11,17,12,10,9,11,10,6,4,6,9,11,2,8,8,9,7,11,16,8,8,3,18,9,8,10,3,5,6,9,12,11,10,5,12,11,10,9,7,12,4,17,8,16,4,9,12,3,8,8,8,10,11,8,8,10,4,10,7,8,9,10,11,4,11,9,10,8,10,9,7,3,9,7,11,6,10,4,8,4,11,2,10,18,8,6,8,11,4,8,9,6,9,11,9,3,7~11,8,11,9,5,6,4,10,9,5,3,9,11,11,10,6,12,10,4,10,9,2,10,12,11,18,11,8,8,11,11,10,8,12,11,12,8,8,7,11,12,10,11,8,10,17,3,10,7,9,12,11,11,8,8,3,8,10,6,10,9,11,18,6,9,4,11,9,10,9,8,10,4,10,8,11,3,2,8,8,10,11,10,12,16,17,7,10,9,8,8,9,5,9,16,9,8,8,7,12,11,8,10,12,10,11,8,6,8,10,11,8,10,9,11,4,12,9,8,8,4,3,11,7,8,12,10,4,9,4,8,9,10,8,4,11,9~3,16,8,4,9,11,3,8,3,11,7,18,3,9,11,17,5,10,8,10,3,12,6,7,12,16,8,5,8,11,9,11,10,12,7,8,11,5,11,8,5,11,5,11,8,9,10,6,9,10,12,11,4,12,9,6,18,8,5,17,7,4,8,10,3,11,8,9,3,5,7,6,4,7,7,8,4,6,7,8,9,12,11,6,12,7,4,9,8,7,8,11,9,6,4,12,4,6,8&accInit=[{id:0,mask:\"bd_sways;bd_swilds;bd_swins\"},{id:1,mask:\"sways;swilds;swins\"}]&reel_set2=12,5,9,7,3,8,11,5,11,3,8,5,11,8,7,3,9,4,6,11,19,9,12,3,9,6,19,10,19,4,9,18,17,7,4,10,7,9,5,4,9,10,12,11,10,8,10,12,11,5,8,10,5,17,11,8,10,9,7,6,4,4,6,9,11,8,5,12,8,6,8~4,9,7,9,8,11,7,9,2,12,11,9,8,17,10,6,5,8,12,8,12,9,12,8,12,8,6,10,7,12,9,11,8,5,8,4,19,17,18,5,9,6,11,3,2,6,10,8,7,9,10,12,9,19~18,11,9,7,17,10,7,9,4,2,5,9,10,6,11,9,11,9,10,7,19,2,8,10,7,10,3,4,8,4,3,9,8,7,9,8,12,9,10,11,19,8,6,11,8,7,11,8,6,10,6,12,9,3,11~9,10,8,10,9,7,11,9,10,8,6,8,5,2,9,3,8,10,17,9,12,8,2,10,8,6,17,2,12,9,3,4,6,9,10,11,4,19,11,8,9,8,10,11,9,6,19,10,5,11,9,10,11,7,9,8,11,9,8,11,9,4,10,11,19,11,8,4,9,10,12,8,11,11,9,8,8,9,11,12,4,10,12,11,10,11,11,10,4,11,11,5,8,9,18,8,19,8,11,8,4,2,11,9,3,11,12,9,10,11,4,11,9,7,9,5,9,10,4,9,11,10,8,18,12,9,10,7,10,9,3,10,6,10,9,10,11,11,6,8,11,9,3,8,3,12~12,9,12,10,11,10,3,11,3,12,19,8,9,4,9,18,8,11,4,12,8,6,5,12,10,6,8,7,10,6,9,8,6,10,8,7,8,11,5,4,8,6,8,10,7,19,8,9,4,12,4,6,10,8,4,8,7,11,3,8,7,5,8,10,11,3,6,4,11,8,3,19,8,12,9,6,11,7,3,9,6,10,5,12,11,5,9,12,8,9,17,9,3,8,3,5,11,7,8,7,5,3,11,4,10,3,12,4,10,6,11,9,12,4,9,11,4,17,7,19,8,11,7,10&reel_set1=4,3,12,10,12,8,17,5,10,6,8,11,10,9,8,5,7,18,5,8,12,5,3,9,12,11,9,11,9,11,4,4,8,7,9,10,8,5,4,11,8,12,5,10,11,12,10,8,11,9,5,9,8,9,4,3,12,10,4,10,8,11,7,10,12,7,12,9,5,9,5,12,11,7,4,12,9,4,7,17,3,8,6,8,6,7,5,6,9,6,4,18,12~9,4,8,11,2,3,12,8,9,6,10,16,9,8,3,9,5,11,3,6,11,8,4,11,10,5,8,9,12,7,9,8,9,12,7,11,10,9,5,12,2,9,12,8,7,12,8,6,12,9,10,11,8,12,2,17,7,18,6,5,8,10~11,8,4,12,9,11,12,9,12,10,11,8,12,2,4,5,8,8,17,4,11,7,8,11,8,10,9,7,3,8,10,3,11,8,6,6,7,6,9,4,6,12,7,9,10,3,6,11,11,7,8,9,10,12,4,3,8,7,5,16,11,9,3,4,10,11,8,3,11,12,8,8~9,7,9,8,9,11,11,17,11,11,3,10,8,4,12,9,11,8,6,9,8,8,10,8,8,6,11,8,9,10,9,10,9,12,10,12,9,10,5,8,18,16,3,4,8,10,8,8,6,3,12,4,9,11,12,7,16,3,11,5,11,5,10,4,10,8,11,4,6,7,8,18,8,2,11,11,9,11,10,17,10,11,2,9,11,9,6,8,9,4,10,12,10,12,12,2,9,12,10,8~11,12,9,8,6,10,3,11,12,5,8,6,8,5,12,3,11,9,11,3,10,11,8,3,7,7,5,8,9,3,4,9,11,3,7,5,4,8,9,8,10,12,10,3,12,5,8,6,7,9,18,10,4,9,8,10,7,8,9,4,6,12,8,12,6,9,6,17,7,8,7,4,6,10,12,6,11,10,11,17,8,11,4,9,4,4,7,3,10,8,7,9,12,5,4,18,5,11,4,10,7,7&reel_set4=12,8,9,10,7,8,12,5,6,3,5,4,7,19,11,10,8,4,9,11,12,11,16,9,11,4,12,17,19,6,8,10,17,19,10,11,3,7,8,5,12,10,11,3,6,7,9,5,8,5,11,19,8,9,7,9,5,4,9,5~9,4,11,12,8,19,7,6,11,7,9,13,9,8,9,8,9,8,3,7,19,10,6,9,12,6,10,13,19,7,8,12,8,11,5,12,11,12,12,9,5,19,9,10,3,19,15,17,4,5,14,7,8,10,17,12,9,12,8,9,8,7,12,6,8,3,8,11,10,8,6,10,9,16,12~11,8,19,15,10,6,9,7,10,9,6,4,6,10,7,8,7,9,8,7,11,10,6,4,8,9,8,7,9,12,8,4,7,11,5,3,11,3,17,10,7,13,16,9,19,4,9,8,19,9,10,8,6,9,13,4,6,10,5,17,7,3,11,8,3,4,9,11,9,10,14,12,5,12,9,11,8,14,9,8,19,7,11,7,12,10,11,16,7,9,4,19,12,3,19,3,11,4,15,8~9,12,10,11,14,11,17,3,16,15,11,9,14,4,6,8,19,6,8,11,9,10,19,11,19,10,4,3,8,9,10,12,9,4,19,12,6,5,8,8,17,8,4,10,13,11,11,8,10,5,6,9,8,9,11,11,16,9,4,10,4,9,7,3,9,10,11,3,9,12,9,11,7,10,3,19,11,12,8,12,9,10,11,11,9,8,9,8,10,9,10,8,11,19,9,8,10,4,7,11,11,10,3,9,10,11,8,9,8,5,9,11,12,12,8,11,10,11,4,9,11,19,9,8,15,5,8,13,9,10,8,12,11,11,10,11,10,7,9,12,9,19,8,9,10,8~9,7,11,12,8,19,4,8,7,10,12,6,10,8,4,10,11,8,4,11,12,19,10,7,9,4,11,8,12,7,11,3,7,6,16,6,10,6,9,3,8,17,6,9,8,12,8,7,19,10,9,8,4,8,9,8,7,9,5,6,12,5,7,10,5,4,11,9,7,12,5,10,19,9,6,19,12,8,7,9,10,11,6,5,4,8,11,5,9,4,8,3,11,7,8,11,3,11,8,12,10,3,6,3,9,12,16,11,3,17,8,4,7,6,8,8,10,11,3,11,19,8,3&purInit=[{bet:3000,type:\"default\"}]&reel_set3=3,9,6,8,5,12,9,12,11,5,10,8,3,4,8,9,8,5,11,8,9,19,11,7,18,9,8,10,7,19,10,12,11,8,8,16,3,3,11,8,4,7,8,5,8,6,5,19,4,9,8,5,4,9,7,10,11,8,11,5,11,19,9,11,8,6,9,12,11,10,16,5,7,9,8,5,9,6,16,3,6,18,9,4,12,10,5,9,12,11,10,12,7,9~12,6,9,12,5,8,6,8,8,7,12,2,12,9,3,8,19,7,18,4,12,9,12,11,3,9,9,2,16,9,8,5,8,19,6,8,2,8,2,7,9,10,4,10,16,2,9,9,10,3,11,6,12,19,9,5,11,8,12,11,7,10,12~9,10,8,3,12,11,6,4,10,11,8,4,5,6,19,10,9,12,6,2,8,11,10,8,4,19,3,16,11,12,9,19,7,11,9,7,2,5,19,12,18,3,9,8,2,11,6,9,3,7,9,8,10,11,9,7,2,9,11,10,7,4,7,10~11,12,11,8,16,9,10,9,8,19,9,2,8,9,11,10,4,19,10,6,9,12,4,8,11,19,10,9,11,9,8,4,6,11,11,10,8,2,8,5,10,9,3,11,10,4,5,10,11,9,19,7,3,10,12,9,11,11,9,19,8,12,2,10,19,9,4,9,4,10,9,2,2,11,10,7,2,9,8,7,3,4,2,18,8,10,6,11,9,8,10,6,18,3,11,11,3,9,5,12,10,11,8,11,10,12,10,11,8,19,8,9,10,11,8,5,8,7,2,10,8,9,8,11,9,4,11,9,12,16~4,7,11,4,5,11,8,6,11,6,19,9,4,3,11,9,3,6,11,9,11,16,12,8,4,3,11,10,12,10,3,11,12,5,4,11,7,8,19,4,12,10,8,19,5,19,10,9,4,19,12,3,7,6,12,8,12,4,6,8,9,12,10,6,10,11,12,9,3,10,8,3,5,7,9,10,19,11,10,5,10,4,19,18,8,9,10,8,6,11,6,8,12,3,6,8,7,3,7,8,16,11,9,5,11,8,12,7,8,9,8,7,3,19,8,6,10,9,7,10,11,9,8,10,11,7,10,8,10,6,8,7,11,8,12,4,7,8,18,12,8,9,4&reel_set6=7,8,10,8,9,11,5,10,4,6,10,11,9,17,7,8,5,8,7,8,4,5,6,10,11,10,3,11,10,7,11,5,7,8,10,6,19,6,10,12,9,12,7,4,9,8,7,9,12,9,11,8,12,7,19,9,7,12,4,5,4,3,8,17,5,4,9,11,3,12,4,3,8,5,9,12,8,5,4,11,8,5,12,8,5,6,4,17,11,3,11,9,17,11,10,9,5,8,11,12~19,8,9,11,5,3,12,8,11,5,9,8,10,7,12,10,9,13,17,8,4,5,12,8,11,6,13,7,8,7,10,10,9,3,7,15,6,10,12,3,6,12,12,9,12,11,4,9,5,8,7,17,9,8,12,14,9,11,4,6,9,8~10,6,8,10,9,3,9,8,6,9,7,10,3,5,10,8,9,11,9,9,4,8,6,14,8,10,4,8,9,7,9,7,11,13,4,11,12,4,3,9,10,12,11,7,8,10,3,6,15,3,17,19,12,5,8,7,10,8,17,10,8,6,12,4,8,11,9,7,4,11,7,12,9,9,11,10,7,11,7,11~12,9,12,11,11,3,12,8,9,8,10,11,7,17,11,9,10,8,10,8,12,9,7,11,10,12,13,14,9,8,9,11,11,9,10,9,11,10,9,17,9,8,10,8,6,12,6,10,19,10,6,12,10,12,8,11,11,5,10,12,15,9,6,9,8,17,4,5,4,11,10,4,3,12,10,4,11,9,10,5,3,13,5,8,11,11,8,11,11,9,8,7,6,10,3,8,9,8,11,3,9,11,11,8,11,10,11,7,11,9,17,8,4,8,9,19,10,14,4,9,8,9,15,9,10,4,10,17,10,8,11,11~4,19,17,3,11,7,10,11,7,17,11,8,9,10,12,4,3,11,8,4,6,12,6,5,4,3,11,6,17,8,7,8,6,11,17,9,12,10,9,7,9,7,5,6,4,8,11,10,8,4,9,10,12,10,12,9,10,8,10,9,11,6,3,11,12,8,7,8,12,8,4,11,9,3,11,8,6,12,5,7&reel_set5=10,9,10,11,12,11,18,4,12,10,11,6,8,7,11,4,8,4,6,11,9,5,12,18,10,8,5,9,10,8,7,5,10,8,18,4,6,9,7,12,9,8,6,10,8,9,4,8,5,12,9,11,4,19,11,8,3,12,11,7,11,9,5,8,9,7,3,5,10,5,3,7,9,7,6,4,5,8,9,11,5,3~11,9,6,7,12,4,8,12,8,12,6,8,10,3,7,12,2,8,9,7,3,2,12,11,8,6,11,8,18,9,10,12,5,12,2,9,18,6,8,4,9,8,9,5,9,8,11,9,12,2,7,19,5,12,9~9,8,4,7,3,10,12,5,9,7,9,2,10,8,11,9,2,12,6,4,10,12,9,8,18,3,6,7,3,9,12,9,11,3,8,11,7,4,8,19,7,9,7,18,11,4,6,2,9,11,6,11,9,2,10,10,8,11,10,9,4,8,4,7,10,11~8,2,11,5,11,7,8,4,10,11,8,2,6,11,11,12,8,9,10,11,4,9,10,11,11,11,11,12,9,2,3,4,12,9,10,11,6,6,18,8,3,11,9,8,18,8,10,9,11,6,10,5,9,8,9,4,9,8,4,10,9,4,10,12,5,2,8,12,9,10,9,11,8,11,12,11,19,10,6,9,7,9,8,3,11,10,18,8,12,9,3,11,10,8,11,10,3,9,2,9,8,10,11,11,4,18,8,11,9,8,18,8,11,4,9,8,2,9,11,10,19,9,3,10,9,8,12,9,10,8,12,10,18,9,10,11,12,11,2,10,11,2,6,8,12,5~12,8,10,8,4,10,8,9,7,11,10,8,7,6,12,11,8,10,7,8,9,6,18,4,8,11,18,11,7,11,8,10,11,8,12,18,9,18,6,3,8,6,3,5,11,4,10,9,19,10,8,3,8,12,10,6,3,7,4,8,11,3,9,4,6,9,4,9,7,8,6,3,12,4,18,18,4,9,12,5,12,10,12,3,6,3,7,6,11,9,7,11,4,19,12,18,4,10,6,5,10,11,7,5,8,11,9,11,3,9,4,11,8,7,4,5,8,12,5,8,9,12,7,7,10,8,10,10,11,6,11,11,6&reel_set8=10,9,11,7,8,7,8,11,8,4,9,19,8,5,6,10,3,12,6,4,3,9,11,12,6,3,9,10,4,12,4,12,5,9,11,8,11,5,11,9,10,12,6,9,8,4,7,9,5,9,8,7,8,10,9,10,12,7,11,8,7,3,12,8,8,19,3,11,5,8,11,8,4,11,5,8,5,7,10,6,9,7,6,11,8,12,5,8,5,4,5,4~8,3,5,8,12,4,7,12,13,12,4,9,5,11,9,8,13,12,7,4,11,10,11,8,13,7,8,9,14,8,6,12,8,9,12,12,15,9,12,5,3,8,10,9,10,8,9,11,5,9,12,9,8,7,9,8,10,8,6,7,6,12,5,9,19,10,9,12,8,10,7,8,3,6,12,8,6,9,11~4,7,3,10,11,9,10,11,9,10,7,10,8,12,9,15,4,3,4,8,5,11,6,11,8,13,11,9,9,10,9,7,6,7,12,4,12,4,8,7,3,12,6,10,9,8,6,9,12,10,5,12,14,7,11,9,11,10,8,19~11,5,9,9,4,10,11,10,11,11,13,9,8,11,10,11,10,8,6,8,9,12,3,6,11,7,11,8,11,11,8,10,4,11,7,10,12,13,10,9,8,14,4,9,11,12,8,10,11,9,8,11,8,9,9,11,13,10,9,3,9,9,5,10,12,4,11,5,8,10,8,11,11,15,8,5,8,9,12,13,9,9,4,8,10,8,8,10,19,4,8,12,10,9,11,3,9,10,9,9,6,4,9,11,12,15,10,7,12,9,11,6,10,11,8,4,9,19,9,10,8,10,4,12,11,12,10,11,11,3,8,14,10,7,12,8,10,9,11,6,3,9,8,9,10,8,11,3,9,10,8~7,6,10,7,8,19,7,8,12,8,4,10,4,9,8,11,9,10,8,12,10,9,12,3,12,6,11,5,8,4,3,10,5,11,10,12,7,9,11,6,9,10,11,7,8,10,6,4,6,4,7,8,7,9,11,9,6,12,8,12,3,10,5,10,8,3,10,12,9,6,7,3,4,12,11,5,8,8,9,11,3,4,11,8,11,8,6,11,8,19,9,4,3&reel_set7=19,5,11,9,4,9,10,5,10,9,5,6,9,6,10,9,3,11,8,6,5,11,6,11,7,4,7,5,10,3,8,4,8,9,8,12,8,4,12,10,7,16,9,10,12,11,16,10,12,19,11,4,9,16,12,8,5,4,8,3,9,5,8,5,7,9,3,11,16,7,8,9,12,11,7~12,8,11,5,9,6,3,12,8,12,7,9,4,12,8,14,9,7,9,11,8,15,11,5,12,10,19,7,12,5,4,7,10,8,10,4,12,19,13,8,9,6,16,12,9,8,10,11,9,8,13,11,6,8,6,3,9,8,9,16,8,16,9,13~8,9,10,9,11,10,6,4,9,10,16,9,19,14,9,12,8,6,12,11,8,9,12,8,10,8,8,7,9,6,9,7,10,11,7,4,7,4,8,3,13,4,5,8,11,3,8,12,6,11,10,15,11,5,7,10,4,12,3,7,11,8,7,11,4,9,10,3,11,9,16,12,10,3,8,4,7,9~9,13,7,9,10,8,3,11,3,12,8,12,8,12,11,12,4,9,4,16,11,6,4,5,8,11,13,8,11,4,9,8,8,10,11,8,3,9,12,9,8,9,16,10,11,15,8,7,11,11,9,10,5,4,9,11,8,19,11,9,6,14,10,11,10,9,11,11,10,16,9,10,8,11,8,8,10,6,10,9,9,10~10,4,9,11,8,3,12,8,6,10,3,7,10,11,12,9,8,4,12,8,6,4,8,6,19,9,5,16,10,7,9,10,8,12,10,7,12,8,3,11,12,8,11,6,11,8,16,3,11,9,3,9,5,7,4,10,9,9,4,9,16,4,8,4,8,11,11,16,11,8,5,11,19,3,6,11,9,8,11,8,6,10,12,10,10,7,16,3,7,6,7,5&total_bet_min=6.00";
            }
        }
	
        protected override double PurchaseFreeMultiple
        {
            get { return 100; }
        }
        protected override bool SupportPurchaseFree
        {
            get { return true; }
        }
        protected override bool HasPurEnableOption
        {
            get { return true; }
        }
        #endregion
        public ThreeDancingMonkeysGameLogic()
        {
            _gameID = GAMEID.ThreeDancingMonkeys;
            GameName = "ThreeDancingMonkeys";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["reel_set"] = "0";
	        dicParams["st"] = "rect";
	        dicParams["sw"] = "5";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
            if (dicParams.ContainsKey("wlc_v"))
            {
                string[] strParts = dicParams["wlc_v"].Split(new string[] { ";" }, StringSplitOptions.RemoveEmptyEntries);
                for (int i = 0; i < strParts.Length; i++)
                {
                    string[] strValues = strParts[i].Split(new string[] { "~" }, StringSplitOptions.RemoveEmptyEntries);
                    strValues[1] = convertWinByBet(strValues[1], currentBet);
                    strParts[i] = string.Join("~", strValues);
                }
                dicParams["wlc_v"] = string.Join(";", strParts);

            }
        }

        protected override BasePPSlotBetInfo restoreBetInfo(string strUserID, BinaryReader reader)
        {
            ThreeDancingMonkeysBetInfo betInfo = new ThreeDancingMonkeysBetInfo();
            betInfo.SerializeFrom(reader);
            return betInfo;
        }
        protected override BasePPSlotBetInfo newBetInfo()
        {
            return new ThreeDancingMonkeysBetInfo();
        }
        protected override void readBetInfoFromMessage(GITMessage message, string strGlobalUserID, Currencies currency)
        {
            try
            {
                string strInitString = ChipsetManager.Instance.convertTo(currency, this.InitDataString, this.SymbolName);
                var dicParams = splitResponseToParams(strInitString);

                double minChip = 0.0, maxChip = 0.0;
                getMinMaxChip(dicParams["sc"], ref minChip, ref maxChip);


                ThreeDancingMonkeysBetInfo betInfo = new ThreeDancingMonkeysBetInfo();
                betInfo.BetPerLine = (float)message.Pop();
                betInfo.LineCount = (int)message.Pop();
		
		
                if (message.DataNum >= 3)
                    betInfo.PurchaseFree = true;
                else
                    betInfo.PurchaseFree = false;
		
                if (betInfo.BetPerLine <= 0.0f)
                {
                    _logger.Error("{0} betInfo.BetPerLine <= 0 in ThreeDancingMonkeysGameLogic::readBetInfoFromMessage {1}", strGlobalUserID, betInfo.BetPerLine);
                    return;
                }
		
                if (!isNotIntergerMultipleBetPerLine(betInfo.BetPerLine, minChip))
                {
                    _logger.Error("{0} betInfo.BetPerLine is illegual: {1} != {2} * integer", strGlobalUserID, betInfo.BetPerLine, minChip);
                    return;
                }

                if (betInfo.LineCount != this.ClientReqLineCount)
                {
                    _logger.Error("{0} betInfo.LineCount is not matched {1} != {2}", strGlobalUserID, betInfo.LineCount, this.ClientReqLineCount);
                    return;
                }
                BasePPSlotBetInfo oldBetInfo = null;
                if (_dicUserBetInfos.TryGetValue(strGlobalUserID, out oldBetInfo))
                {
                    if (oldBetInfo.HasRemainResponse)
                        return;

                    oldBetInfo.BetPerLine   = betInfo.BetPerLine;
                    oldBetInfo.LineCount    = betInfo.LineCount;
                    oldBetInfo.MoreBet      = betInfo.MoreBet;
                    oldBetInfo.PurchaseFree = betInfo.PurchaseFree;
                }
                else
                {
                    _dicUserBetInfos.Add(strGlobalUserID, betInfo);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in ThreeDancingMonkeysGameLogic::readBetInfoFromMessage {0}", ex);
            }
        }
	
    }
}
