using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class HotSakeGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs20hotsake";
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 20; }
        }
        protected override int ServerResLineCount
        {
            get { return 20; }
        }
        protected override int ROWS
        {
            get
            {
                return 7;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "reel_set29=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&def_s=5,7,9,4,7,4,8,3,8,7,6,9,5,9,5,6,9,8,4,4,6,3,8,4,5,9,5,8,4,7,5,8,5,3,9,5,9,8,4,8,4,7,3,7,4,9,5,5,6&reel_set25=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set26=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set27=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set28=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set32=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set33=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set34=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set35=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set30=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set31=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&cfgs=1&ver=3&def_sb=10,10,10,10,10,10,10&reel_set_size=42&def_sa=10,10,10,10,10,10,10&reel_set36=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set37=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set38=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set39=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set40=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set41=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&scatters=1~0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0~0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0~1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&rt=d&gameInfo={rtps:{ante:\"96.00\",purchase:\"96.01\",regular:\"96.06\"},props:{max_rnd_sim:\"1\",max_rnd_hr:\"4332756\",max_rnd_win:\"10000\",max_rnd_win_a:\"8000\",max_rnd_hr_a:\"2949853\"}}&wl_i=tbm~10000;tbm_a~8000&reel_set10=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&sc=10.00,20.00,30.00,40.00,50.00,100.00,150.00,200.00,250.00,375.00,500.00,750.00,1250.00,2500.00,3750.00,5000.00&defc=50.00&reel_set11=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set12=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&purInit_e=1&reel_set13=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&wilds=2~0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0~1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&bonuses=0&bls=20,25&reel_set18=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set19=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&ntp=0.00&reel_set14=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&paytable=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,1400,700,300,150,100,50,40,30,20,15,0,0,0,0;2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,1200,600,250,120,80,40,30,20,15,12,0,0,0,0;1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1000,500,200,90,60,30,20,15,12,10,0,0,0,0;1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,800,400,100,60,40,25,15,12,10,7,0,0,0,0;1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,600,300,70,50,30,15,12,10,7,6,0,0,0,0;800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,400,200,60,30,15,12,10,7,6,5,0,0,0,0;400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,200,100,50,25,12,10,7,6,5,4,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0&reel_set15=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set16=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set17=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&total_bet_max=10,000,000.00&reel_set21=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set22=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set0=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set23=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set24=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set2=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set1=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set4=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&purInit=[{bet:2000,type:\"default\"}]&reel_set3=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set20=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set6=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set5=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set8=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set7=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&reel_set9=3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5~6,6,6,7,7,7,8,8,8~3,3,3,4,4,4,5,5,5&total_bet_min=10.00";
            }
        }
	
        protected override double PurchaseFreeMultiple
        {
            get { return 100; }
        }
        protected override bool SupportPurchaseFree
        {
            get { return true; }
        }
        protected override bool HasPurEnableOption
        {
            get { return true; }
        }
	
	
        protected override double MoreBetMultiple
        {
            get { return 1.25; }
        }
        protected override bool SupportMoreBet
        {
            get { return true; }
        }
	
        #endregion
        public HotSakeGameLogic()
        {
            _gameID = GAMEID.HotSake;
            GameName = "HotSake";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["reel_set"] = "0";
	        dicParams["st"] = "rect";
	        dicParams["sw"] = "7";
	        dicParams["bl"] = "0";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
        }
	
        protected override void readBetInfoFromMessage(GITMessage message, string strGlobalUserID, Currencies currency)
        {
            try
            {
                string strInitString = ChipsetManager.Instance.convertTo(currency, this.InitDataString, this.SymbolName);
                var dicParams = splitResponseToParams(strInitString);

                double minChip = 0.0, maxChip = 0.0;
                getMinMaxChip(dicParams["sc"], ref minChip, ref maxChip);


                BasePPSlotBetInfo betInfo = new BasePPSlotBetInfo();
                betInfo.BetPerLine = (float)message.Pop();
                betInfo.LineCount = (int)message.Pop();
		
                int bl = (int)message.Pop();
                if (bl == 0)
                    betInfo.MoreBet = false;
                else
                    betInfo.MoreBet = true;
		
		
                if (message.DataNum >= 3)
                    betInfo.PurchaseFree = true;
                else
                    betInfo.PurchaseFree = false;
		
                if (betInfo.BetPerLine <= 0.0f)
                {
                    _logger.Error("{0} betInfo.BetPerLine <= 0 in vs20hotsakeGameLogic::readBetInfoFromMessage {1}", strGlobalUserID, betInfo.BetPerLine);
                    return;
                }
		
                if (betInfo.MoreBet && betInfo.PurchaseFree)
                {
                    _logger.Error("{0} betInfo.MoreBet and  PurchasedFreeSpin is same time true in vs20hotsakeGameLogic::readBetInfoFromMessage", strGlobalUserID);
                    return;
                }
		
                if (!isNotIntergerMultipleBetPerLine(betInfo.BetPerLine, minChip))
                {
                    _logger.Error("{0} betInfo.BetPerLine is illegual: {1} != {2} * integer", strGlobalUserID, betInfo.BetPerLine, minChip);
                    return;
                }

                if (betInfo.LineCount != this.ClientReqLineCount)
                {
                    _logger.Error("{0} betInfo.LineCount is not matched {1} != {2}", strGlobalUserID, betInfo.LineCount, this.ClientReqLineCount);
                    return;
                }
                BasePPSlotBetInfo oldBetInfo = null;
                if (_dicUserBetInfos.TryGetValue(strGlobalUserID, out oldBetInfo))
                {
                    if (oldBetInfo.HasRemainResponse)
                        return;

                    oldBetInfo.BetPerLine   = betInfo.BetPerLine;
                    oldBetInfo.LineCount    = betInfo.LineCount;
                    oldBetInfo.MoreBet      = betInfo.MoreBet;
                    oldBetInfo.PurchaseFree = betInfo.PurchaseFree;
                }
                else
                {
                    _dicUserBetInfos.Add(strGlobalUserID, betInfo);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in vs20hotsakeGameLogic::readBetInfoFromMessage {0}", ex);
            }
        }
	
    }
}
