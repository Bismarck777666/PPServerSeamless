using GITProtocol;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class SweetPowernudgeBetInfo : BasePPSlotBetInfo
    {
        public override float TotalBet
        {
            get
            {
                return BetPerLine * 20;
            }
        }

    }
    class SweetPowernudgeGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs20clspwrndg";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return true;
            }
        }
        protected override int ClientReqLineCount
        {
            get
            {
                return 40;
            }
        }
        protected override int ServerResLineCount
        {
            get { return 20; }
        }
        protected override int ROWS
        {
            get
            {
                return 5;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=6,10,7,10,6,7,3,8,3,3,4,8,6,10,6,7,6,7,3,8,9,3,5,9,6,10,7,4,4,10&cfgs=6822&ver=3&def_sb=5,7,3,4,3,10&reel_set_size=5&def_sa=3,10,3,4,6,8&scatters=1~0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0~0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0~1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&rt=d&gameInfo={props:{max_rnd_sim:\"1\",max_rnd_hr:\"7002650\",max_rnd_win:\"5000\",max_rnd_win_a:\"4000\",max_rnd_hr_a:\"4146293\"}}&wl_i=tbm~5000;tbm_a~4000&sc=10.00,20.00,30.00,40.00,50.00,100.00,150.00,200.00,250.00,375.00,500.00,750.00,1250.00,2500.00,3750.00,5000.00&defc=50.00&purInit_e=1&wilds=2~0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0~1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&bonuses=0&bls=20,25&paytabletotal_bet_max=10,000,000.00&reel_set0=5,5,6,10,6,7,1,9,6,7,9,7,3,8,7,10,10,4,5,5,5,3,8,6,7,6,7,3,9,9,10,7,6,5,10,1,10,7,10,5,7,7,7,9,6,8,7,6,5,6,9,7,3,8,10,5,10,8,8,10,5,10,3,3,3,9,6,4,10,9,7,10,6,3,7,8,5,4,7,6,4,5,10,4,6,10,10,10,9,8,9,6,8,4,9,10,10,7,6,6,8,3,10,5,7,9,3,9,9,9,3,10,9,7,9,6,5,10,5,9,8,10,9,10,9,7,8,6,6,10,6,6,6,4,8,7,7,5,4,9,3,4,10,1,5,7,3,9,3,5,6,8,9,4,4,4,7,4,9,10,6,4,6,10,6,9,5,8,7,9,5,10,7,3,4,9,8,8,8,4,10,10,9,8,10,7,9,6,6,10,8,10,9,3,9,7,9,10,7,7~3,10,8,9,9,8,7,7,5,8,7,9,7,7,5,8,7,8,7,8,8,6,6,6,4,10,8,7,5,9,3,9,5,4,4,6,7,6,9,7,9,8,10,6,7,6,9,9,9,10,9,6,9,7,3,8,7,4,10,9,10,7,5,8,7,8,6,7,5,1,8,9,8,8,8,10,8,5,5,4,7,6,9,7,1,9,8,10,8,3,10,8,5,7,8,1,4,4,4,6,8,9,10,10,5,7,8,3,7,9,9,7,9,5,10,4,6,10,9,7,4,5,5,5,4,1,5,7,6,9,9,6,9,8,5,3,8,7,9,8,7,6,4,4,6,8,8,3,3,3,7,9,10,1,9,8,4,8,10,3,3,7,8,6,5,10,3,8,4,7,5,10,10,10,9,9,3,3,5,9,7,5,3,9,9,6,9,5,7,3,4,9,8,4,9,4,7,7,7,9,4,5,9,10,5,7,6,10,8,4,5,3,9,9,10,8,9,3,6,8,10,7,8~4,7,10,6,8,7,9,10,7,10,9,3,3,3,8,7,1,6,1,7,9,6,3,6,10,6,6,9,7,7,7,3,10,6,10,10,5,10,10,4,10,8,1,8,10,8,8,8,10,3,8,10,6,8,9,8,8,7,9,10,5,5,9,9,9,4,3,10,7,7,6,5,9,9,7,4,8,3,10,10,10,4,3,8,8,10,4,9,8,6,6,7,3,6,9,6,6,6,5,6,10,8,8,5,3,8,4,6,8,10,8,6,4,4,4,9,6,10,4,5,6,10,10,5,6,5,9,4,8,5,5,5,8,8,10,5,9,5,10,7,8,8,4,10,4,5~7,9,3,4,7,7,5,9,6,6,9,3,5,7,8,8,8,10,9,10,7,8,4,7,10,7,6,6,9,4,7,9,7,9,9,9,8,6,7,4,6,10,9,8,4,9,9,6,3,6,7,4,4,4,6,9,4,6,10,9,5,5,9,7,6,7,9,9,10,5,5,5,8,3,10,4,10,8,6,3,10,9,9,1,3,9,9,8,7,7,7,9,6,4,4,5,1,6,10,7,6,8,9,3,9,7,9,6,6,6,5,6,5,5,7,5,7,8,8,6,6,4,6,5,8,3,10,10,10,8,8,6,1,7,3,9,4,6,8,7,9,9,5,5,10,3,3,3,6,3,10,10,7,7,8,9,5,7,3,10,10,8,7,10,5~10,7,7,3,7,9,10,3,4,8,8,7,9,9,9,10,10,4,8,4,8,6,10,8,10,6,7,9,5,5,5,3,5,9,10,9,7,7,8,10,4,7,7,4,8,8,8,10,7,8,8,9,6,7,5,5,7,10,6,10,10,10,1,6,5,6,6,10,9,9,10,7,3,4,10,8,3,3,3,7,7,5,9,8,8,10,8,9,3,8,10,7,4,4,4,5,10,10,3,5,3,8,4,7,3,5,8,8,6,6,6,9,10,6,6,8,5,8,1,6,4,7,8,5,7,7,7,9,9,8,10,3,10,5,10,1,10,7,4,9,7,10~8,7,6,9,10,9,8,9,9,10,6,5,6,4,6,7,3,9,9,9,6,8,6,9,10,10,5,8,10,9,8,7,5,9,8,9,3,7,8,8,8,10,4,3,4,6,8,5,4,9,9,5,10,7,10,3,6,6,4,10,10,10,6,5,10,9,3,6,8,3,8,9,5,8,3,10,5,9,9,7,7,7,10,3,6,4,5,8,9,6,10,6,10,10,7,1,9,10,10,6,4,4,4,7,5,3,1,8,6,4,6,10,9,8,9,8,6,8,4,7,6,6,6,5,10,8,5,5,8,9,5,10,7,7,8,8,10,9,8,9,10,3,3,3,9,8,1,7,9,5,10,5,6,10,8,10,9,4,6,6,3,5,5,5,8,1,10,10,8,4,7,9,9,4,8,10,4,6,10,9,4,8,3,8&accInit=[{id:0,mask:\"cp;tp;lvl;sc;cl\"}]&reel_set2=8,10,8,10,3,9,9,10,7,3,6,4,4,8,9,5,5,5,9,7,6,8,8,4,10,9,8,10,5,6,10,9,9,8,7,7,7,9,6,3,10,7,10,7,7,9,10,3,8,5,10,8,10,3,3,3,5,4,8,7,8,7,4,5,6,7,10,6,5,9,3,4,10,10,10,3,5,10,4,8,5,7,10,4,9,9,6,6,4,5,7,5,9,9,9,6,3,10,1,9,6,9,6,10,5,10,6,10,7,6,8,6,6,6,5,10,3,9,4,9,7,6,5,5,7,9,8,10,7,7,6,4,4,4,5,6,7,3,7,10,6,10,10,9,7,9,7,7,6,3,8,8,8,9,1,10,3,7,6,9,7,9,6,4,9,10,9,9,1,10,1~6,10,5,7,7,10,7,4,3,7,3,3,5,6,6,6,7,9,9,8,4,8,4,6,3,7,8,6,6,1,10,9,9,9,8,1,9,9,7,7,8,9,6,5,10,4,8,5,5,8,8,8,10,8,9,4,9,5,9,8,9,4,7,10,6,9,4,4,4,7,8,8,9,5,9,7,8,9,3,5,5,7,8,5,5,5,6,10,5,9,4,7,9,10,5,8,5,8,9,9,8,3,3,3,7,8,3,8,3,3,9,7,6,10,7,8,9,10,10,10,4,9,10,6,10,5,9,7,4,8,4,1,9,8,8,7,7,7,10,8,6,7,9,9,10,8,7,3,8,4,7,6,10,7~3,4,9,6,9,10,8,9,5,6,8,5,10,4,5,6,7,10,7,3,3,3,10,10,5,8,10,1,6,6,9,4,8,5,1,8,9,10,8,10,7,8,7,7,7,9,4,3,9,10,8,6,9,3,8,7,4,4,5,6,3,7,3,10,6,8,8,8,6,10,5,1,8,8,3,5,10,5,6,10,6,10,10,8,6,6,8,6,6,9,9,9,5,6,4,4,10,1,7,10,9,5,9,10,8,4,9,4,8,6,8,8,10,10,10,6,6,10,6,9,8,5,10,5,4,6,7,10,4,10,8,9,6,10,8,10,6,6,6,3,7,8,8,9,3,10,3,5,10,10,5,8,5,6,5,5,8,7,9,4,4,4,7,9,8,10,4,4,7,6,6,8,7,3,8,3,10,8,4,10,10,8,3,5,5,5,7,5,10,10,3,6,10,6,4,6,3,9,6,7,9,8,9,8,10,8,10,7~6,5,10,3,9,9,4,3,6,3,6,6,5,8,8,8,4,7,7,9,8,8,7,10,6,6,9,1,6,5,9,9,9,1,9,10,10,7,4,4,6,9,5,3,6,5,4,7,4,4,4,3,9,8,10,5,3,4,3,5,8,6,9,3,7,5,5,5,10,6,10,5,7,6,8,7,10,8,10,9,3,7,7,7,4,9,5,7,6,7,7,10,6,8,7,6,4,9,6,6,6,10,4,8,9,8,5,4,8,5,10,9,9,5,7,6,10,10,10,9,7,7,9,9,6,6,8,7,6,10,9,10,7,3,3,3,7,9,7,1,6,8,9,5,7,9,3,9,10,9,7,4~6,5,4,10,8,3,7,10,6,7,3,10,10,5,10,5,7,6,8,9,9,9,7,10,9,8,5,8,10,7,10,3,6,8,7,10,7,4,8,8,10,10,1,5,5,5,8,10,7,10,10,3,10,8,3,5,8,7,6,8,8,7,9,9,5,4,8,8,8,5,4,7,9,8,7,7,5,7,8,5,6,5,5,10,7,10,8,3,5,7,10,10,10,7,8,10,3,5,8,9,6,10,8,9,4,8,8,6,4,9,6,9,3,3,3,9,10,4,9,8,10,3,8,10,10,8,7,10,1,10,4,5,7,9,4,10,4,4,4,9,6,9,10,7,10,5,6,7,4,4,10,7,1,3,6,9,8,1,10,10,6,6,6,7,8,9,7,5,3,10,8,4,3,9,7,3,10,8,4,8,8,3,6,4,7,7,7,6,10,6,10,7,8,9,7,9,8,8,4,4,5,7,6,5,7,9,10,10,9~6,5,10,8,3,8,9,4,5,8,6,8,9,10,9,9,9,8,9,8,4,10,6,3,10,9,9,6,9,8,10,8,8,8,10,7,9,3,7,4,6,8,6,10,1,9,9,5,9,10,10,10,7,3,5,5,6,9,10,6,10,5,5,3,8,8,10,7,7,7,10,8,5,8,6,6,4,7,7,10,1,7,9,6,5,9,4,4,4,10,9,3,4,1,3,10,10,6,5,10,4,7,9,6,6,6,8,9,4,6,5,3,10,10,9,8,3,10,5,10,8,3,3,3,6,4,9,6,9,4,5,8,10,7,6,4,8,8,7,5,5,5,8,8,9,7,9,10,10,9,6,8,6,3,8,10,9,6,4&reel_set1=3,5,10,4,6,5,5,9,9,4,9,5,7,9,4,10,10,10,8,8,10,10,4,9,5,10,8,3,10,3,9,9,8,3,8,8,8,7,8,6,8,9,5,6,10,8,4,9,8,9,6,8,10,4,4,4,7,10,3,7,5,6,8,6,4,10,9,1,6,10,8,7,7,7,10,3,4,3,7,3,7,6,7,10,4,6,10,5,5,6,6,6,1,7,8,7,6,7,10,8,9,6,10,9,5,9,3,5,3,3,3,4,4,10,4,5,6,10,8,3,4,10,7,10,7,8,6,9,9,9,10,7,3,9,9,8,5,9,9,8,10,7,10,10,5,5,5,8,7,8,10,7,6,9,6,7,7,8,5,9,8,7,9,6~4,3,5,8,7,6,10,10,1,5,3,4,3,3,3,8,9,5,10,7,8,10,10,3,5,9,3,7,6,9,9,9,6,7,3,7,8,4,4,7,10,9,4,9,9,6,5,5,5,8,9,8,7,9,7,9,10,6,10,3,5,7,1,7,7,7,5,7,6,4,7,10,9,5,8,10,9,10,8,8,8,7,7,3,8,6,9,9,10,8,5,9,8,10,6,6,6,3,7,6,5,10,7,6,10,9,10,6,4,7,10,10,10,7,3,6,10,8,10,10,9,4,6,4,9,6,5,4,4,4,8,5,10,9,8,8,10,5,4,8,9,8,9,5,4~9,3,4,9,6,5,7,4,3,10,9,5,5,5,10,8,10,3,10,4,6,8,8,10,9,6,3,3,3,7,8,7,6,7,8,10,8,6,9,7,10,9,8,8,8,10,9,8,6,7,4,5,7,9,9,8,10,6,7,7,7,6,10,7,9,7,7,5,7,3,1,5,8,9,4,4,4,8,3,7,10,9,8,10,5,5,4,10,6,9,6,6,6,10,10,4,1,10,9,4,4,7,6,8,8,7,9,9,9,4,3,4,9,7,6,9,10,8,5,8,8,5,10,10,10,3,5,5,9,9,3,10,10,5,6,6,7,3,8~6,7,10,9,6,10,10,9,7,3,10,10,10,7,9,8,5,6,8,7,10,9,7,4,8,8,8,3,3,9,7,7,8,3,1,4,8,7,4,4,4,10,9,5,8,6,10,9,9,7,5,7,9,7,7,7,4,6,4,6,10,5,9,8,9,8,6,6,6,3,6,6,10,3,3,5,7,6,10,3,7,3,3,3,4,10,1,8,6,4,9,10,10,9,5,9,9,9,8,9,5,7,9,5,8,8,6,8,4,9,5,5,5,10,4,4,8,10,8,8,10,10,5,5,7,5~9,6,8,10,9,7,1,9,9,8,7,8,7,3,3,3,6,8,5,9,5,5,9,10,8,7,7,5,3,8,6,9,9,9,10,10,6,7,9,4,10,5,4,10,10,3,8,9,7,9,5,5,5,9,10,8,9,4,9,4,8,8,5,10,7,4,6,5,7,7,7,6,9,4,5,9,10,3,7,4,10,6,7,10,8,9,10,8,8,8,7,8,9,8,5,6,6,10,8,4,3,7,8,10,10,6,6,6,9,6,4,9,9,6,10,3,7,10,10,8,1,3,10,3,10,10,10,4,5,7,10,7,6,8,9,8,8,5,9,7,9,10,4,4,4,6,5,5,7,5,4,3,10,3,4,6,5,7,8,6,7,6~10,4,7,10,5,7,4,6,5,3,6,8,7,9,10,4,6,10,3,5,5,5,8,8,9,6,3,8,5,7,8,6,9,8,7,9,10,7,6,10,3,6,3,3,3,10,9,9,7,8,6,9,5,8,6,6,4,9,7,3,4,5,8,9,7,7,8,8,8,5,8,6,10,10,4,9,5,10,6,3,5,9,8,10,9,9,3,4,10,7,7,7,9,8,9,6,8,8,7,8,9,5,10,10,6,10,8,8,9,7,10,9,9,4,4,4,3,9,9,4,5,10,3,7,9,8,6,4,8,7,5,6,3,7,7,4,6,6,6,5,5,10,10,7,1,9,5,6,8,5,10,10,7,10,3,5,9,8,4,9,9,9,6,7,10,8,3,8,7,7,9,8,3,10,3,9,9,4,10,10,1,10,10,10,7,10,7,6,8,6,4,5,4,7,7,10,10,6,8,8,9,5,4,5,4&reel_set4=7,10,10,9,8,5,4,6,9,6,9,7,9,7,6,3,8,8,8,6,9,6,5,5,3,4,4,1,3,9,9,8,7,8,5,7,10,10,10,7,5,9,10,4,9,7,10,7,9,8,7,3,10,8,10,7,8,7,7,7,8,3,7,10,6,10,6,5,9,9,8,9,7,7,9,10,3,9,9,9,10,10,6,6,10,5,8,10,8,4,10,10,8,5,5,8,10,4,4,4,10,5,7,10,5,4,8,10,4,6,6,9,5,6,4,7,9,6,6,6,5,6,5,5,6,9,7,9,9,4,3,3,8,9,8,10,10,3,3,3,8,5,4,8,6,9,4,10,4,9,5,1,7,8,9,3,6,3,5,5,5,7,10,8,10,7,6,10,4,7,8,4,6,5,7,3,8,8,6,3~4,10,6,8,10,8,10,8,9,8,5,9,7,5,8,10,5,9,10,9,9,9,3,6,6,5,9,9,6,10,5,3,4,7,4,3,4,6,7,10,9,4,5,5,5,10,5,9,9,6,7,10,8,7,7,4,7,7,8,4,9,4,9,7,9,7,7,7,4,10,4,9,5,9,5,1,3,9,5,6,9,9,5,10,6,10,10,7,10,10,10,4,8,6,10,8,8,7,7,8,4,4,3,10,4,7,4,10,5,9,5,6,6,6,3,6,7,6,1,4,9,6,10,5,7,10,6,6,8,6,9,5,5,3,4,4,4,8,5,8,9,6,8,10,10,7,3,6,10,9,6,8,8,7,3,7,3,8,8,8,10,6,7,7,6,10,4,10,9,8,10,10,8,9,3,5,3,5,9,8,3,3,3,10,8,7,8,7,6,8,5,6,7,8,5,8,5,9,10,9,8,6,7,3~8,4,9,6,7,5,6,8,8,5,5,6,5,3,7,10,10,7,7,7,3,3,5,6,7,8,9,10,7,4,4,7,9,7,3,5,4,4,7,6,6,6,8,6,8,4,10,7,6,5,5,1,9,4,4,10,10,8,10,8,9,9,9,9,6,6,8,4,10,4,4,3,8,6,3,8,10,9,10,5,10,5,6,5,5,5,10,8,10,6,7,7,9,6,9,6,8,9,7,9,10,8,9,9,10,10,10,3,10,7,9,7,6,8,3,6,5,7,9,10,6,5,8,9,8,6,8,8,8,9,3,5,10,6,8,9,10,1,9,10,9,9,5,4,3,10,7,4,4,4,10,6,5,8,10,7,10,10,5,8,3,6,9,8,7,9,4,4,7,3,3,3,9,5,10,6,5,3,9,10,7,9,5,8,7,8,7,7,4,7,4,8~4,8,10,5,6,9,9,5,10,7,8,4,4,9,8,10,8,9,7,8,8,8,10,6,8,5,7,9,10,5,7,5,7,9,7,6,9,8,6,5,7,3,10,10,10,6,4,8,9,8,9,9,7,9,9,1,8,5,10,8,10,6,5,7,8,8,7,7,7,9,7,4,6,10,3,5,8,4,6,5,10,5,9,10,3,7,4,8,9,9,9,4,6,10,7,9,10,6,10,6,8,5,6,4,7,9,6,7,5,6,4,3,4,4,4,9,6,5,7,6,6,7,10,10,7,9,10,8,3,9,9,10,8,3,9,9,6,6,6,10,9,8,4,5,10,5,6,3,10,10,3,10,7,3,8,10,3,8,7,3,3,3,8,3,3,10,3,6,9,7,1,5,6,8,6,10,7,5,4,5,3,7,9,5,5,5,8,8,9,4,10,6,6,10,8,4,5,9,7,4,10,7,5,4,4,8,4,8~10,6,9,3,4,6,7,6,9,9,9,4,8,10,8,7,10,9,9,5,4,9,4,5,5,5,9,7,4,8,5,8,10,7,10,10,6,5,7,7,7,5,1,7,3,10,6,8,3,7,6,3,10,10,10,8,9,8,5,5,10,10,8,7,6,7,7,6,6,6,3,8,8,5,4,5,8,6,1,9,7,4,4,4,6,10,3,5,7,10,8,6,7,4,3,8,8,8,4,10,5,8,9,5,9,9,8,7,10,9,3,3,3,7,4,3,9,8,9,10,10,6,6,4,10,5~8,9,9,1,10,10,8,9,6,8,5,6,7,3,4,10,5,9,7,7,7,4,8,9,8,8,4,7,6,7,7,10,4,9,4,10,10,4,8,7,6,6,6,10,10,9,5,6,9,8,4,9,10,4,6,3,4,9,8,9,4,10,9,9,9,9,3,3,5,8,3,10,9,3,7,10,3,7,9,4,7,6,4,8,7,5,5,5,9,9,6,10,10,3,5,8,6,8,8,4,8,6,8,7,6,7,5,8,10,10,10,9,7,10,7,6,10,6,5,7,9,6,10,5,3,3,6,10,9,5,8,8,8,4,10,8,10,3,5,5,7,9,8,10,3,3,1,7,7,9,10,4,4,4,10,9,7,6,6,5,6,10,7,5,6,5,9,5,6,5,5,9,5,3,3,3,7,8,8,6,10,8,6,4,8,10,10,6,7,9,8,9,5,5,7,7,8&purInit=[{bet:2000,type:\"default\"}]&reel_set3=8,10,9,6,6,8,6,3,6,4,9,10,10,9,4,8,4,9,10,8,10,6,8,9,8,6,4,3,8,8,9,10,4,3,6,9,6,3,10,10,9,8~7,8,4,8,9,8,9,9,7,7,5,7,4,9,5,8,5,9,9,8,5,8,9,4,7~6,10,7,3,5,7,6,10,7,6,3,10,10,7,5,10,5,7,7,6,10,10,3,7,6,10,7,6,5,6,6,5,5,10,3,10,10~9,3,3,8,3,10,6,9,4,6,6,10,9,8,10,6,9,4,6,10,9,4,3,6,8,10,10,8,8,4,8,10,8,9,8,6,9~9,8,9,7,9,4,8,7,5,8,4,7,5,8,9,9,7,7,4,5,5,7,9,9,5,8,7,9,4,8,8,9,9,8~5,7,7,6,7,5,6,10,6,3,3,10,5,6,5,10,3,7,10,7,10,6,10,10&total_bet_min=10.00";
            }
        }
        protected override double PurchaseFreeMultiple
        {
            get { return 100.0; }
        }
        protected override bool SupportPurchaseFree
        {
            get { return true; }
        }
        protected override bool HasPurEnableOption
        {
            get { return true; }
        }
        protected override double MoreBetMultiple
        {
            get { return 1.25; }
        }
        protected override bool SupportMoreBet
        {
            get { return true; }
        }
        #endregion
        public SweetPowernudgeGameLogic()
        {
            _gameID = GAMEID.SweetPowernudge;
            GameName = "SweetPowernudge";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
            dicParams["reel_set"] = "0";
            dicParams["st"] = "rect";
            dicParams["sw"] = "6";
            dicParams["bl"] = "0";
            dicParams["g"] = "{mul:{def_s:\"12,15,14,16,13\",def_sa:\"14\",def_sb:\"17\",s:\"12,15,14,16,13\",sa:\"14\",sb:\"17\",sh:\"5\",st:\"rect\",sw:\"1\"}}";
        }
        protected override void readBetInfoFromMessage(GITMessage message, string strGlobalUserID, Currencies currency)
        {
            try
            {
                string strInitString = ChipsetManager.Instance.convertTo(currency, this.InitDataString, this.SymbolName);
                var dicParams = splitResponseToParams(strInitString);

                double minChip = 0.0, maxChip = 0.0;
                getMinMaxChip(dicParams["sc"], ref minChip, ref maxChip);


                SweetPowernudgeBetInfo betInfo  = new SweetPowernudgeBetInfo();
                betInfo.BetPerLine              = (float)message.Pop();
                betInfo.LineCount               = (int)message.Pop();

                int bl = (int)message.Pop();
                if (bl == 0)
                    betInfo.MoreBet = false;
                else
                    betInfo.MoreBet = true;

                if (message.DataNum >= 3)
                    betInfo.PurchaseFree = true;
                else
                    betInfo.PurchaseFree = false;

                if (betInfo.BetPerLine <= 0.0f)
                {
                    _logger.Error("{0} betInfo.BetPerLine <= 0 in SweetPowernudgeGameLogic::readBetInfoFromMessage {1}", strGlobalUserID, betInfo.BetPerLine);
                    return;
                }

                if (betInfo.MoreBet && betInfo.PurchaseFree)
                {
                    _logger.Error("{0} betInfo.MoreBet and  PurchasedFreeSpin is same time true in SweetPowernudgeGameLogic::readBetInfoFromMessage", strGlobalUserID);
                    return;
                }
                if (!isNotIntergerMultipleBetPerLine(betInfo.BetPerLine, minChip))
                {
                    _logger.Error("{0} betInfo.BetPerLine is illegual: {1} != {2} * integer", strGlobalUserID, betInfo.BetPerLine, minChip);
                    return;
                }

                if (betInfo.LineCount != this.ClientReqLineCount)
                {
                    _logger.Error("{0} betInfo.LineCount is not matched {1} != {2}", strGlobalUserID, betInfo.LineCount, this.ClientReqLineCount);
                    return;
                }
                BasePPSlotBetInfo oldBetInfo = null;
                if (_dicUserBetInfos.TryGetValue(strGlobalUserID, out oldBetInfo))
                {
                    //만일 유저에게 남은 응답이 존재하는 경우
                    if (oldBetInfo.HasRemainResponse)
                        return;

                    oldBetInfo.BetPerLine = betInfo.BetPerLine;
                    oldBetInfo.LineCount = betInfo.LineCount;
                    oldBetInfo.MoreBet = betInfo.MoreBet;
                    oldBetInfo.PurchaseFree = betInfo.PurchaseFree;
                }
                else
                {
                    _dicUserBetInfos.Add(strGlobalUserID, betInfo);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in SweetPowernudgeGameLogic::readBetInfoFromMessage {0}", ex);
            }
        }
        protected override BasePPSlotBetInfo restoreBetInfo(string strUserID, BinaryReader reader)
        {
            SweetPowernudgeBetInfo betInfo = new SweetPowernudgeBetInfo();
            betInfo.SerializeFrom(reader);
            return betInfo;
        }
        protected override BasePPSlotBetInfo newBetInfo()
        {
            return new SweetPowernudgeBetInfo();
        }
    }
}
