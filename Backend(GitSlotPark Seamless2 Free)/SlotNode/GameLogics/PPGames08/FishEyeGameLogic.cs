using GITProtocol;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class FishEyeGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs10fisheye";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return true;
            }
        }
        protected override int ClientReqLineCount
        {
            get
            {
                return 10;
            }
        }
        protected override int ServerResLineCount
        {
            get { return 10; }
        }
        protected override int ROWS
        {
            get
            {
                return 3;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=3,9,6,5,8,7,8,3,4,10,3,10,12,5,12&cfgs=7002&ver=3&mo_s=7&mo_v=1,2,3,4,5,10,20,50,100,500,1000&def_sb=5,11,7,7,11&reel_set_size=13&def_sa=3,12,6,6,8&scatters=1~0,0,0,0,0~0,0,0,0,0~1,1,1,1,1&rt=d&gameInfo={props:{max_rnd_sim:\"1\",max_rnd_hr:\"2575936\",fish_val_fs:\"20,50,100,150,200,250,500,1000,2000,5000,10000\",max_rnd_win:\"10000\",max_rnd_win_a:\"6666\",max_rnd_hr_a:\"1436749\"}}&wl_i=tbm~10000;tbm_a~6666&reel_set10=6,10,4,6,12,7,12,7,10,12,4,10,12,6,8,12,10,6,4,10,8,7,8,10,8~11,9,3,9,5,9,11,3,9,3,7,9,5,7,11,5,11,5,11,5,11,7~12,11,8,4,6,10,6,8,9,11,10,12,10,6,7,3,10,5,9,7,10,9,5,6,11,8,11,4,7,4,3,8,9,5,9~12,9,3,5,8,5,3,4,11,8,7,6,10,4,9,5,12,7,11,10,4,10,6,8,7~5,9,6,9,3,12,3,9,4,7,5,12,10,12,11,5,6,8,3,5,8,6,5,3,6,7,11,4,5,6,11,5,12,8,6,11,4,10,5,12,6,10,11,8,5,7,9,5,8,3,9,10,4&sc=20.00,40.00,60.00,80.00,100.00,200.00,300.00,400.00,500.00,750.00,1000.00,1500.00,2500.00,5000.00,7500.00,10000.00&defc=100.00&reel_set11=9,5,10,12,7,10,11,7,6,12,8,10,8,11,4,12,3,4,9,8,10,8,6,7,8~11,9,8,11,10,6,4,10,9,11,8,9,7,7,7,9,3,5,12,7,7,11,7,9,7,12,7,5,11~9,8,4,11,3,10,5,6,5,7,7,7,9,4,5,7,12,4,12,6,8,10,7~11,5,9,7,8,7,3,6,12,3,7,10,4,6,5~10,6,5,7,12,11,3,9,11,6,8,7,7,9,4,12,8,5,10&reel_set12=5,6,11,5,3,6,12,10,8,4,10,11,7,9,8,7,7,7,7,8,11,7,9,11,7,9,10,12,9,12,4,3,6,8,7~7,10,12,10,11,8,10,11,7,9,12,8,9,12,6,8,12,9,11,5,7,7,7,4,11,7,4,11,5,6,12,8,4,7,10,12,8,3,5,6,9,11,3~9,6,7,8,12,6,7,7,11,12,11,5,3,4,10,11,10,7,7,7,7,11,10,3,6,10,8,5,8,9,8,7,4,12,9,12,9,8,6~11,4,9,8,3,11,9,7,9,7,10,11,8,11,9,7,7,7,5,12,4,6,10,6,10,3,7,6,10,8,12,9,12,5,12~10,6,7,4,3,7,9,8,10,5,6,7,7,7,7,7,9,12,11,12,10,7,12,6,4,11,5,11,9,7,8&purInit_e=1&wilds=2~0,0,0,0,0~1,1,1,1,1&bonuses=0&bls=10,15&paytable=0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;2000,200,50,5,0;1000,150,30,0,0;500,100,20,0,0;500,100,20,0,0;0,0,0,0,0;100,25,2,0,0;100,25,2,0,0;50,10,2,0,0;50,10,2,0,0;50,10,2,0,0;0,0,0,0,0;0,0,0,0,0&total_bet_max=10,000,000.00&reel_set0=4,9,11,5,9,10,6,10,11,6,7,11,8,12,7,7,7,7,8,12,6,8,9,4,9,11,10,7,1,3,5,7,12,8,12,10~3,7,11,3,12,4,8,10,12,11,6,11,7,6,7,7,7,8,7,10,6,5,1,9,11,9,8,12,1,10,8,5,12~11,12,7,10,5,7,12,3,8,10,7,4,7,3,12,6,9,8,9,7,7,7,7,6,9,4,9,11,8,11,9,10,1,11,8,10,5,1,7,8,10,6,12~3,10,3,9,5,7,12,9,11,5,10,4,9,4,9,1,5,10,4,7,7,7,6,8,12,11,6,12,11,6,11,1,10,9,8,6,8,7,8,11,7,12,7~8,3,5,9,7,9,12,11,12,8,6,10,7,7,7,7,7,10,7,10,12,4,11,4,12,6,1,5,6,8,9,7&accInit=[{id:0,mask:\"cp;lvl;tp\"}]&reel_set2=7,11,12,10,6,11,12,10,12,4,1,8,5,7,9,8,6,9,7,7,7,7,11,7,7,5,9,8,3,6,8,3,11,9,10,9,12,4,11,10,1,10~5,1,5,8,7,10,7,6,12,11,12,9,11,1,4,12,3,10,7,7,7,7,9,4,9,10,11,3,6,4,10,5,8,11,7,1,8,12,6,11,9,7,10,8,7~12,8,4,6,9,10,3,12,9,4,11,9,6,3,12,11,5,10,7,8,6,12,5,7,10,8,11,9,11~10,1,9,7,12,6,8,1,9,4,3,11,7,12,7,5,3,8,5,1,11,10,7,7,7,7,7,8,12,9,11,6,5,11,6,9,10,8,9,8,4,7,6,10,1,4,9,10,1,12,7,12~4,10,9,8,9,10,9,12,6,4,11,6,12,7,10,4,10,5,10,8,6,12,11,3,12,8,11,3,5,4,7,9,5,10,6,5,11,12,11,8,9,12,8,9,6,11&reel_set1=7,8,9,6,11,12,9,12,10,8,4,5,1,10,9,10,7,11,7,7,7,7,11,12,7,7,6,3,10,8,3,9,8,6,4,6,12,5,10,9,11,12,11,7~12,7,8,6,10,3,8,10,8,10,5,4,11,7,12,4,3,7,7,7,7,8,9,6,1,11,12,5,12,11,1,9,7,12,7,7,10,9,11,6,11,8~4,7,4,9,8,11,7,10,1,10,1,8,11,6,12,5,10,5,10,12,9,8,12,7,7,7,7,7,6,4,8,3,8,9,6,5,11,1,9,12,11,8,11,1,7,1,7,10,9,3,10,9,12~3,12,10,11,9,6,7,10,11,12,8,10,12,11,8,3,4,6,5,6,8,9,7,9,11,12,9,8,5~3,12,10,12,8,6,10,8,4,3,12,11,10,4,11,5,8,9,7,9,8,12,11,10,5,11,9,5,6,7,4,9,6&reel_set4=3,1,6,5,12,9,8,4,3,12,6,10,11,4,9,8,10,7,6,7,7,7,7,10,11,12,11,9,10,5,1,7,5,4,8,7,12,10,9,6,7,7,1,8,11~11,9,6,11,10,11,7,10,5,6,9,4,12,3,8,12,10,9,12,11,8,4,6,8,5~3,11,5,9,10,9,7,6,10,9,7,12,9,4,8,4,7,11,5,6,1,12,6,9,10,12,7,7,7,7,8,10,12,3,7,8,11,8,9,12,11,6,4,11,10,7,8,1,9,11,5,8,10,7,1,12~11,9,7,11,9,4,7,10,5,6,8,12,11,1,8,1,4,7,7,7,7,7,10,3,10,8,10,9,12,5,6,11,6,7,7,1,8,12,1~7,9,6,9,12,11,4,10,11,5,4,11,12,11,4,6,10,9,10,8,3,8,12,5,10,11,6,12,7,5,12,10,8,6,9,3,8&purInit=[{bet:1000,type:\"default\"}]&reel_set3=11,12,3,8,5,9,8,4,12,10,12,11,10,6,8,3,10,7,1,7,7,7,7,6,11,9,7,4,7,8,12,5,10,9,7,12,10,11,8,7,6,11,1,6,9~9,12,10,4,6,11,8,11,10,12,7,1,7,7,6,1,8,10,9,12,4,3,6,10,7,7,7,7,9,1,4,12,11,5,8,5,11,9,10,8,6,7,12,7,11,10,7,3,6,11,12,8,5~9,11,5,8,11,12,6,9,10,5,4,6,12,7,4,3,8,6,9,12,4,7,10,11,6,11,3,5,8,10,11,10,8,12,8,10~12,10,12,11,9,8,6,9,4,9,10,3,8,12,11,5,7,5,11,6,3,7,8,6,9,11,10,4~8,11,4,12,3,7,4,12,7,10,11,9,1,4,1,8,5,9,1,8,7,7,7,7,7,1,7,3,12,11,6,10,6,5,9,6,12,10,11,7,7,9,8,1,5,10&reel_set6=12,1,5,3,9,1,7,4,12,7,11,9,8,11,6,11,12,5,1,11,7,7,7,7,8,4,7,3,8,7,10,9,7,6,10,6,10,5,8,10,6,9,12,4~12,8,11,10,11,9,10,8,11,10,12,11,10,7,6,9,4,12,8,3,5,6,4,6,3,7,8,9~11,9,7,10,4,8,4,3,5,12,10,9,5,8,5,10,7,11,8,9,11,12,6,11,4,6,9,12,9,3,12,9,8,6,8,6,10~7,10,11,1,5,12,6,1,6,7,10,3,11,5,9,5,10,8,7,8,12,8,4,7,12,7,7,7,7,6,11,12,10,9,11,7,10,11,4,7,6,9,8,12,9,8,9,10,8,1,4,12,9,3~6,4,7,7,11,8,12,11,9,12,5,3,1,12,10,5,1,8,6,7,11,7,7,7,7,7,4,8,9,12,6,10,3,10,4,8,11,9,10,5,1,6,12,7,10,7,9,1,9,8&reel_set5=9,11,10,4,6,9,1,8,11,9,10,11,1,12,9,12,8,12,4,7,7,7,7,5,10,12,7,3,8,5,7,3,7,9,6,7,10,11,6,8,10,7,11~6,3,8,12,10,8,3,12,11,5,11,4,12,11,4,10,6,7,5,4,8,6,9,8,10,6,9,8,9,12,10,7,9,5,12,10,11,12~10,8,7,11,9,10,7,6,11,7,11,10,8,1,9,3,7,12,8,7,4,10,11,6,7,7,7,7,5,6,12,1,5,9,3,10,7,12,1,11,8,12,8,9,6,10,12,4,8,4,11,5,9,8~11,5,3,9,8,9,8,7,5,10,11,12,3,12,10,7,11,6,8,6,4,10,9,4,12,11,9,12,9,10,8,6~11,8,1,8,6,3,9,1,9,7,9,7,6,12,10,8,11,5,11,6,8,7,7,7,7,7,10,1,5,10,1,10,7,11,3,12,4,9,1,10,6,8,11,12,4,12,5,7,7,4,12&reel_set8=7,5,8,12,11,8,12,5,4,10,6,12,10,6,12,3,11,10,3,11,9,6,9,4,7,8,9~5,6,10,3,4,10,11,10,5,3,7,11,7,12,11,7,7,7,7,1,8,9,7,12,11,10,9,6,8,12,1,8,9,4,6~8,12,8,9,5,8,1,9,11,12,4,8,9,11,10,12,9,10,12,5,10,7,7,7,7,3,7,3,12,4,11,1,6,7,6,7,10,4,8,11,6,9,1,11,7,7,5,9,6~5,11,10,12,8,3,10,11,8,6,4,9,10,11,12,10,5,4,5,9,6,9,11,7,8,9,8,6,8,12,9,12,7,6,12,4,3,8,9,11~8,10,7,5,1,5,1,9,7,12,9,3,5,11,6,9,8,12,9,7,4,7,7,7,7,7,11,6,1,6,11,4,10,1,11,12,7,10,8,1,9,8,7,12,10,12,3,4,10&reel_set7=11,12,11,3,8,6,10,12,8,11,12,5,9,3,9,11,7,8,12,8,4,6,8,5,10,9,6,4,9,10,6,12,10,5,4,10,7~6,4,7,7,9,7,10,12,10,6,11,8,11,1,6,7,7,7,7,8,3,9,4,5,3,1,7,12,8,10,8,5,6,10,12,11~6,9,12,1,10,11,9,10,9,11,8,5,12,9,4,1,8,4,11,7,10,1,7,7,7,7,8,7,6,11,12,7,6,8,12,7,7,5,10,4,9,8,3,10,3,6,10,12,9~4,12,6,10,8,9,5,8,1,7,6,1,9,7,1,11,7,7,7,7,7,8,11,6,7,11,10,5,12,10,12,1,10,3,9,12,7,4~5,12,9,4,11,7,6,9,8,12,8,5,10,11,6,12,5,10,4,9,8,11,9,8,11,4,6,10,12,6,8,9,4,12,9,11,10,3,5,3,8,7,6,10,12&reel_set9=12,11,7,9,10,11,6,10,5,12,7,10,4,10,8,6,11,3,9,6,9,11,10,4,5,12,11,9,8,4,9,11,12,3,10,8,12,6,8,5~9,12,11,8,11,6,10,1,12,7,11,9,4,10,5,12,8,4,12,11,7,1,10,6,7,7,7,7,8,1,7,6,11,12,7,8,10,6,10,7,5,6,8,3,5,3,10,8,7,9,4,12~10,9,11,7,5,9,8,11,7,4,6,9,5,10,12,11,10,12,8,3,12,8,11,10,4,3,6,8,9~10,12,9,11,7,11,8,6,9,5,11,10,3,12,3,7,4,5,12,10,12,7,7,7,7,9,7,9,10,8,1,6,5,11,1,6,1,11,4,9,10,6,8,7,8,4,9,12,7~4,6,9,8,3,12,5,10,1,10,4,1,11,7,9,3,7,1,9,6,7,5,7,7,7,7,7,10,8,6,9,12,4,6,8,12,9,7,12,11,8,1,10,11,1,11,8,7,5,11&total_bet_min=20.00";
            }
        }
        protected override double PurchaseFreeMultiple
        {
            get { return 100.0; }
        }
        protected override bool SupportPurchaseFree
        {
            get { return true; }
        }
        protected override bool HasPurEnableOption
        {
            get { return true; }
        }
        protected override double MoreBetMultiple
        {
            get { return 1.5; }
        }
        protected override bool SupportMoreBet
        {
            get { return true; }
        }
        #endregion
        public FishEyeGameLogic()
        {
            _gameID = GAMEID.FishEye;
            GameName = "FishEye";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
            dicParams["reel_set"] = "0";
            dicParams["st"] = "rect";
            dicParams["sw"] = "5";
            dicParams["bl"] = "0";
        }
        protected override void readBetInfoFromMessage(GITMessage message, string strGlobalUserID, Currencies currency)
        {
            try
            {
                string strInitString = ChipsetManager.Instance.convertTo(currency, this.InitDataString, this.SymbolName);
                var dicParams = splitResponseToParams(strInitString);

                double minChip = 0.0, maxChip = 0.0;
                getMinMaxChip(dicParams["sc"], ref minChip, ref maxChip);


                BasePPSlotBetInfo betInfo = new BasePPSlotBetInfo();
                betInfo.BetPerLine = (float)message.Pop();
                betInfo.LineCount = (int)message.Pop();

                int bl = (int)message.Pop();
                if (bl == 0)
                    betInfo.MoreBet = false;
                else
                    betInfo.MoreBet = true;

                if (message.DataNum >= 3)
                    betInfo.PurchaseFree = true;
                else
                    betInfo.PurchaseFree = false;

                if (betInfo.BetPerLine <= 0.0f)
                {
                    _logger.Error("{0} betInfo.BetPerLine <= 0 in FishEyeGameLogic::readBetInfoFromMessage {1}", strGlobalUserID, betInfo.BetPerLine);
                    return;
                }

                if (betInfo.MoreBet && betInfo.PurchaseFree)
                {
                    _logger.Error("{0} betInfo.MoreBet and  PurchasedFreeSpin is same time true in FishEyeGameLogic::readBetInfoFromMessage", strGlobalUserID);
                    return;
                }
                if (!isNotIntergerMultipleBetPerLine(betInfo.BetPerLine, minChip))
                {
                    _logger.Error("{0} betInfo.BetPerLine is illegual: {1} != {2} * integer", strGlobalUserID, betInfo.BetPerLine, minChip);
                    return;
                }

                if (betInfo.LineCount != this.ClientReqLineCount)
                {
                    _logger.Error("{0} betInfo.LineCount is not matched {1} != {2}", strGlobalUserID, betInfo.LineCount, this.ClientReqLineCount);
                    return;
                }
                BasePPSlotBetInfo oldBetInfo = null;
                if (_dicUserBetInfos.TryGetValue(strGlobalUserID, out oldBetInfo))
                {
                    //만일 유저에게 남은 응답이 존재하는 경우
                    if (oldBetInfo.HasRemainResponse)
                        return;

                    oldBetInfo.BetPerLine = betInfo.BetPerLine;
                    oldBetInfo.LineCount = betInfo.LineCount;
                    oldBetInfo.MoreBet = betInfo.MoreBet;
                    oldBetInfo.PurchaseFree = betInfo.PurchaseFree;
                }
                else
                {
                    _dicUserBetInfos.Add(strGlobalUserID, betInfo);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in FishEyeGameLogic::readBetInfoFromMessage {0}", ex);
            }
        }
    }
}
