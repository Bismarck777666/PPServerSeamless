using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class FireStrike2GameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs10firestrike2";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return true;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 10; }
        }
        protected override int ServerResLineCount
        {
            get { return 10; }
        }
        protected override int ROWS
        {
            get
            {
                return 3;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=4,8,3,3,7,3,10,12,6,10,6,13,1,5,13&cfgs=5420&ver=3&def_sb=0,7,10,0,11&reel_set_size=3&def_sa=2,13,0,2,7&scatters=1~0,0,2,0,0~0,0,0,0,0~1,1,1,1,1;14~0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0~0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0~1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1&rt=d&gameInfo={props:{max_rnd_sim:\"1\",max_rnd_hr:\"81088108\",max_rnd_win:\"25000\"}}&wl_i=tbm~25000&sc=20.00,40.00,60.00,80.00,100.00,200.00,300.00,400.00,500.00,750.00,1000.00,1500.00,2500.00,5000.00,7500.00,10000.00&defc=100.00&wilds=13~2000,500,250,0,0~1,1,1,1,1&bonuses=&paytable=0,0,0,0,0;0,0,0,0,0;1000,300,150,0,0;500,200,100,0,0;300,150,75,0,0;250,100,30,0,0;200,80,25,0,0;150,60,20,0,0;125,50,15,0,0;100,40,10,0,0;100,40,10,0,0;50,20,5,0,0;50,20,5,0,0;0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0&reel_set0=7,1,11,5,3,10,7,12,10,12,1,8,14,6,11,9,8,14,4,10,11,6,10,13,13,13,12,9,12,3,9,13,13,6,7,6,7,10,1,5,8,14,7,13,12,9,6,7,2,12,5,8,14,14,14,5,10,1,8,5,8,9,4,9,8,11,7,10,6,11,12,4,1,8,2,11,9,12,7,11,9~11,12,10,9,8,14,8,10,14,5,6,8,12,6,3,9,6,13,13,13,12,7,8,10,7,13,7,5,9,11,7,6,5,12,8,14,11,9,14,14,14,4,13,11,2,10,4,14,10,8,7,5,9,7,12,11,3,5,10,12,2,9~6,9,5,12,8,11,9,11,9,3,11,14,6,13,13,13,7,1,11,10,14,14,12,2,6,4,5,7,13,2,5,14,14,14,3,8,7,6,1,4,11,10,5,8,14,12,10,13,7,8,9,12~9,5,14,4,7,8,4,12,8,14,11,3,11,10,2,9,4,14,14,4,6,11,13,13,13,9,7,6,10,9,6,8,10,14,5,11,8,10,3,7,10,6,10,7,11,13,12,3,14,14,14,4,14,13,6,14,4,5,9,12,7,11,2,10,12,7,2,5,8,9,4,13,12,11,5~9,4,10,12,11,10,3,1,12,7,10,5,6,13,11,6,9,13,13,13,7,11,10,6,2,1,9,1,14,11,4,2,12,2,8,13,14,9,13,1,14,14,14,12,4,11,7,5,10,7,10,9,12,11,8,6,14,3,8,3,7,5&reel_set2=2,3,1,2,1,8,4,9,1,12,9,8,3,9,1,8,4,1,2,1,12,1,3,12,1~7,5,5,7,11,5,11,10,6,5,5,11,5,7,6,10,7,6,5,11,7,5,6,10,7,5,6,5~9,8,12,8,1,2,4,1,3,4,1,2,9,1,12,4,1,12,1,3,12,1,2,8,1,3,2,9,1,8~5,11,5,7,5,5,6,7,11,6,7,11,6,10,11,5,5,10,5,7,5,6,11,7,5,10~2,12,2,4,1,3,1,9,1,12,3,1,9,1,8,1,4,8&reel_set1=1,13,9,7,4,12,11,13,12,8,12,13,9,8,1,6,3,4,2,5,7,8,13,3,10,11,13,13,13,7,9,4,8,4,5,12,8,9,7,2,13,2,6,7,2,12,5,10,13,6,1,5,10,6,3,11,13,12,14,14,14,3,4,8,7,2,9,10,3,14,14,10,13,12,14,13,11,8,9,6,7,12,9,2,7,10,3,11,10,11,5,11~10,2,7,5,6,7,2,14,9,6,12,9,8,5,13,3,10,11,12,8,13,13,13,3,13,5,10,5,12,13,14,4,8,10,2,11,13,10,4,13,11,6,8,14,14,14,9,10,3,7,3,7,12,13,9,13,2,9,4,12,4,11,14,14,9,6,11~12,11,1,9,14,2,13,12,6,1,13,9,12,3,7,13,12,6,13,7,5,6,4,2,8,7,13,13,13,11,12,8,9,2,1,11,4,13,12,13,12,6,9,10,4,3,11,1,11,8,1,5,6,7,10,14,14,14,5,4,2,8,3,6,13,2,5,14,10,14,2,8,10,3,11,4,13,13,5,8,11,3,5,14,3,14,1~5,2,3,5,4,9,3,11,12,11,3,8,10,12,7,8,9,3,12,13,13,13,14,9,10,4,12,9,10,2,5,10,14,4,10,14,8,11,6,14,14,14,13,4,8,7,9,4,7,12,2,14,7,6,13,11,5,11,13,12,2,13,6~3,4,10,8,2,1,8,14,13,11,1,4,12,2,8,14,10,13,5,7,13,13,13,4,11,7,13,7,10,6,4,9,11,2,10,5,6,9,13,1,6,5,12,3,14,14,14,4,10,6,3,11,13,7,11,9,7,12,9,7,9,10,3,2,12,1,6,8,12";
            }
        }
	
	
        #endregion
        public FireStrike2GameLogic()
        {
            _gameID = GAMEID.FireStrike2;
            GameName = "FireStrike2";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["reel_set"] = "0";
	        dicParams["st"] = "rect";
	        dicParams["sw"] = "5";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
            if (dicParams.ContainsKey("apwa"))
                dicParams["apwa"] = convertWinByBet(dicParams["apwa"], currentBet);            
        }
	
    }
}
