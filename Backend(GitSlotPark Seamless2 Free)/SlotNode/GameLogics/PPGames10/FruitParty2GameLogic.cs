using GITProtocol;
using PCGSharp;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SlotGamesNode.GameLogics
{
    class FruitParty2GameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs20fparty2";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return true;
            }
        }
        protected override int ClientReqLineCount
        {
            get { return 20; }
        }
        protected override int ServerResLineCount
        {
            get { return 20; }
        }
        protected override int ROWS
        {
            get
            {
                return 7;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=3,4,5,6,7,8,9,8,3,4,5,6,7,8,9,8,3,4,5,6,7,8,9,7,3,4,5,6,7,8,9,5,3,4,5,6,7,8,9,5,3,4,5,6,7,8,9,6,3&cfgs=4349&ver=2&def_sb=4,5,6,7,8,9,3&reel_set_size=5&def_sa=4,5,6,7,8,9,3&scatters=1~100,20,10,5,3,0,0~25,20,15,12,10,0,0~1,1,1,1,1,1,1&gmb=0,0,0&rt=d&gameInfo={props:{max_rnd_sim:\"1\",max_rnd_hr:\"527241\",max_rnd_win:\"5000\"}}&wl_i=tbm~5000&sc=10.00,20.00,30.00,40.00,50.00,100.00,150.00,200.00,250.00,375.00,500.00,750.00,1250.00,2500.00,3750.00,5000.00&defc=50.00&purInit_e=1&wilds=2~0,0,0,0,0,0,0~1,1,1,1,1,1,1&bonuses=0&fsbonus=&paytable=0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0;3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,3000,1400,700,300,150,100,50,40,35,30,20,0,0,0,0;2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,2000,1200,600,250,120,80,40,30,25,20,15,0,0,0,0;1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1800,1000,500,200,90,60,30,25,20,15,10,0,0,0,0;1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,1600,800,400,100,60,40,25,20,15,10,8,0,0,0,0;1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,1200,600,300,70,50,30,20,15,10,8,6,0,0,0,0;800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,800,400,200,60,40,25,15,10,8,6,5,0,0,0,0;400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,400,200,100,50,30,20,10,8,6,5,4,0,0,0,0&total_bet_max=10,000,000.00&reel_set0=5,6,7,6,9,7,7,8,6,9,7,9,5,9,3,3,8,5,8,7,8,7,3,6,3,8,6,6,6,4,6,4,4,5,8,6,3,4,5,9,9,4,5,1,8,9,8,9,8,7,5,9,4,9,7,6,8,7~3,9,4,8,6,6,5,8,8,5,3,4,7,7,9,7,8,4,9,5,8,5,7,6,4,9,8,7,3,3,5,9,4,8,6,8,6,6,4,4,8,5,4,4,3,7,8,6,8,9,7,7,3,6,9,3,7,8,6,8,3,9,1,6,9,7,5,9,7,4,9,8,9,4,8,5,8,6,3,7,6,6,6,8,8,9,6,7,8,7,6,5,3,7,4,9,7,7,8,8,7,3,9,7,7,8,8,4,7,6,8,9,8,4,9,5,3,4,5,9,7,4,5,7,5,8,6,4,3,5,9,9,5,9,7,9,9,5,5,9,6,7,5,6,9,7,9,8,4,8,5,3,9,1,6,8,6,3,5,9,6,7,9,8,4~9,9,7,7,3,1,6,6,6,8,8,5,5,6,6,4,4~3,7,6,6,5,9,6,4,7,9,6,8,3,6,9,9,6,9,7,4,8,9,5,5,9,4,5,1,4,7,3,5,7,4,3,9,8,4,9,3,9,7,8,8,9,8,7,7,5,9,6,7,6,7,3,6,6,6,6,5,4,7,6,8,4,7,9,4,8,7,7,3,7,6,7,8,8,9,5,8,3,8,9,9,5,9,6,8,3,8,8,9,7,5,4,6,8,4,8,9,4,9,5,4,3,1,8,8,5,7,5,5,3,7,8,9,6,8~8,7,5,8,5,3,7,8,7,4,9,3,8,4,6,7,5,9,6,6,7,7,9,4,4,6,8,4,5,5,3,3,9,3,9,8,5,1,8,8,7,5,9,4,6,7,9,8,9,6,4,9,7,9,6,8,3,9,7,8~9,8,7,4,9,7,5,6,3,9,5,8,7,9,5,7,9,4,3,9,6,8,7,3,7,7,9,4,8,3,7,3,7,7,9,5,6,8,8,6,9,9,7,6,4,8,5,5,8,5,7,3,7,3,3,9,6,9,8,5,4,7,5,5,6,6,7,9,8,7,8,7,4,5,6,6,7,8,9,8,8,6,5,7,6,9,9,8,8,9,9,7,6,3,6,4,3,8,5,7,7,6,9,8,8,6,9,8,6,4,3,7,8,4,9,8,9,1,5,4,6,8,3,4,3,8,7,4,9,7,3,8,4,4,5,9,9,8,9,4,5,5,9,4,8,9,6,8,9,8,5,7,5,6,9,3,7,4,6,5,8,9,1,4,5,4,3,8~7,5,3,8,8,5,9,7,7,6,9,7,6,3,7,6,4,6,9,7,5,8,4,6,3,9,7,3,9,7,5,4,9,8,7,4,3,8,4,7,9,5,3,9,8,8,7,6,7,9,4,5,1,3,8,6,5,4,4,6,8,9,6,8,3,6,5,4,8,8,5,4,8,3,8,6,8,9,8,5,1,7,8,9,3,9,8,6,7,7,5,9,6,5,4,6,4,4,9,9,8,5,7,5,5,8,7,3,7,4,9,8,5,9,7,9,8,9,9,6,9,7,6,3,7,9,8&reel_set2=6,5,7,8,7,7,5,9,6,8,8,5,7,7,9,4,3,9,7,7,6,9,9,9,8,3,4,7,7,5,9,3,9,5,6,5,5,8,3,3,7,9,7,6,5,9,5,5,5,6,7,9,5,9,9,5,9,4,9,7,7,3,6,9,8,5,3,3,9,3,8,4,4,4,7,4,5,9,7,6,8,7,9,7,4,7,8,9,8,8,9,4,6,4,7,7,8,8,8,8,9,9,4,8,8,9,6,9,5,8,8,3,8,8,4,6,6,8,9,6,7,6,3,3,3,4,8,4,5,6,8,4,8,9,8,6,9,8,6,6,3,7,3,9,5,3,8,7,7,7,4,8,4,8,5,3,5,8,8,9,7,6,9,3,9,8,9,6,7,6,9,8,6,6,6,3,9,3,6,7,7,9,4,5,6,9,6,9,7,9,5,7,9,7,4,6,7,4,6~4,4,3,6,4,6,3,5,8,7,9,3,7,9,6,9,6,7,9,9,9,8,3,6,9,6,6,5,6,8,8,9,3,8,8,7,8,4,9,9,4,5,5,5,5,3,6,8,7,8,4,3,6,8,7,9,6,9,3,5,6,8,7,4,4,4,9,5,7,8,3,3,9,5,5,9,4,6,4,5,8,7,9,7,9,8,8,8,8,7,9,3,4,3,7,5,7,9,9,4,6,8,6,3,8,7,6,8,7,3,3,3,9,7,4,8,3,8,7,7,4,7,9,8,9,9,8,7,6,8,9,7,7,7,9,3,4,5,7,6,6,7,6,7,9,5,9,7,9,6,7,7,6,8,6,6,6,9,8,4,7,9,5,8,5,7,5,9,4,8,9,9,8,9,8,5,5,6~7,6,9,9,9,5,6,3,5,5,5,5,7,8,4,3,4,4,4,9,8,6,6,8,8,8,4,9,6,3,3,3,9,8,9,8,7,7,7,9,9,7,4,6,6,6,7,8,3,7,5~6,9,9,9,9,6,4,5,5,5,9,7,8,4,4,4,6,8,5,8,8,8,7,9,3,3,3,3,5,8,9,7,7,7,8,5,7,6,6,6,9,3,4,7~5,9,4,3,9,8,3,6,7,5,3,8,9,8,9,5,8,9,9,9,6,8,4,7,8,3,6,7,4,8,5,7,5,8,3,9,6,7,9,5,5,5,4,8,7,7,9,7,7,3,7,8,4,9,6,9,4,9,3,8,7,8,8,8,6,9,8,9,7,5,9,8,5,8,7,9,5,4,9,9,4,7,7,3,3,3,5,9,3,8,5,6,7,8,6,7,8,9,7,8,4,7,9,3,6,7,7,7,7,9,4,9,6,8,9,6,3,3,5,7,4,7,8,9,5,4,6,4,4,4,9,6,9,4,8,9,7,3,6,4,8,9,6,7,7,6,8,8,6,6,6,6,9,5,7,5,6,6,3,9,9,5,6,9,8,3,7,5,8,6,6,8~6,6,7,7,3,9,9,9,7,4,6,9,3,7,9,5,5,5,6,5,9,9,7,4,8,8,8,8,5,9,7,3,7,9,3,3,3,5,9,8,8,4,7,8,7,7,7,3,8,6,9,9,6,4,4,4,3,8,9,5,8,7,5,6,6,6,4,5,6,8,6,4,8,9~8,9,8,5,9,6,6,5,8,6,6,4,9,9,9,4,7,5,8,4,4,7,6,5,7,7,9,8,5,5,5,5,8,5,9,9,7,6,8,9,3,8,8,5,8,8,8,7,6,3,7,8,3,7,9,5,9,8,6,5,3,3,3,9,9,3,5,7,4,7,3,9,7,8,5,3,7,7,7,9,6,9,9,8,8,6,4,6,7,9,4,7,4,4,4,6,3,7,7,3,7,6,8,9,3,7,9,8,6,6,6,8,4,7,4,3,9,6,9,4,8,6,5,9,9&t=stack&reel_set1=6,7,6,9,6,8,5,9,9,9,9,7,8,3,5,8,9,4,5,5,5,5,7,7,4,5,9,6,6,7,4,4,4,8,8,7,8,9,5,8,3,3,8,8,8,8,9,6,9,7,3,6,9,3,3,3,3,7,7,3,6,3,9,4,4,7,7,7,9,7,4,6,9,8,5,8,6,6,6,4,7,5,6,6,9,9,4,8,8~6,3,9,9,9,6,7,3,5,5,5,7,4,9,4,4,4,8,8,4,9,8,8,8,7,5,6,3,3,3,9,9,6,7,7,7,8,4,9,6,6,6,3,8,5,5,7~7,6,8,5,9,8,9,6,9,7,9,9,9,7,4,6,8,7,5,9,3,7,4,8,7,5,5,5,8,8,6,6,3,7,8,5,4,7,3,4,4,4,4,3,8,5,5,9,5,4,7,8,8,9,8,8,8,8,5,9,8,9,9,7,8,6,4,8,6,3,3,3,6,4,6,6,4,9,9,3,6,6,7,7,7,7,3,3,9,9,7,9,9,8,6,5,3,7,6,6,6,9,6,5,7,4,7,3,9,6,8,9,5,4~7,7,8,8,4,6,9,4,6,9,6,5,4,5,8,7,6,9,9,9,8,4,6,9,5,8,6,6,7,6,6,9,9,4,8,4,5,9,5,5,5,6,5,6,8,7,7,4,7,6,4,6,9,8,7,9,9,6,7,4,4,4,8,4,7,5,4,9,7,8,6,6,7,3,9,9,3,7,6,3,8,8,8,4,9,6,5,3,9,9,3,7,3,7,8,5,5,6,5,7,9,3,3,3,8,9,9,4,9,4,6,8,3,3,6,6,8,9,9,8,8,7,7,7,7,7,9,8,7,9,4,9,8,6,8,8,5,3,8,9,7,7,6,6,6,6,3,8,3,5,9,9,5,7,5,7,8,3,8,5,8,4,9,3,7,3~8,3,9,5,5,4,9,9,5,6,4,6,9,9,4,9,9,9,6,8,7,4,9,4,7,3,7,4,5,8,7,7,5,6,5,5,5,9,9,5,7,7,8,6,9,5,9,7,9,6,9,5,8,8,8,8,6,6,4,5,6,5,3,4,3,7,6,5,8,3,9,6,3,3,3,3,8,8,6,6,9,7,7,3,9,9,3,4,9,7,8,6,7,7,7,6,9,4,7,6,7,6,8,9,5,5,7,4,8,8,7,4,4,4,8,5,9,9,3,7,8,7,8,9,9,8,3,8,3,4,6,6,6,7,8,4,6,6,7,8,8,6,8,7,8,9,9,3,8,4,6~6,5,8,7,9,8,8,7,5,8,3,5,9,9,9,9,9,5,6,6,7,4,6,4,9,8,7,8,7,5,5,5,8,7,6,5,3,8,7,5,6,6,9,3,7,8,8,8,9,3,6,3,7,7,8,5,9,6,6,8,7,9,3,3,3,8,6,7,9,8,8,4,7,4,7,5,6,8,7,7,7,5,4,4,9,8,9,8,9,3,5,3,8,9,6,4,4,4,8,4,9,4,9,4,9,5,6,9,8,4,7,6,6,6,3,7,9,6,3,9,6,6,7,3,6,9,4,7,3~6,5,5,8,6,9,5,8,4,7,3,3,8,6,9,9,9,9,7,8,8,6,4,6,7,3,4,7,8,4,6,8,9,5,5,5,7,5,7,5,3,8,8,9,6,9,5,3,5,9,5,9,8,8,8,9,3,5,8,4,9,6,5,7,6,6,3,8,7,9,9,3,3,3,7,3,4,7,9,8,8,5,9,6,9,7,9,8,6,7,7,7,8,4,8,6,7,4,6,9,7,9,8,4,7,7,8,4,4,4,4,8,9,5,6,4,9,7,9,9,7,3,5,9,7,6,7,6,6,6,6,8,6,3,3,6,7,5,9,6,8,3,4,7,8,4,3&reel_set4=3,3,5,5,9,9,7,7~6,6,4,4,8,8~7,5,5,9,9,5,3,5,7,5,3,9,9,5,7,5,3,7,9,7,9,3,5,9,7,9,3,7,3,3,7,5,3,3~6,6,4,4,8,8~5,3,5,3,5,9,9,7,3,5,3,7,5,5,9,7,5,9,7,3,9,5,5,7,3,7,9,9,3,9,3,7,3,5,3,7,3,7,9,3,7,5,5,7,9,5,9,3,9,7~8,4,6,8,4,6,6,6,4,6,8,4,4,4,6,8,8,4,6,8,4,4,8,8,8,4,8,6,8,8,4,8,4,6,4,4,6,6,8,4,8,8,6,4,4,8,4,4,8,6,8,6,8,8,6,8,6~5,7,5,9,5,9,9,7,3,5,9,7,3,7,5,3,7,9,3,5,3,7,3,5,7,9,5,9,5,7,9,5,3,7,7,5,3,3,5,3,9,9,3,3&purInit=[{type:\"d\",bet:2000}]&reel_set3=9,7,7,6,4,3,9,9,9,3,5,4,9,8,9,8,5,5,5,9,9,5,1,8,5,7,4,4,4,9,9,7,9,8,6,8,8,8,8,8,7,3,6,4,7,7,3,3,3,6,8,8,4,3,5,8,7,7,7,6,9,5,5,7,9,8,6,6,6,4,4,9,7,7,6,3,6~5,4,4,7,9,9,9,6,9,6,8,8,7,5,5,5,7,6,5,9,3,8,4,4,4,7,8,5,7,9,8,8,8,8,3,8,7,3,8,3,3,3,6,9,9,6,8,9,7,7,7,5,6,9,3,4,7,6,6,6,5,1,4,7,9,4,9~5,4,8,3,4,5,9,3,5,7,3,7,9,9,9,4,9,6,7,6,8,9,9,8,9,4,7,3,5,5,5,8,9,8,9,6,5,5,7,4,8,7,8,3,4,4,4,8,8,7,9,9,8,6,9,6,9,9,8,7,8,8,8,9,5,4,3,4,4,7,6,3,1,7,5,1,3,3,3,6,7,6,8,4,5,8,5,7,8,7,5,9,7,7,7,8,4,8,8,9,9,6,6,9,6,8,6,3,6,6,6,3,7,7,5,9,9,7,6,9,7,4,7,5,3,9~7,9,8,5,5,8,9,8,5,9,9,9,6,6,7,7,5,4,8,8,6,8,4,5,5,5,6,5,4,5,5,9,7,5,8,7,3,4,4,4,4,9,4,6,8,8,9,7,3,3,9,8,8,8,9,8,8,4,7,9,7,3,7,9,3,3,3,7,4,9,5,9,6,8,9,4,7,7,7,7,7,5,1,9,9,7,3,6,9,9,4,6,6,6,6,7,8,7,6,3,6,6,3,8,3,8,9~7,8,4,8,5,7,4,8,9,9,9,5,7,4,9,6,7,5,4,8,5,5,5,9,9,3,7,8,6,5,3,7,6,8,8,8,6,4,5,7,9,7,5,7,3,3,3,3,6,9,9,8,9,7,9,7,9,7,7,7,6,9,3,7,9,4,4,8,5,8,4,4,4,8,9,4,8,9,9,5,6,8,6,6,6,5,7,6,8,9,3,8,1,3,6,6~7,7,5,1,9,9,9,6,4,9,6,3,5,5,5,7,8,8,9,8,9,8,8,8,5,9,6,9,8,3,3,3,5,4,5,6,9,7,7,7,7,8,9,5,3,4,4,4,4,7,7,4,6,7,6,6,6,8,3,6,3,9,8,9~4,8,7,5,4,6,9,9,6,4,7,9,9,7,8,6,7,7,9,7,9,9,9,5,7,9,8,9,9,3,8,8,6,6,7,3,4,3,8,7,9,8,9,8,9,5,5,5,8,7,8,8,1,7,3,6,5,7,6,7,3,7,3,6,7,5,5,7,3,8,8,8,8,9,9,7,4,9,4,6,6,7,4,5,8,8,4,7,5,3,6,5,6,3,3,3,3,8,9,9,6,8,8,9,6,5,6,5,4,3,9,5,9,9,3,8,8,9,7,7,7,7,7,9,8,3,4,9,8,5,9,4,9,4,8,3,6,5,4,4,6,8,5,4,4,4,4,9,9,6,9,7,5,8,5,3,5,7,4,9,4,8,5,7,9,8,8,9,6,6,6,8,1,7,3,7,8,9,9,7,9,7,3,6,5,7,6,5,6,5,8,9,4,7&total_bet_min=10.00";
            }
        }
	
        protected override double PurchaseFreeMultiple
        {
            get { return 100; }
        }
        protected override bool SupportPurchaseFree
        {
            get { return true; }
        }
        protected override bool HasPurEnableOption
        {
            get { return true; }
        }
	
	
        #endregion
        public FruitParty2GameLogic()
        {
            _gameID = GAMEID.FruitParty2;
            GameName = "FruitParty2";
        }
        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, double userBalance, int index, int counter, string initString)
        {
            base.setupDefaultResultParams(dicParams, userBalance, index, counter, initString);
	    	dicParams["reel_set"] = "0";
        }
        protected override void convertWinsByBet(Dictionary<string, string> dicParams, float currentBet)
        {
            base.convertWinsByBet(dicParams, currentBet);
        }
	
        protected override void readBetInfoFromMessage(GITMessage message, string strGlobalUserID, Currencies currency)
        {
            try
            {
                string strInitString = ChipsetManager.Instance.convertTo(currency, this.InitDataString, this.SymbolName);
                var dicParams = splitResponseToParams(strInitString);

                double minChip = 0.0, maxChip = 0.0;
                getMinMaxChip(dicParams["sc"], ref minChip, ref maxChip);


                BasePPSlotBetInfo betInfo = new BasePPSlotBetInfo();
                betInfo.BetPerLine = (float)message.Pop();
                betInfo.LineCount = (int)message.Pop();
		
		
                if (message.DataNum >= 3)
                    betInfo.PurchaseFree = true;
                else
                    betInfo.PurchaseFree = false;
		
                if (betInfo.BetPerLine <= 0.0f)
                {
                    _logger.Error("{0} betInfo.BetPerLine <= 0 in FruitParty2GameLogic::readBetInfoFromMessage {1}", strGlobalUserID, betInfo.BetPerLine);
                    return;
                }
		
                if (!isNotIntergerMultipleBetPerLine(betInfo.BetPerLine, minChip))
                {
                    _logger.Error("{0} betInfo.BetPerLine is illegual: {1} != {2} * integer", strGlobalUserID, betInfo.BetPerLine, minChip);
                    return;
                }

                if (betInfo.LineCount != this.ClientReqLineCount)
                {
                    _logger.Error("{0} betInfo.LineCount is not matched {1} != {2}", strGlobalUserID, betInfo.LineCount, this.ClientReqLineCount);
                    return;
                }
                BasePPSlotBetInfo oldBetInfo = null;
                if (_dicUserBetInfos.TryGetValue(strGlobalUserID, out oldBetInfo))
                {
                    if (oldBetInfo.HasRemainResponse)
                        return;

                    oldBetInfo.BetPerLine   = betInfo.BetPerLine;
                    oldBetInfo.LineCount    = betInfo.LineCount;
                    oldBetInfo.MoreBet      = betInfo.MoreBet;
                    oldBetInfo.PurchaseFree = betInfo.PurchaseFree;
                }
                else
                {
                    _dicUserBetInfos.Add(strGlobalUserID, betInfo);
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occurred in FruitParty2GameLogic::readBetInfoFromMessage {0}", ex);
            }
        }
	
    }
}
