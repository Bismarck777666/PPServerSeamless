using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using GITProtocol;
using System.IO;
using Akka.Actor;
using Newtonsoft.Json;
using Akka.Configuration;
using SlotGamesNode.Database;
using MongoDB.Bson;

namespace SlotGamesNode.GameLogics
{
    class LuckyJoker40ExtraGiftsGameLogic : BaseAmaticSpecAnteBonusGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "LuckyJoker40ExtraGifts";
            }
        }
        protected override long[] BettingButton
        {
            get
            {
                return new long[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30, 35, 40, 45, 50, 60, 70, 80, 90, 100, 150, 200, 300, 400, 500, 1000, 2000 };
            }
        }
        protected override long[] LINES
        {
            get
            {
                return new long[] { 40 };
            }
        }
        protected override string InitString
        {
            get
            {
                return "0a288040404040805050505010101010707070707090404040407070505090606060609050507070708040404040505050508070707070806060600000000060606060303030404040409030303060505000006050505050303030606060607070707040404040606060607070707070404040406060606050505050202020205050505030303070707072b704040404030303030707070707080101010104040404030303030707070707080505050506060a050606060604040404050505050606060604040404050505050a05050505080303030300000000010101010202020206060606070707070a070707070505050503030303060606060000000002020202080303030302020202030303030202020201010101060606060a060606060101010105050505000000000202020201010101040404040a0404040407070707072b709030303030606060604040404000000000101010100000000030303030101010103030303020202020707070708060606060707070701010101050505050a05050505050303030308060606060a06060606080505050505080202020200000000050505050509070707070a0707070704040a07040404040101010107070707040404040902020202030303030902020202010101010202020201010101020202020303030306060606040404040a04040404050505052b602020202060606060a0606060605050505070707070a070707070101010107070707040404040505050506060606050505050a050505050803030303040404040a0404040407070707030303030404040402020202030303030000000000070707070303030300000000000404040402020202010101010606060608030303030606060603030303010101010202020201010101020202020101010108060606060707070705050a07050505050404040400000000002b2030303030707070704040000070404040405050505060606060202020205050505060606060202020201010101010606060609020202020707070702020202040404040101010101000000000101010101030303030404040405050505090303030308070707070404040405050505090101010103030303080404040406060606070707070606060605050505030303030707070700000000070707070404040406060606020202020505050508010101012880b0b0b0b0b0b0b0c0d0b0e0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0f0b10110b0b0b0b0b0b0b0b0b120b0b130b0b0b0b0b0b0b0b0b0b0b0b0b0b141516170b0b0b0b0b0b0b0b0b0b0b180b190b0b1a0b0b0b1b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1c0b1d0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b2b70b0b0b0b0b0c0b0b0b0b0b0b0b0b0b0b0b0b0b0b0d0b0e0b0b0b0b0b0b0b0b0b0b0b0b0b0b0f0b0b100b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b111213140b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b150b0b0b0b0b16170b0b0b0b0b0b0b0b0b0b0b0b0b0b180b190b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1a0b1b1c0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1d0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b2b70b0b0b0b0b0b0b0b0c0b0b0d0b0e0b0b0b0b0b0b0b0b0f0b0b100b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b11120b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b130b140b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b15160b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1718191a0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1c0b0b1d0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b2b60b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0c0b0b0b0b0b0b0b0b0b0b0b0b0b0d0b0e0b0b0f0b0b0b0b0b0b0b0b0b0b0b0b0b0b100b0b110b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b120b0b0b0b0b0b0b0b0b0b0b0b130b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1415160b0b170b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b180b190b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1a1b1c1d0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b2b20b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0c0b0b0b0d0b0e0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0f0b0b100b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1112130b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b141516170b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b180b0b190b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1a0b1b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1c1d0b0b00301010101010101010101010427101000115186a02810101010101010282828110010101010100000000000000000191a1f21421921e22322822d23223c24625025a2642c8312c319031f4325832bc3320338433e835dc37d029101010101010101010101010101010101010101010101010101010101010101010101010101010101023602031a05081e041907061100050e0310000702061d0308150706120417071e07040c16041806030200000d1404130707000f051c1b0223603061018040f07051708061e0704130007041b0114030d0803110108001a04060008150712070516020103190c051e071c011d050e042360216080514051504031e021a050d03020402000506051b0310001c0206180706000c06070007121e1701130e1103061d081907020f0523605020304150201041e0501170604050008061805071901130714011600071006070511010c07010d0f1c0707030e12021d081a1b1e03236051205070c0308061e071d07021c07021801070f03050117070515080700040708070e051e02010d051b061102031619100013071a14236030805031402050f04060d041e040317060e040705130419040806051c0611070116021003001802071d071e1a1b0c04050712050115236051804030008011e02041605061b0501030105140211011301060d07080f01060c040e1e0012060503170305001a0408151c0810191d2360210021e020e03180514060d021c080619030403081d01031705130211070515040005071a08031b070f02051e0412001606030c010223618010212031e11081503010d030f06021b041c02011900011a06010c08071416041e1006050e0613021d000400030602170403080700236061a0605181e020815051408010f0705110413000701060c04001d0206170d04030400100803160002121e191b01050407030e041c062360500110615001d00191e030f080318060800041608010d17051c0304001000130505041a0104141b021e0300020306040c070e05031223600140800160307041002071e070d040013020715001a060401070802041b17010419061e0105021c08081d18110500030e020f120c042360700190200120115051e0616000e04001b02040c08061307051d040f02031a07080301061100070d1400011e0417041c06071803100023601061a08030803021d03051e13020010030c07060119070612030e020d0305110608140406151803021b02050817050f1c061e000616236081e04021600010401000c0018080401041201080f04150311000317051a0e08011d1e0107060d031402041c191b0113100101050306236010818080e00011407001703011c080219071204070f031e051506080d00051001041e031102071606020c00051300071b1d1a08030023602010f0301151e0311040618011905020e04021a08031007021207081d060817020c031b0716001404051c06001306070d00021e0407236011e1604070f05040d05021d05001203001a0318000503061b1307000e0300140501151e011008071703041c020711080c0101190002236010714021e0f0806031c08111608051906071a04011803021d00011507051702080e01070c05070d01001b0205120800101304021e02236071e0c00031600081002080d04030e04021b05081905030f071704001d03041c02061108180615020300120206141e011302081a04071027d2962c80f1010101010101010101010101010101010101010101010101e1f14131716171d11151315210131311131d151d181e121621011151f1d1a151b1d1e151a1e1813151e1413210191c21012111b10191a131e17151215152101911191f1515121c13121b19162101b152101c1c12141b1b141e19191f131112131415181a1f21421921e23224b2642962c82fa2ff10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101001";
            }
        }
        protected override string ExtraAntePurString => "1027d2962c8";
        protected override string ExtraString => "0f1010101010101010101010101010101010101010101010101e1f14131716171d11151315210131311131d151d181e121621011151f1d1a151b1d1e151a1e1813151e1413210191c21012111b10191a131e17151215152101911191f1515121c13121b19162101b152101c1c12141b1b141e19191f131112131415181a1f21421921e23224b2642962c82fa2ff10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101001";
        protected override string ExtraBonusString => "23602031a05081e041907061100050e0310000702061d0308150706120417071e07040c16041806030200000d1404130707000f051c1b0223603061018040f07051708061e0704130007041b0114030d0803110108001a04060008150712070516020103190c051e071c011d050e042360216080514051504031e021a050d03020402000506051b0310001c0206180706000c06070007121e1701130e1103061d081907020f0523605020304150201041e0501170604050008061805071901130714011600071006070511010c07010d0f1c0707030e12021d081a1b1e03236051205070c0308061e071d07021c07021801070f03050117070515080700040708070e051e02010d051b061102031619100013071a14236030805031402050f04060d041e040317060e040705130419040806051c0611070116021003001802071d071e1a1b0c04050712050115236051804030008011e02041605061b0501030105140211011301060d07080f01060c040e1e0012060503170305001a0408151c0810191d2360210021e020e03180514060d021c080619030403081d01031705130211070515040005071a08031b070f02051e0412001606030c010223618010212031e11081503010d030f06021b041c02011900011a06010c08071416041e1006050e0613021d000400030602170403080700236061a0605181e020815051408010f0705110413000701060c04001d0206170d04030400100803160002121e191b01050407030e041c062360500110615001d00191e030f080318060800041608010d17051c0304001000130505041a0104141b021e0300020306040c070e05031223600140800160307041002071e070d040013020715001a060401070802041b17010419061e0105021c08081d18110500030e020f120c042360700190200120115051e0616000e04001b02040c08061307051d040f02031a07080301061100070d1400011e0417041c06071803100023601061a08030803021d03051e13020010030c07060119070612030e020d0305110608140406151803021b02050817050f1c061e000616236081e04021600010401000c0018080401041201080f04150311000317051a0e08011d1e0107060d031402041c191b0113100101050306236010818080e00011407001703011c080219071204070f031e051506080d00051001041e031102071606020c00051300071b1d1a08030023602010f0301151e0311040618011905020e04021a08031007021207081d060817020c031b0716001404051c06001306070d00021e0407236011e1604070f05040d05021d05001203001a0318000503061b1307000e0300140501151e011008071703041c020711080c0101190002236010714021e0f0806031c08111608051906071a04011803021d00011507051702080e01070c05070d01001b0205120800101304021e02236071e0c00031600081002080d04030e04021b05081905030f071704001d03041c02061108180615020300120206141e011302081a0407";
        protected override int ReelSetBitNum => 2;
        protected override int Cols => 10;
        protected override bool SupportMoreBet => true;
        protected double[] MoreBetMultiples => new double[] { 1.25, 1.5, 2 };
        #endregion

        public LuckyJoker40ExtraGiftsGameLogic()
        {
            _gameID     = GAMEID.LuckyJoker40ExtraGifts;
            GameName    = "LuckyJoker40ExtraGifts";
        }
        protected override async Task onLoadSpinData(BsonDocument infoDocument)
        {
            try
            {
                _spinDataDefaultBet             = (double)infoDocument["defaultbet"];
                _normalMaxIDs                   = new int[4];
                _naturalSpinCounts              = new int[4];
                _emptySpinCounts                = new int[4];
                _startIDs                       = new int[4];
                _totalFreeSpinWinRates          = new double[4];
                _minFreeSpinWinRates            = new double[4];

                var defaultBetsArray            = infoDocument["defaultbet"] as BsonArray;
                var normalMaxIDArray            = infoDocument["normalmaxid"] as BsonArray;
                var emptyCountArray             = infoDocument["emptycount"] as BsonArray;
                var normalSelectCountArray      = infoDocument["normalselectcount"] as BsonArray;
                var startIDArray                = infoDocument["startid"] as BsonArray;

                for (int i = 0; i < 4; i++)
                {
                    _normalMaxIDs[i]            = (int)normalMaxIDArray[i];
                    _emptySpinCounts[i]         = (int)emptyCountArray[i];
                    _naturalSpinCounts[i]       = (int)normalSelectCountArray[i];
                    _startIDs[i]                = (int)startIDArray[i];
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occured in loading spin data of game {0} {1}", GameName, ex);
            }
        }
        protected override double getMoreBetMultiple(BaseAmaticSlotBetInfo betInfo)
        {
            return this.MoreBetMultiples[betInfo.MoreBet];
        }
    }
}
