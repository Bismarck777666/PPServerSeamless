using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using GITProtocol;
using System.IO;
using Akka.Actor;
using Newtonsoft.Json;
using Akka.Configuration;
using SlotGamesNode.Database;
using MongoDB.Bson;

namespace SlotGamesNode.GameLogics
{
    class LuckyJokerXmasGameLogic : BaseAmaticSpecAnteBonusGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "LuckyJokerXmas";
            }
        }
        protected override long[] BettingButton
        {
            get
            {
                return new long[] { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30, 35, 40, 45, 50, 60, 70, 80, 90, 100, 150, 200, 300, 400, 500, 1000, 2000 };
            }
        }
        protected override long[] LINES
        {
            get
            {
                return new long[] { 10 };
            }
        }
        protected override string InitString
        {
            get
            {
                return "0a26d0101070707040404050505030303020606060905050506010002050606060707070004040408030303060606070707000404040806060607070700040404080606060707070404040505050303030206060609050505030303020606060905050507070704040405050501010126806060604040405050506060600020202060606060004040405050506060606070a060707070404040803030307070703010a03010505050002020206060607070703010a030105050500040404080303030007070703010a030104040407070700050505080303032680702050505090202020505050904040401010107020a07020901010107070701010106060604040407020a070203030308060606040404070a04070707010101080606060404040002020208060606050505030303020202000101010002020205050507020a0702268020206020a06020404040707070005050506020a0602010101080606060404040707070101010707070303030404040007070708060606050a060505050303030006060605050506020a06020303030101010806060605050504040400070707000101010002020227f0805050503030303090606060101010404040003030304040405050501010103030300070707050505000202020001010103030300070707080404040707070804040402020200010101000606060005050506020301050606060907070700010101060606020202050505020202040404090606060202020707070303030326d0b0b0b0c0b0b0b0b0d0b0e0b0b0b0b0b0b0b0b0b0b0b0f100b0b0b0b0b0b0b0b0b0b0b0b110b12130b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b140b0b0b0b0b0b0b0b0b0b150b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1617180b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b2680b0b0c0b0b0b0b0b0b0b0b0b0b0b0d0b0b0b0b0b0b0e0b0f0b0b0b0b0b0b0b0b0b0b0b0b0b100b0b0b0b0b110b0b0b0b0b12130b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1415160b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b170b0b180b0b0b0b0b2680b0b0b0c0b0b0b0b0b0b0b0b0b0b0b0b0b0d0b0e0b0f0b0b0b0b0b0b0b0b0b0b0b0b0b0b100b0b0b0b0b110b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b12130b0b0b0b0b0b1415160b0b0b0b0b0b0b0b0b0b0b0b170b0b0b0b0b0b0b0b180b0b0b0b0b0b2680b0b0b0b0b0c0b0b0d0b0b0b0b0b0b0b0b0b0b0b0e0b0f0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b10110b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b120b0b0b130b0b0b140b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1516170b0b0b0b0b0b0b0b0b0b0b0b180b0b0b0b0b0b0b0b27f0b0b0b0b0b0b0b0b0b0c0b0b0b0b0d0b0b0b0b0b0b0e0b0b0b0b0f0b0b0b0b100b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b11120b0b0b0b0b0b0b0b0b0b0b0b130b0b0b0b0b0b0b0b0b0b140b150b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b1617180b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b0b003010101010101010101010104271010001131f40a101010101010100a0a0a1100101010101000000000000000001311121314151a1f21421921e22322822d23223c24625025a2640b101010101010101010101023602031a050800041907061100050e0310000702061d0308150706120417070007040c16041806030200000d1404130707000f051c1b0223603061018040f0705170806010704130007041b0114030d0803110108001a04060008150712070516020103190c0500071c011d050e0423602160805140515040300021a050d03020402000506051b0310001c0206180706000c0607000712001701130e1103061d081907020f052360502030415020104070501170604050008061805071901130714011600071006070511010c07010d0f1c0707030e12021d081a1b0003236051205070c03080600071d07021c07021801070f03050117070515080700040708070e050302010d051b061102031619100013071a14236030805031402050f04060d0400040317060e040705130419040806051c0611070116021003001802071d07081a1b0c04050712050115236051804030008010002041605061b0501030105140211011301060d07080f01060c040e000012060503170305001a0408151c0810191d23602100200020e03180514060d021c080619030403081d01031705130211070515040005071a08031b070f0205050412001606030c010223618010212030011081503010d030f06021b041c02011900011a06010c0807141604081006050e0613021d000400030602170403080700236061a06051800020815051408010f0705110413000701060c04001d0206170d040304001008031600021202191b01050407030e041c062360500110615001d001900030f080318060800041608010d17051c0304001000130505041a0104141b02070300020306040c070e050312236001408001603070410020700070d040013020715001a060401070802041b1701041906000105021c08081d18110500030e020f120c04236070019020012011505000616000e04001b02040c08061307051d040f02031a07080301061100070d140001000417041c06071803100023601061a08030803021d03050813020010030c07060119070612030e020d0305110608140406151803021b02050817050f1c0605000616236080004021600010401000c0018080401041201080f04150311000317051a0e08011d060107060d031402041c191b0113100101050306102822a02c80f1010101010101010101010101010101010101910161e2101016121f1712121f101a1c1a2101b1e1d191d1c1e210111c1a17131c1d10191d21010171c1f111f182101c1915181e13161715161b12191614210161817171112131415181a1f21421921e23224b2642962c82fa2ff10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101001";
            }
        }
        protected override string ExtraAntePurString => "102822a02c8";
        protected override string ExtraString => "0f1010101010101010101010101010101010101910161e2101016121f1712121f101a1c1a2101b1e1d191d1c1e210111c1a17131c1d10191d21010171c1f111f182101c1915181e13161715161b12191614210161817171112131415181a1f21421921e23224b2642962c82fa2ff10101010101010101010101010101010101010101010101010101010101010101010101010101010101010101001";
        protected override string ExtraBonusString => "23602031a050800041907061100050e0310000702061d0308150706120417070007040c16041806030200000d1404130707000f051c1b0223603061018040f0705170806010704130007041b0114030d0803110108001a04060008150712070516020103190c0500071c011d050e0423602160805140515040300021a050d03020402000506051b0310001c0206180706000c0607000712001701130e1103061d081907020f052360502030415020104070501170604050008061805071901130714011600071006070511010c07010d0f1c0707030e12021d081a1b0003236051205070c03080600071d07021c07021801070f03050117070515080700040708070e050302010d051b061102031619100013071a14236030805031402050f04060d0400040317060e040705130419040806051c0611070116021003001802071d07081a1b0c04050712050115236051804030008010002041605061b0501030105140211011301060d07080f01060c040e000012060503170305001a0408151c0810191d23602100200020e03180514060d021c080619030403081d01031705130211070515040005071a08031b070f0205050412001606030c010223618010212030011081503010d030f06021b041c02011900011a06010c0807141604081006050e0613021d000400030602170403080700236061a06051800020815051408010f0705110413000701060c04001d0206170d040304001008031600021202191b01050407030e041c062360500110615001d001900030f080318060800041608010d17051c0304001000130505041a0104141b02070300020306040c070e050312236001408001603070410020700070d040013020715001a060401070802041b1701041906000105021c08081d18110500030e020f120c04236070019020012011505000616000e04001b02040c08061307051d040f02031a07080301061100070d140001000417041c06071803100023601061a08030803021d03050813020010030c07060119070612030e020d0305110608140406151803021b02050817050f1c0605000616236080004021600010401000c0018080401041201080f04150311000317051a0e08011d060107060d031402041c191b0113100101050306";
        protected override int ReelSetBitNum => 2;
        protected override int Cols => 10;
        protected override bool SupportMoreBet => true;
        protected double[] MoreBetMultiples => new double[] { 1.3, 1.6, 2 };
        #endregion

        public LuckyJokerXmasGameLogic()
        {
            _gameID     = GAMEID.LuckyJokerXmas;
            GameName    = "LuckyJokerXmas";
        }
        protected override async Task onLoadSpinData(BsonDocument infoDocument)
        {
            try
            {
                _spinDataDefaultBet             = (double)infoDocument["defaultbet"];
                _normalMaxIDs                   = new int[4];
                _naturalSpinCounts              = new int[4];
                _emptySpinCounts                = new int[4];
                _startIDs                       = new int[4];
                _totalFreeSpinWinRates          = new double[4];
                _minFreeSpinWinRates            = new double[4];

                var defaultBetsArray            = infoDocument["defaultbet"] as BsonArray;
                var normalMaxIDArray            = infoDocument["normalmaxid"] as BsonArray;
                var emptyCountArray             = infoDocument["emptycount"] as BsonArray;
                var normalSelectCountArray      = infoDocument["normalselectcount"] as BsonArray;
                var startIDArray                = infoDocument["startid"] as BsonArray;

                for (int i = 0; i < 4; i++)
                {
                    _normalMaxIDs[i]            = (int)normalMaxIDArray[i];
                    _emptySpinCounts[i]         = (int)emptyCountArray[i];
                    _naturalSpinCounts[i]       = (int)normalSelectCountArray[i];
                    _startIDs[i]                = (int)startIDArray[i];
                }
            }
            catch (Exception ex)
            {
                _logger.Error("Exception has been occured in loading spin data of game {0} {1}", GameName, ex);
            }
        }
        protected override double getMoreBetMultiple(BaseAmaticSlotBetInfo betInfo)
        {
            return this.MoreBetMultiples[betInfo.MoreBet];
        }
    }
}
