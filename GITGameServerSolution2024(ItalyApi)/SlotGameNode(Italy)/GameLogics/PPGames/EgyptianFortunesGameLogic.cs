using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using GITProtocol;

namespace SlotGamesNode.GameLogics
{
    class EgyptianFortunesGameLogic : BasePPSlotGame
    {
        #region 게임고유속성값
        protected override string SymbolName
        {
            get
            {
                return "vs20egypttrs";
            }
        }
        protected override bool SupportReplay
        {
            get
            {
                return false;
            }
        }
        protected override int ClientReqLineCount
        {
            get
            {
                return 20;
            }
        }
        protected override int ServerResLineCount
        {
            get
            {
                return 20;
            }
        }
        protected override int ROWS
        {
            get
            {
                return 3;
            }
        }
        protected override string InitDataString
        {
            get
            {
                return "def_s=11,12,10,11,12,1,3,1,2,2,7,10,12,12,7&rs_cfg_mask=type,sym,sym_count,rs_count,game_stage&cfgs=2488&ver=2&index=1&balance_cash=362,910.00&reel_set_size=11&def_sb=10,11,9,6,8&def_sa=7,5,4,4,3&scatters=1~1,1,1,0,0~6,6,6,0,0~1,1,1,1,1&gmb=0,0,0&rt=d&stime=1620143529813&rs_cfg_type=aggregate&reel_set10=10,4,10,3,10,4,10,4,10,3,10,4,10,4,10,3,10,4,10,4~10,3,10,4,10,3,10,3,10,3,10,4,10,3,10,3,10,4,10,3~3,4,10,4,3,4,10,4,3,4,10,4,3,4,10,4,3,10,3,4~10,4,10,3,10,3,10,2,10,3,10,4,10,3,10,3,10,3,10,4~3,4,10,4,10,4,10,4,10,4,10,4,3,4,10,4,3,10,3,4&sc=0.01,0.02,0.05,0.10,0.25,0.50,1.00,3.00,5.00&defc=0.10&wilds=2~5000,1000,100,25,0~1,1,1,1,1&bonuses=0&fsbonus=&paytable=0,0,0,0,0;0,0,0,0,0;0,0,0,0,0;1000,600,50,0,0;800,400,25,0,0;500,200,20,0,0;400,100,15,0,0;300,90,15,0,0;200,80,12,0,0;150,70,10,0,0;100,60,8,0,0;60,50,5,0,0;50,40,4,0,0&rtp=94.00&rs_cfg=0l~2~2~2~bs;l~3~3~3~bs;l~4~3~3~bs;l~5~3~3~bs;l~6~4~4~bs;l~7~4~4~bs;l~8~4~4~bs;l~9~4~4~bs;l~10~5~5~bs;l~11~5~5~bs;l~12~5~5~bs;l~2~2~2~rs;l~3~3~3~rs;l~4~3~3~rs;l~5~3~3~rs;l~6~4~4~rs;l~7~4~4~rs;l~8~4~4~rs;l~9~4~4~rs;l~10~5~5~rs;l~11~5~5~rs;l~12~5~5~rs&reel_set0=12,8,6,12,9,6,7,12,2,9,4,12,9,5,6,7,11,1,7,11,12,5,11,12,5,1,10,12,4,8,11,3,12,10,4,8~6,12,9,10,11,5,9,8,2,7,10,8,11,4,7,8,12,7,6,12,9,11,10,3,11,8,9,10,12,3,10,11,4,8,11,6~3,11,8,12,10,11,7,8,2,6,7,9,11,3,9,6,5,10,1,12,10,5,12,1,5,6,9,10,12,9,4,1,7,10,3,9~12,8,9,6,12,3,5,11,2,12,5,10,8,9,10,12,11,10,4,12,6,10,9,5,3,9,11,4,8,7,10,6,5,10,3,6~4,8,7,6,8,4,10,3,2,7,11,4,1,6,4,9,8,10,9,11,12,9,11,10,9,1,5,8,12,9,10,7,8,1,11,7&reel_set2=9,4,6,9,4,6,9,4,6,9,4,6,9,4,6,9,4,6,9,4~9,6,9,6,9,6,9,2,6,4,6,4,6,9,6,4,9,4,9,6~9,4,9,6,9,4,9,4,9,6,9,4,9,6,9,4,9,4,9,4~6,9,4,9,6,9,4,9,2,9,6,4,6,4,6,9,6,4,6,9~9,6,9,4,9,6,9,6,9,6,9,4,9,6,9,4,9,6,9,6&reel_set1=9,7,12,9,7,12,9,7,12,9,7,12,9,7,12,9,7,12,9,7~7,12,9,12,9,7,12,2,12,7,12,7,9,7,12,7,12,7,12,7~9,7,12,9,7,12,9,7,12,9,7,12,9,7,12,9,7,12,9,7~12,9,12,9,12,7,9,2,12,9,12,9,12,9,12,9,12,9,12,9~9,7,12,9,7,12,9,7,12,9,7,12,9,7,12,9,7,12,9,7&reel_set4=9,8,12,9,8,12,9,8,12,9,8,12,9,8,12,9,8,12,9,8~12,9,12,9,12,9,12,2,9,12,8,12,9,8,12,9,8,12,9,8~9,8,12,9,8,12,9,8,12,9,8,12,9,8,12,9,8,12,9,8~12,8,12,9,12,8,12,2,12,8,12,9,12,8,12,9,12,8,12,9~9,8,12,9,8,12,9,8,12,9,8,12,9,8,12,9,8,12,9,8&reel_set3=11,5,11,3,11,3,11,5,3,11,3,11,5,11,3,11,5,3,11,5~5,11,5,3,5,11,5,2,5,11,5,11,5,11,3,11,5,11,5,11~11,5,11,5,11,5,11,3,11,5,11,5,11,3,11,5,11,5,11,3~11,5,11,5,11,5,11,2,5,11,3,11,5,11,3,11,5,11,3,11~11,3,11,3,11,5,11,3,11,5,11,3,11,3,11,3,11,3,11,3&reel_set6=10,6,12,10,6,12,10,6,12,10,6,12,10,6,12,10,6,12,10,6~10,12,10,12,10,12,10,2,10,12,10,12,10,6,12,6,12,6,10,12~10,6,12,10,6,12,10,6,12,10,6,12,10,6,12,10,6,12,10,6~10,12,10,12,10,12,10,2,12,10,12,10,6,12,10,12,6,12,10,12~10,6,12,10,6,12,10,6,12,6,10,6,12,6,12,10,6,12,10,6&reel_set5=10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11~10,11,10,11,10,11,10,2,10,11,10,11,10,11,4,11,10,11,10,11~10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11~10,11,10,11,10,11,10,11,10,11,10,11,10,4,2,11,10,11,10,11~10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11,4,10,11&reel_set8=4,6,4,6,4,3,4,6,4,6,4,3,4,6,4,6,4,3,4,6~3,6,4,6,3,6,3,6,3,6,4,6,3,6,3,6,4,6,3,6~4,3,4,6,4,3,4,6,4,3,4,6,4,3,6,3,4,6,4,3~3,6,4,6,4,6,3,2,3,6,4,6,4,6,3,6,4,6,3,4~4,6,4,6,4,3,4,6,3,6,4,3,4,6,3,6,4,3,4,3&reel_set7=5,4,5,3,5,4,5,3,5,4,5,3,5,4,5,4,5,3,5,4~3,4,3,4,5,4,3,4,3,4,5,4,3,4,3,4,5,4,3,4~5,3,5,3,5,4,5,3,5,3,5,3,5,4,3,4,5,3,5,4~5,4,5,3,5,4,5,3,5,2,5,3,5,4,5,3,5,3,5,3~5,4,5,3,5,4,5,3,5,4,5,3,5,4,3,4,5,3,5,4&reel_set9=5,7,5,7,5,3,5,7,5,7,5,7,5,7,5,3,5,7,5,3~7,3,7,3,7,2,7,5,7,3,7,3,7,5,7,3,7,3,7,5~3,5,7,5,3,5,7,5,3,5,7,5,3,5,7,5,3,7,3,5~7,5,7,3,5,2,7,5,7,3,5,3,7,5,7,3,7,3,7,5~3,5,7,5,7,5,7,5,3,5,7,5,7,5,7,5,3,7,3,5";
            }
        }
        #endregion

        public EgyptianFortunesGameLogic()
        {
            _gameID = GAMEID.EgyptianFortunes;
            GameName = "EgyptianFortunes";
        }

        protected override void setupDefaultResultParams(Dictionary<string, string> dicParams, int currency, double userBalance, int index, int counter)
        {
            base.setupDefaultResultParams(dicParams, currency, userBalance, index, counter);
            dicParams["reel_set"] = "0";
        }
    }
}
